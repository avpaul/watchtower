// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Fellow History Container renders to match shapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FellowHistory
    averageRatings={
        Object {
            "communication": "0.00",
            "initiative": "0.33",
            "integration": "0.00",
            "professionalism": "0.00",
            "quality": "0.1",
            "quantity": "0.41",
          }
    }
    fellowSummaryDetails={
        Array [
            Object {
              "apprenticeshipTeam": "Watch Tower",
              "email": "kingsley.obot@andela.com",
              "id": 10,
              "managerEmail": "kesiena.akpobome@andela.com",
              "managerName": "Kesiena Akpobome",
              "managerRole": "TTL",
              "name": "Kingsley Obot",
              "overall_average": 1,
              "overall_status": "onTrack",
              "picture": null,
              "project": "Watch Tower",
              "submitted": 16,
              "total": 16,
            },
          ]
    }
    getFellowHistoryData={[Function]}
    history={
        Object {
            "push": [Function],
          }
    }
    lmsLoading={false}
    lmsSubmissions={
        Array [
            Object {
              "assignment": Object {
                "course_id": 282,
                "id": 2465,
                "name": "Output 3.2: Communicating Proactively",
              },
              "course_id": 282,
              "due_date": "2019-02-22",
              "fellow_id": "-LLUWWd2rDslm51iDJzh",
              "graded_at": "2019-02-22",
              "level": "D0B",
              "score": 2,
              "submitted_at": "2019-02-22 14:20:52",
            },
          ]
    }
    match={
        Object {
            "params": Object {
              "name": "kingsley.obot",
            },
          }
    }
    ratings={
        Array [
            Object {
              "scores": Array [
                Object {
                  "attribute": "Quantity",
                  "score": 1,
                },
                Object {
                  "attribute": "Quality",
                  "score": 2,
                },
                Object {
                  "attribute": "Initiative",
                  "score": 2,
                },
                Object {
                  "attribute": "Communication",
                  "score": 2,
                },
                Object {
                  "attribute": "Professionalism",
                  "score": 0,
                },
                Object {
                  "attribute": "Integration",
                  "score": 0,
                },
              ],
            },
          ]
    }
    ratingsLoading={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Route
          path="/developers/pip/activation/:name"
          render={[Function]}
/>,
        <Route
          path="/developers/:name"
          render={[Function]}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "path": "/developers/pip/activation/:name",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "path": "/developers/:name",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Route
            path="/developers/pip/activation/:name"
            render={[Function]}
/>,
          <Route
            path="/developers/:name"
            render={[Function]}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "path": "/developers/pip/activation/:name",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "path": "/developers/:name",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
