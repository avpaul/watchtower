// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile Dropdown renders an empty div if the user object does not contain data 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProfileDropDown
    user={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dropdown-item disabled pl-0 pr-0"
>
          <div />
</div>,
        <a
          className="dropdown-item"
          data-target="#logout-modal"
          data-toggle="modal"
          href="/"
>
          Log out
</a>,
      ],
      "className": "dropdown-menu dropdown-menu-right",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div />,
          "className": "dropdown-item disabled pl-0 pr-0",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Log out",
          "className": "dropdown-item",
          "data-target": "#logout-modal",
          "data-toggle": "modal",
          "href": "/",
        },
        "ref": null,
        "rendered": "Log out",
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dropdown-item disabled pl-0 pr-0"
>
            <div />
</div>,
          <a
            className="dropdown-item"
            data-target="#logout-modal"
            data-toggle="modal"
            href="/"
>
            Log out
</a>,
        ],
        "className": "dropdown-menu dropdown-menu-right",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div />,
            "className": "dropdown-item disabled pl-0 pr-0",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Log out",
            "className": "dropdown-item",
            "data-target": "#logout-modal",
            "data-toggle": "modal",
            "href": "/",
          },
          "ref": null,
          "rendered": "Log out",
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Profile Dropdown renders to match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProfileDropDown
    user={
        Object {
            "name": "Test User",
            "picture": "http://",
            "roles": Object {
              "Fellow": "ID",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dropdown-item disabled pl-0 pr-0"
>
          <div
                    className="profile-details"
          >
                    <div
                              className="profile-details__image"
                    >
                              <img
                                        alt="Test User profile-details pic"
                                        src="http://"
                              />
                    </div>
                    <div
                              className="profile-details__right"
                    >
                              <div
                                        className="profile-details__name"
                              >
                                        Test User
                              </div>
                              <div
                                        className="profile-details__role"
                              >
                                        Fellow
                              </div>
                    </div>
          </div>
</div>,
        <a
          className="dropdown-item"
          data-target="#logout-modal"
          data-toggle="modal"
          href="/"
>
          Log out
</a>,
      ],
      "className": "dropdown-menu dropdown-menu-right",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="profile-details"
>
            <div
                        className="profile-details__image"
            >
                        <img
                                    alt="Test User profile-details pic"
                                    src="http://"
                        />
            </div>
            <div
                        className="profile-details__right"
            >
                        <div
                                    className="profile-details__name"
                        >
                                    Test User
                        </div>
                        <div
                                    className="profile-details__role"
                        >
                                    Fellow
                        </div>
            </div>
</div>,
          "className": "dropdown-item disabled pl-0 pr-0",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="profile-details__image"
>
                <img
                                alt="Test User profile-details pic"
                                src="http://"
                />
</div>,
              <div
                className="profile-details__right"
>
                <div
                                className="profile-details__name"
                >
                                Test User
                </div>
                <div
                                className="profile-details__role"
                >
                                Fellow
                </div>
</div>,
            ],
            "className": "profile-details",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Test User profile-details pic"
                  src="http://"
/>,
                "className": "profile-details__image",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Test User profile-details pic",
                  "src": "http://",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="profile-details__name"
>
                    Test User
</div>,
                  <div
                    className="profile-details__role"
>
                    Fellow
</div>,
                ],
                "className": "profile-details__right",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Test User",
                    "className": "profile-details__name",
                  },
                  "ref": null,
                  "rendered": "Test User",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Fellow",
                    "className": "profile-details__role",
                  },
                  "ref": null,
                  "rendered": "Fellow",
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Log out",
          "className": "dropdown-item",
          "data-target": "#logout-modal",
          "data-toggle": "modal",
          "href": "/",
        },
        "ref": null,
        "rendered": "Log out",
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dropdown-item disabled pl-0 pr-0"
>
            <div
                        className="profile-details"
            >
                        <div
                                    className="profile-details__image"
                        >
                                    <img
                                                alt="Test User profile-details pic"
                                                src="http://"
                                    />
                        </div>
                        <div
                                    className="profile-details__right"
                        >
                                    <div
                                                className="profile-details__name"
                                    >
                                                Test User
                                    </div>
                                    <div
                                                className="profile-details__role"
                                    >
                                                Fellow
                                    </div>
                        </div>
            </div>
</div>,
          <a
            className="dropdown-item"
            data-target="#logout-modal"
            data-toggle="modal"
            href="/"
>
            Log out
</a>,
        ],
        "className": "dropdown-menu dropdown-menu-right",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="profile-details"
>
              <div
                            className="profile-details__image"
              >
                            <img
                                          alt="Test User profile-details pic"
                                          src="http://"
                            />
              </div>
              <div
                            className="profile-details__right"
              >
                            <div
                                          className="profile-details__name"
                            >
                                          Test User
                            </div>
                            <div
                                          className="profile-details__role"
                            >
                                          Fellow
                            </div>
              </div>
</div>,
            "className": "dropdown-item disabled pl-0 pr-0",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="profile-details__image"
>
                  <img
                                    alt="Test User profile-details pic"
                                    src="http://"
                  />
</div>,
                <div
                  className="profile-details__right"
>
                  <div
                                    className="profile-details__name"
                  >
                                    Test User
                  </div>
                  <div
                                    className="profile-details__role"
                  >
                                    Fellow
                  </div>
</div>,
              ],
              "className": "profile-details",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <img
                    alt="Test User profile-details pic"
                    src="http://"
/>,
                  "className": "profile-details__image",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "Test User profile-details pic",
                    "src": "http://",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="profile-details__name"
>
                      Test User
</div>,
                    <div
                      className="profile-details__role"
>
                      Fellow
</div>,
                  ],
                  "className": "profile-details__right",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Test User",
                      "className": "profile-details__name",
                    },
                    "ref": null,
                    "rendered": "Test User",
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Fellow",
                      "className": "profile-details__role",
                    },
                    "ref": null,
                    "rendered": "Fellow",
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Log out",
            "className": "dropdown-item",
            "data-target": "#logout-modal",
            "data-toggle": "modal",
            "href": "/",
          },
          "ref": null,
          "rendered": "Log out",
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
