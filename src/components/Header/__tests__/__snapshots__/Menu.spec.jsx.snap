// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu Component Test Suite renders witout error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu
    activeItems={
        Object {
            "dashboard": true,
            "fellows": false,
            "settings": true,
          }
    }
    handleMenuClick={[Function]}
    items={
        Array [
            Object {
              "activeIcon": <div
                className="active-icon"
        />,
              "dropdown": Array [
                "All Developers",
                "Developers under PIP",
              ],
              "icon": <div
                className="default-icon"
        />,
              "key": "fellows",
              "name": "Fellows",
              "path": "#",
            },
            Object {
              "activeIcon": <div
                className="active-icon"
        />,
              "dropdown": Array [],
              "icon": <div
                className="default-icon"
        />,
              "key": "dashboard",
              "name": "Dashboard",
              "path": "#",
            },
          ]
    }
    role="WATCH_TOWER_LF"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <MenuLink
          handleMenuClick={[Function]}
          isActive={false}
          link={
                    Object {
                              "activeIcon": <div
                                className="active-icon"
                    />,
                              "dropdown": Array [
                                "All Developers",
                                "Developers under PIP",
                              ],
                              "icon": <div
                                className="default-icon"
                    />,
                              "key": "fellows",
                              "name": "Fellows",
                              "path": "#",
                            }
          }
          role="WATCH_TOWER_LF"
/>,
        <MenuLink
          handleMenuClick={[Function]}
          isActive={true}
          link={
                    Object {
                              "activeIcon": <div
                                className="active-icon"
                    />,
                              "dropdown": Array [],
                              "icon": <div
                                className="default-icon"
                    />,
                              "key": "dashboard",
                              "name": "Dashboard",
                              "path": "#",
                            }
          }
          role="WATCH_TOWER_LF"
/>,
      ],
      "className": "header--bottom d-flex justify-content-center",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "weak-key-0",
        "nodeType": "function",
        "props": Object {
          "handleMenuClick": [Function],
          "isActive": false,
          "link": Object {
            "activeIcon": <div
              className="active-icon"
/>,
            "dropdown": Array [
              "All Developers",
              "Developers under PIP",
            ],
            "icon": <div
              className="default-icon"
/>,
            "key": "fellows",
            "name": "Fellows",
            "path": "#",
          },
          "role": "WATCH_TOWER_LF",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "weak-key-1",
        "nodeType": "function",
        "props": Object {
          "handleMenuClick": [Function],
          "isActive": true,
          "link": Object {
            "activeIcon": <div
              className="active-icon"
/>,
            "dropdown": Array [],
            "icon": <div
              className="default-icon"
/>,
            "key": "dashboard",
            "name": "Dashboard",
            "path": "#",
          },
          "role": "WATCH_TOWER_LF",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <MenuLink
            handleMenuClick={[Function]}
            isActive={false}
            link={
                        Object {
                                    "activeIcon": <div
                                      className="active-icon"
                        />,
                                    "dropdown": Array [
                                      "All Developers",
                                      "Developers under PIP",
                                    ],
                                    "icon": <div
                                      className="default-icon"
                        />,
                                    "key": "fellows",
                                    "name": "Fellows",
                                    "path": "#",
                                  }
            }
            role="WATCH_TOWER_LF"
/>,
          <MenuLink
            handleMenuClick={[Function]}
            isActive={true}
            link={
                        Object {
                                    "activeIcon": <div
                                      className="active-icon"
                        />,
                                    "dropdown": Array [],
                                    "icon": <div
                                      className="default-icon"
                        />,
                                    "key": "dashboard",
                                    "name": "Dashboard",
                                    "path": "#",
                                  }
            }
            role="WATCH_TOWER_LF"
/>,
        ],
        "className": "header--bottom d-flex justify-content-center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "weak-key-0",
          "nodeType": "function",
          "props": Object {
            "handleMenuClick": [Function],
            "isActive": false,
            "link": Object {
              "activeIcon": <div
                className="active-icon"
/>,
              "dropdown": Array [
                "All Developers",
                "Developers under PIP",
              ],
              "icon": <div
                className="default-icon"
/>,
              "key": "fellows",
              "name": "Fellows",
              "path": "#",
            },
            "role": "WATCH_TOWER_LF",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "weak-key-1",
          "nodeType": "function",
          "props": Object {
            "handleMenuClick": [Function],
            "isActive": true,
            "link": Object {
              "activeIcon": <div
                className="active-icon"
/>,
              "dropdown": Array [],
              "icon": <div
                className="default-icon"
/>,
              "key": "dashboard",
              "name": "Dashboard",
              "path": "#",
            },
            "role": "WATCH_TOWER_LF",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
