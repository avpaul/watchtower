// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test LfTtlSummaryCard snapshots LfTtlSummaryCard should display only ttls 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LfTtlSummaryCard
    fellowsCount={8}
    filterFellows={[Function]}
    id={1}
    lfTtlCheckId={1}
    loading={false}
    name="Test TTL"
    picture=""
    styles={
        Object {
            "nameAvatarDisplayStyle": "",
            "titleDisplayStyle": "d-none",
          }
    }
    title="All TTLs"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="ttl-lf-card__title d-none"
>
          All TTLs
</p>,
        <div
          className=""
>
          <img
                    alt=""
                    className="img-responsive rounded-circle ttl-lf-card__avatar"
                    src="profile.svg"
          />
          <p
                    className="ttl-lf-card__name"
          >
                    Test TTL
          </p>
</div>,
        <img
          alt=""
          className="ttl-lf-card__check-mark  "
          src="check-mark.svg"
/>,
        <p
          className="ttl-lf-card__number"
>
          8
</p>,
        <br />,
      ],
      "className": "ttl-lf-card",
      "onClick": [Function],
      "onKeyDown": [Function],
      "role": "presentation",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "All TTLs",
          "className": "ttl-lf-card__title d-none",
        },
        "ref": null,
        "rendered": "All TTLs",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt=""
              className="img-responsive rounded-circle ttl-lf-card__avatar"
              src="profile.svg"
/>,
            <p
              className="ttl-lf-card__name"
>
              Test TTL
</p>,
          ],
          "className": "",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "",
              "className": "img-responsive rounded-circle ttl-lf-card__avatar",
              "src": "profile.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Test TTL",
              "className": "ttl-lf-card__name",
            },
            "ref": null,
            "rendered": "Test TTL",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "",
          "className": "ttl-lf-card__check-mark  ",
          "src": "check-mark.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 8,
          "className": "ttl-lf-card__number",
        },
        "ref": null,
        "rendered": 8,
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="ttl-lf-card__title d-none"
>
            All TTLs
</p>,
          <div
            className=""
>
            <img
                        alt=""
                        className="img-responsive rounded-circle ttl-lf-card__avatar"
                        src="profile.svg"
            />
            <p
                        className="ttl-lf-card__name"
            >
                        Test TTL
            </p>
</div>,
          <img
            alt=""
            className="ttl-lf-card__check-mark  "
            src="check-mark.svg"
/>,
          <p
            className="ttl-lf-card__number"
>
            8
</p>,
          <br />,
        ],
        "className": "ttl-lf-card",
        "onClick": [Function],
        "onKeyDown": [Function],
        "role": "presentation",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "All TTLs",
            "className": "ttl-lf-card__title d-none",
          },
          "ref": null,
          "rendered": "All TTLs",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt=""
                className="img-responsive rounded-circle ttl-lf-card__avatar"
                src="profile.svg"
/>,
              <p
                className="ttl-lf-card__name"
>
                Test TTL
</p>,
            ],
            "className": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "",
                "className": "img-responsive rounded-circle ttl-lf-card__avatar",
                "src": "profile.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Test TTL",
                "className": "ttl-lf-card__name",
              },
              "ref": null,
              "rendered": "Test TTL",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "",
            "className": "ttl-lf-card__check-mark  ",
            "src": "check-mark.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 8,
            "className": "ttl-lf-card__number",
          },
          "ref": null,
          "rendered": 8,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Test LfTtlSummaryCard snapshots LfTtlSummaryCard should display the main card 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LfTtlSummaryCard
    fellowsCount={8}
    filterFellows={[Function]}
    id={1}
    lfTtlCheckId={1}
    loading={false}
    name="Test TTL"
    picture=""
    styles={
        Object {
            "nameAvatarDisplayStyle": "d-none",
            "titleDisplayStyle": "",
          }
    }
    title="All TTLs"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="ttl-lf-card__title "
>
          All TTLs
</p>,
        <div
          className="d-none"
>
          <img
                    alt=""
                    className="img-responsive rounded-circle ttl-lf-card__avatar"
                    src="profile.svg"
          />
          <p
                    className="ttl-lf-card__name"
          >
                    Test TTL
          </p>
</div>,
        <img
          alt=""
          className="ttl-lf-card__check-mark  "
          src="check-mark.svg"
/>,
        <p
          className="ttl-lf-card__number"
>
          8
</p>,
        <br />,
      ],
      "className": "ttl-lf-card",
      "onClick": [Function],
      "onKeyDown": [Function],
      "role": "presentation",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "All TTLs",
          "className": "ttl-lf-card__title ",
        },
        "ref": null,
        "rendered": "All TTLs",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt=""
              className="img-responsive rounded-circle ttl-lf-card__avatar"
              src="profile.svg"
/>,
            <p
              className="ttl-lf-card__name"
>
              Test TTL
</p>,
          ],
          "className": "d-none",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "",
              "className": "img-responsive rounded-circle ttl-lf-card__avatar",
              "src": "profile.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Test TTL",
              "className": "ttl-lf-card__name",
            },
            "ref": null,
            "rendered": "Test TTL",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "",
          "className": "ttl-lf-card__check-mark  ",
          "src": "check-mark.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 8,
          "className": "ttl-lf-card__number",
        },
        "ref": null,
        "rendered": 8,
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="ttl-lf-card__title "
>
            All TTLs
</p>,
          <div
            className="d-none"
>
            <img
                        alt=""
                        className="img-responsive rounded-circle ttl-lf-card__avatar"
                        src="profile.svg"
            />
            <p
                        className="ttl-lf-card__name"
            >
                        Test TTL
            </p>
</div>,
          <img
            alt=""
            className="ttl-lf-card__check-mark  "
            src="check-mark.svg"
/>,
          <p
            className="ttl-lf-card__number"
>
            8
</p>,
          <br />,
        ],
        "className": "ttl-lf-card",
        "onClick": [Function],
        "onKeyDown": [Function],
        "role": "presentation",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "All TTLs",
            "className": "ttl-lf-card__title ",
          },
          "ref": null,
          "rendered": "All TTLs",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt=""
                className="img-responsive rounded-circle ttl-lf-card__avatar"
                src="profile.svg"
/>,
              <p
                className="ttl-lf-card__name"
>
                Test TTL
</p>,
            ],
            "className": "d-none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "",
                "className": "img-responsive rounded-circle ttl-lf-card__avatar",
                "src": "profile.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Test TTL",
                "className": "ttl-lf-card__name",
              },
              "ref": null,
              "rendered": "Test TTL",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "",
            "className": "ttl-lf-card__check-mark  ",
            "src": "check-mark.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 8,
            "className": "ttl-lf-card__number",
          },
          "ref": null,
          "rendered": 8,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
