// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Input  renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropdownInput
    className="wt-dropdown"
    comment="No comment"
    componentStateKey="inputs"
    defaultStatus={0}
    dropDownFor=""
    enableSearch={false}
    extras={null}
    inputValue={Array []}
    label="Type"
    loading={false}
    multipleSelection={false}
    name="Name"
    options={
        Array [
            Object {
              "id": "internal",
              "label": "Internal",
            },
            Object {
              "id": "external",
              "label": "External",
            },
          ]
    }
    parent={
        Object {
            "setState": [Function],
            "state": Object {},
          }
    }
    placeholder="-- Select --"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="Name"
>
          Type
</label>,
        <div
          className="wt-dropdown__select col-12 p-0"
          id="Name"
>
          <div
                    className="wt-dropdown__select__value"
          >
                    <div
                              className="wt-dropdown__value"
                    >
                              -- Select --
                    </div>
                    <button
                              className="wt-dropdown__select__button"
                              onClick={[Function]}
                              type="button"
                    />
          </div>
</div>,
        null,
        <div
          className="alert--disabled"
          role="alert"
/>,
        <div
          className="wt-dropdown__comment"
>
          No comment
</div>,
      ],
      "className": "wt-dropdown wt-dropdown--normal mb-4 row mr-0 ml-0",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Type",
          "htmlFor": "Name",
        },
        "ref": null,
        "rendered": "Type",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="wt-dropdown__select__value"
>
              <div
                            className="wt-dropdown__value"
              >
                            -- Select --
              </div>
              <button
                            className="wt-dropdown__select__button"
                            onClick={[Function]}
                            type="button"
              />
</div>,
            null,
          ],
          "className": "wt-dropdown__select col-12 p-0",
          "id": "Name",
        },
        "ref": Object {
          "current": null,
        },
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="wt-dropdown__value"
>
                  -- Select --
</div>,
                <button
                  className="wt-dropdown__select__button"
                  onClick={[Function]}
                  type="button"
/>,
              ],
              "className": "wt-dropdown__select__value",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "-- Select --",
                  "className": "wt-dropdown__value",
                },
                "ref": null,
                "rendered": "-- Select --",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "wt-dropdown__select__button",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": null,
                "type": "button",
              },
            ],
            "type": "div",
          },
          null,
        ],
        "type": "div",
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "alert--disabled",
          "role": "alert",
        },
        "ref": null,
        "rendered": "",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "No comment",
          "className": "wt-dropdown__comment",
        },
        "ref": null,
        "rendered": "No comment",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="Name"
>
            Type
</label>,
          <div
            className="wt-dropdown__select col-12 p-0"
            id="Name"
>
            <div
                        className="wt-dropdown__select__value"
            >
                        <div
                                    className="wt-dropdown__value"
                        >
                                    -- Select --
                        </div>
                        <button
                                    className="wt-dropdown__select__button"
                                    onClick={[Function]}
                                    type="button"
                        />
            </div>
</div>,
          null,
          <div
            className="alert--disabled"
            role="alert"
/>,
          <div
            className="wt-dropdown__comment"
>
            No comment
</div>,
        ],
        "className": "wt-dropdown wt-dropdown--normal mb-4 row mr-0 ml-0",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Type",
            "htmlFor": "Name",
          },
          "ref": null,
          "rendered": "Type",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="wt-dropdown__select__value"
>
                <div
                                className="wt-dropdown__value"
                >
                                -- Select --
                </div>
                <button
                                className="wt-dropdown__select__button"
                                onClick={[Function]}
                                type="button"
                />
</div>,
              null,
            ],
            "className": "wt-dropdown__select col-12 p-0",
            "id": "Name",
          },
          "ref": Object {
            "current": null,
          },
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="wt-dropdown__value"
>
                    -- Select --
</div>,
                  <button
                    className="wt-dropdown__select__button"
                    onClick={[Function]}
                    type="button"
/>,
                ],
                "className": "wt-dropdown__select__value",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "-- Select --",
                    "className": "wt-dropdown__value",
                  },
                  "ref": null,
                  "rendered": "-- Select --",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "wt-dropdown__select__button",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "button",
                },
              ],
              "type": "div",
            },
            null,
          ],
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "alert--disabled",
            "role": "alert",
          },
          "ref": null,
          "rendered": "",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "No comment",
            "className": "wt-dropdown__comment",
          },
          "ref": null,
          "rendered": "No comment",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Dropdown Input  renders with minimal config props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropdownInput
    className={null}
    comment={null}
    componentStateKey="inputs"
    defaultStatus={0}
    dropDownFor=""
    enableSearch={false}
    extras={null}
    inputValue={Array []}
    label=""
    loading={false}
    multipleSelection={false}
    name="Name"
    options={
        Array [
            Object {
              "id": "internal",
              "label": "Internal",
            },
            Object {
              "id": "external",
              "label": "External",
            },
          ]
    }
    parent={
        Object {
            "setState": [Function],
            "state": Object {},
          }
    }
    placeholder=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="Name"
/>,
        <div
          className="null__select col-12 p-0"
          id="Name"
>
          <div
                    className="null__select__value"
          >
                    <div
                              className="null__value"
                    />
                    <button
                              className="null__select__button"
                              onClick={[Function]}
                              type="button"
                    />
          </div>
</div>,
        null,
        <div
          className="alert--disabled"
          role="alert"
/>,
        null,
      ],
      "className": "null null--normal mb-4 row mr-0 ml-0",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "htmlFor": "Name",
        },
        "ref": null,
        "rendered": "",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="null__select__value"
>
              <div
                            className="null__value"
              />
              <button
                            className="null__select__button"
                            onClick={[Function]}
                            type="button"
              />
</div>,
            null,
          ],
          "className": "null__select col-12 p-0",
          "id": "Name",
        },
        "ref": Object {
          "current": null,
        },
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="null__value"
/>,
                <button
                  className="null__select__button"
                  onClick={[Function]}
                  type="button"
/>,
              ],
              "className": "null__select__value",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "",
                  "className": "null__value",
                },
                "ref": null,
                "rendered": "",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "null__select__button",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": null,
                "type": "button",
              },
            ],
            "type": "div",
          },
          null,
        ],
        "type": "div",
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "alert--disabled",
          "role": "alert",
        },
        "ref": null,
        "rendered": "",
        "type": "div",
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="Name"
/>,
          <div
            className="null__select col-12 p-0"
            id="Name"
>
            <div
                        className="null__select__value"
            >
                        <div
                                    className="null__value"
                        />
                        <button
                                    className="null__select__button"
                                    onClick={[Function]}
                                    type="button"
                        />
            </div>
</div>,
          null,
          <div
            className="alert--disabled"
            role="alert"
/>,
          null,
        ],
        "className": "null null--normal mb-4 row mr-0 ml-0",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "htmlFor": "Name",
          },
          "ref": null,
          "rendered": "",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="null__select__value"
>
                <div
                                className="null__value"
                />
                <button
                                className="null__select__button"
                                onClick={[Function]}
                                type="button"
                />
</div>,
              null,
            ],
            "className": "null__select col-12 p-0",
            "id": "Name",
          },
          "ref": Object {
            "current": null,
          },
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="null__value"
/>,
                  <button
                    className="null__select__button"
                    onClick={[Function]}
                    type="button"
/>,
                ],
                "className": "null__select__value",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "",
                    "className": "null__value",
                  },
                  "ref": null,
                  "rendered": "",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "null__select__button",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "button",
                },
              ],
              "type": "div",
            },
            null,
          ],
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "alert--disabled",
            "role": "alert",
          },
          "ref": null,
          "rendered": "",
          "type": "div",
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
