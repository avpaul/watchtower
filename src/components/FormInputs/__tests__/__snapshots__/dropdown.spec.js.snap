// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Input  renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropdownInput
    className="wt-dropdown"
    comment="No comment"
    componentStateKey="inputs"
    defaultStatus={0}
    inputValue=""
    label="Type"
    name="Name"
    options={
        Array [
            Object {
              "label": "Internal",
              "value": "internal",
            },
            Object {
              "label": "External",
              "value": "external",
            },
          ]
    }
    parent={
        Object {
            "setState": [Function],
            "state": Object {},
          }
    }
    placeholder="-- Select --"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="Name"
>
          Type
</label>,
        <div
          className="wt-dropdown__select"
>
          <select
                    id="Name"
                    name="Name"
                    onChange={[Function]}
                    value=""
          >
                    <option
                              value=""
                    >
                              -- Select --
                    </option>
                    <option
                              value="internal"
                    >
                              Internal
                    </option>
                    <option
                              value="external"
                    >
                              External
                    </option>
          </select>
</div>,
        <div
          className="wt-dropdown__comment"
>
          No comment
</div>,
      ],
      "className": "wt-dropdown wt-dropdown--undefined mb-4",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Type",
          "htmlFor": "Name",
        },
        "ref": null,
        "rendered": "Type",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <select
            id="Name"
            name="Name"
            onChange={[Function]}
            value=""
>
            <option
                        value=""
            >
                        -- Select --
            </option>
            <option
                        value="internal"
            >
                        Internal
            </option>
            <option
                        value="external"
            >
                        External
            </option>
</select>,
          "className": "wt-dropdown__select",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                value=""
>
                -- Select --
</option>,
              Array [
                <option
                  value="internal"
>
                  Internal
</option>,
                <option
                  value="external"
>
                  External
</option>,
              ],
            ],
            "id": "Name",
            "name": "Name",
            "onChange": [Function],
            "value": "",
          },
          "ref": Object {
            "current": null,
          },
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "-- Select --",
                "value": "",
              },
              "ref": null,
              "rendered": "-- Select --",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "weak-key-0",
              "nodeType": "host",
              "props": Object {
                "children": "Internal",
                "value": "internal",
              },
              "ref": null,
              "rendered": "Internal",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "weak-key-1",
              "nodeType": "host",
              "props": Object {
                "children": "External",
                "value": "external",
              },
              "ref": null,
              "rendered": "External",
              "type": "option",
            },
          ],
          "type": "select",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "No comment",
          "className": "wt-dropdown__comment",
        },
        "ref": null,
        "rendered": "No comment",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="Name"
>
            Type
</label>,
          <div
            className="wt-dropdown__select"
>
            <select
                        id="Name"
                        name="Name"
                        onChange={[Function]}
                        value=""
            >
                        <option
                                    value=""
                        >
                                    -- Select --
                        </option>
                        <option
                                    value="internal"
                        >
                                    Internal
                        </option>
                        <option
                                    value="external"
                        >
                                    External
                        </option>
            </select>
</div>,
          <div
            className="wt-dropdown__comment"
>
            No comment
</div>,
        ],
        "className": "wt-dropdown wt-dropdown--undefined mb-4",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Type",
            "htmlFor": "Name",
          },
          "ref": null,
          "rendered": "Type",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <select
              id="Name"
              name="Name"
              onChange={[Function]}
              value=""
>
              <option
                            value=""
              >
                            -- Select --
              </option>
              <option
                            value="internal"
              >
                            Internal
              </option>
              <option
                            value="external"
              >
                            External
              </option>
</select>,
            "className": "wt-dropdown__select",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value=""
>
                  -- Select --
</option>,
                Array [
                  <option
                    value="internal"
>
                    Internal
</option>,
                  <option
                    value="external"
>
                    External
</option>,
                ],
              ],
              "id": "Name",
              "name": "Name",
              "onChange": [Function],
              "value": "",
            },
            "ref": Object {
              "current": null,
            },
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "-- Select --",
                  "value": "",
                },
                "ref": null,
                "rendered": "-- Select --",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "weak-key-0",
                "nodeType": "host",
                "props": Object {
                  "children": "Internal",
                  "value": "internal",
                },
                "ref": null,
                "rendered": "Internal",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "weak-key-1",
                "nodeType": "host",
                "props": Object {
                  "children": "External",
                  "value": "external",
                },
                "ref": null,
                "rendered": "External",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "No comment",
            "className": "wt-dropdown__comment",
          },
          "ref": null,
          "rendered": "No comment",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Dropdown Input  renders with minimal config props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropdownInput
    className={null}
    comment={null}
    componentStateKey="inputs"
    defaultStatus={0}
    inputValue=""
    label=""
    name="Name"
    options={
        Array [
            Object {
              "label": "Internal",
              "value": "internal",
            },
            Object {
              "label": "External",
              "value": "external",
            },
          ]
    }
    parent={
        Object {
            "setState": [Function],
            "state": Object {},
          }
    }
    placeholder=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="Name"
/>,
        <div
          className="null__select"
>
          <select
                    id="Name"
                    name="Name"
                    onChange={[Function]}
                    value=""
          >
                    <option
                              value="internal"
                    >
                              Internal
                    </option>
                    <option
                              value="external"
                    >
                              External
                    </option>
          </select>
</div>,
        <div
          className="null__comment"
/>,
      ],
      "className": "null null--undefined mb-4",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "htmlFor": "Name",
        },
        "ref": null,
        "rendered": "",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <select
            id="Name"
            name="Name"
            onChange={[Function]}
            value=""
>
            <option
                        value="internal"
            >
                        Internal
            </option>
            <option
                        value="external"
            >
                        External
            </option>
</select>,
          "className": "null__select",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              null,
              Array [
                <option
                  value="internal"
>
                  Internal
</option>,
                <option
                  value="external"
>
                  External
</option>,
              ],
            ],
            "id": "Name",
            "name": "Name",
            "onChange": [Function],
            "value": "",
          },
          "ref": Object {
            "current": null,
          },
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": "weak-key-0",
              "nodeType": "host",
              "props": Object {
                "children": "Internal",
                "value": "internal",
              },
              "ref": null,
              "rendered": "Internal",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "weak-key-1",
              "nodeType": "host",
              "props": Object {
                "children": "External",
                "value": "external",
              },
              "ref": null,
              "rendered": "External",
              "type": "option",
            },
          ],
          "type": "select",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "null__comment",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="Name"
/>,
          <div
            className="null__select"
>
            <select
                        id="Name"
                        name="Name"
                        onChange={[Function]}
                        value=""
            >
                        <option
                                    value="internal"
                        >
                                    Internal
                        </option>
                        <option
                                    value="external"
                        >
                                    External
                        </option>
            </select>
</div>,
          <div
            className="null__comment"
/>,
        ],
        "className": "null null--undefined mb-4",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "htmlFor": "Name",
          },
          "ref": null,
          "rendered": "",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <select
              id="Name"
              name="Name"
              onChange={[Function]}
              value=""
>
              <option
                            value="internal"
              >
                            Internal
              </option>
              <option
                            value="external"
              >
                            External
              </option>
</select>,
            "className": "null__select",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                null,
                Array [
                  <option
                    value="internal"
>
                    Internal
</option>,
                  <option
                    value="external"
>
                    External
</option>,
                ],
              ],
              "id": "Name",
              "name": "Name",
              "onChange": [Function],
              "value": "",
            },
            "ref": Object {
              "current": null,
            },
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": "weak-key-0",
                "nodeType": "host",
                "props": Object {
                  "children": "Internal",
                  "value": "internal",
                },
                "ref": null,
                "rendered": "Internal",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "weak-key-1",
                "nodeType": "host",
                "props": Object {
                  "children": "External",
                  "value": "external",
                },
                "ref": null,
                "rendered": "External",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "null__comment",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
