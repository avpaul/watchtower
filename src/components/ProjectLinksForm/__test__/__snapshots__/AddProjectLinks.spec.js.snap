// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput  renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddProjectLinksForm
    addNewProjectLink={[Function]}
    projectLinks={
        Array [
            "",
          ]
    }
    success={true}
    textInputChange={[Function]}
    tooltipMessage="Add New Link"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="url-upload-button"
          onClick={[Function]}
          type="button"
>
          <span
                    className="tooltiptext"
          >
                    Add New Link
          </span>
          <img
                    alt="Add icon"
                    src="plus.png"
          />
</button>,
        <form
          className="url-upload"
>
          <div
                    className="input-group wt-text-input wt-text-input--normal mb-3"
          >
                    <input
                              onChange={undefined}
                              placeholder="https://example.com"
                              required={true}
                              type="url"
                              value=""
                    />
                    <span />
          </div>
</form>,
      ],
      "className": "form-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="tooltiptext"
>
              Add New Link
</span>,
            <img
              alt="Add icon"
              src="plus.png"
/>,
          ],
          "className": "url-upload-button",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add New Link",
              "className": "tooltiptext",
            },
            "ref": null,
            "rendered": "Add New Link",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Add icon",
              "src": "plus.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
        ],
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-group wt-text-input wt-text-input--normal mb-3"
>
              <input
                            onChange={undefined}
                            placeholder="https://example.com"
                            required={true}
                            type="url"
                            value=""
              />
              <span />
</div>,
          ],
          "className": "url-upload",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  onChange={undefined}
                  placeholder="https://example.com"
                  required={true}
                  type="url"
                  value=""
/>,
                <span />,
              ],
              "className": "input-group wt-text-input wt-text-input--normal mb-3",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": undefined,
                  "placeholder": "https://example.com",
                  "required": true,
                  "type": "url",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="url-upload-button"
            onClick={[Function]}
            type="button"
>
            <span
                        className="tooltiptext"
            >
                        Add New Link
            </span>
            <img
                        alt="Add icon"
                        src="plus.png"
            />
</button>,
          <form
            className="url-upload"
>
            <div
                        className="input-group wt-text-input wt-text-input--normal mb-3"
            >
                        <input
                                    onChange={undefined}
                                    placeholder="https://example.com"
                                    required={true}
                                    type="url"
                                    value=""
                        />
                        <span />
            </div>
</form>,
        ],
        "className": "form-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="tooltiptext"
>
                Add New Link
</span>,
              <img
                alt="Add icon"
                src="plus.png"
/>,
            ],
            "className": "url-upload-button",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add New Link",
                "className": "tooltiptext",
              },
              "ref": null,
              "rendered": "Add New Link",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Add icon",
                "src": "plus.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="input-group wt-text-input wt-text-input--normal mb-3"
>
                <input
                                onChange={undefined}
                                placeholder="https://example.com"
                                required={true}
                                type="url"
                                value=""
                />
                <span />
</div>,
            ],
            "className": "url-upload",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    onChange={undefined}
                    placeholder="https://example.com"
                    required={true}
                    type="url"
                    value=""
/>,
                  <span />,
                ],
                "className": "input-group wt-text-input wt-text-input--normal mb-3",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "onChange": undefined,
                    "placeholder": "https://example.com",
                    "required": true,
                    "type": "url",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
