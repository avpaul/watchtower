// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MapFellowsFilterCard tests should render MapFellowsFilterCards when props display is passed in as project 1`] = `
<Slider
  className="contain"
  infinite={false}
  nextArrow={
    <NavArrow
      buttonClass="slick-next"
      handleChartClose="manager-slick"
      iconClass="fa-angle-right"
      onClick={[Function]}
    />
  }
  prevArrow={
    <NavArrow
      buttonClass="slick-prev"
      handleChartClose="manager-slick"
      iconClass="fa-angle-left"
      onClick={[Function]}
    />
  }
  responsive={
    Array [
      Object {
        "breakpoint": 1000,
        "settings": Object {
          "slidesToScroll": 2,
          "slidesToShow": 2,
        },
      },
      Object {
        "breakpoint": 700,
        "settings": Object {
          "slidesToScroll": 1,
          "slidesToShow": 1,
        },
      },
    ]
  }
  rows={1}
  slidesToScroll={4}
  slidesToShow={4}
  swipeToSlide={true}
>
  <FellowFilterCard
    cardName="Fellows on Products"
    displayPicture={false}
    filterKey="project"
    handleCardClick={[MockFunction]}
    isManager={false}
    isTicked={
      Object {
        "project": "All Products",
        "status": "All Fellows",
      }
    }
    key="weak-key-5"
    loading={false}
    numberOfFellows={6}
    picture=""
  />
  <FellowFilterCard
    cardName="Watch Tower"
    displayPicture={false}
    filterKey="project"
    handleCardClick={[MockFunction]}
    isManager={false}
    isTicked={
      Object {
        "project": "All Products",
        "status": "All Fellows",
      }
    }
    key="weak-key-6"
    loading={false}
    numberOfFellows={6}
    picture=""
  />
</Slider>
`;

exports[`MapFellowsFilterCard tests should render MapFellowsFilterCards without crashing 1`] = `
<Slider
  className="contain"
  infinite={false}
  nextArrow={
    <NavArrow
      buttonClass="slick-next"
      handleChartClose="manager-slick"
      iconClass="fa-angle-right"
      onClick={[Function]}
    />
  }
  prevArrow={
    <NavArrow
      buttonClass="slick-prev"
      handleChartClose="manager-slick"
      iconClass="fa-angle-left"
      onClick={[Function]}
    />
  }
  responsive={
    Array [
      Object {
        "breakpoint": 1000,
        "settings": Object {
          "slidesToScroll": 2,
          "slidesToShow": 2,
        },
      },
      Object {
        "breakpoint": 700,
        "settings": Object {
          "slidesToScroll": 1,
          "slidesToShow": 1,
        },
      },
    ]
  }
  rows={1}
  slidesToScroll={4}
  slidesToShow={4}
  swipeToSlide={true}
>
  <FellowFilterCard
    cardName="All Fellows"
    displayPicture={false}
    filterKey="status"
    handleCardClick={[MockFunction]}
    isManager={false}
    isTicked={
      Object {
        "project": "All Products",
        "status": "All Fellows",
      }
    }
    key="weak-key-0"
    loading={false}
    numberOfFellows={6}
    picture=""
  />
  <FellowFilterCard
    cardName="On Track"
    displayPicture={false}
    filterKey="status"
    handleCardClick={[MockFunction]}
    isManager={false}
    isTicked={
      Object {
        "project": "All Products",
        "status": "All Fellows",
      }
    }
    key="weak-key-1"
    loading={false}
    numberOfFellows={2}
    picture=""
  />
  <FellowFilterCard
    cardName="Off Track"
    displayPicture={false}
    filterKey="status"
    handleCardClick={[MockFunction]}
    isManager={false}
    isTicked={
      Object {
        "project": "All Products",
        "status": "All Fellows",
      }
    }
    key="weak-key-2"
    loading={false}
    numberOfFellows={4}
    picture=""
  />
  <FellowFilterCard
    cardName="PIP"
    displayPicture={false}
    filterKey="status"
    handleCardClick={[MockFunction]}
    isManager={false}
    isTicked={
      Object {
        "project": "All Products",
        "status": "All Fellows",
      }
    }
    key="weak-key-3"
    loading={false}
    numberOfFellows={0}
    picture=""
  />
  <FellowFilterCard
    cardName="No Ratings"
    displayPicture={false}
    filterKey="status"
    handleCardClick={[MockFunction]}
    isManager={false}
    isTicked={
      Object {
        "project": "All Products",
        "status": "All Fellows",
      }
    }
    key="weak-key-4"
    loading={false}
    numberOfFellows={0}
    picture=""
  />
</Slider>
`;
