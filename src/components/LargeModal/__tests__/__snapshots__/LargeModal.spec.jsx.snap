// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Large modal component should render component correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    handleClose={[Function]}
    show={false}
    title={null}
>
    <div>
        Hello
    </div>
</Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <section
        className="modal__body"
>
        <p
                className="modal__title"
        />
        <button
                className="close"
                onClick={[Function]}
                type="button"
        >
                <span
                        aria-hidden="true"
                >
                        ×
                </span>
                <span
                        className="sr-only"
                >
                        Close
                </span>
        </button>
        <div>
                Hello
        </div>
</section>,
      "className": "modal close__modal",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="modal__title"
/>,
          <button
            className="close"
            onClick={[Function]}
            type="button"
>
            <span
                        aria-hidden="true"
            >
                        ×
            </span>
            <span
                        className="sr-only"
            >
                        Close
            </span>
</button>,
          <div>
            Hello
</div>,
        ],
        "className": "modal__body",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "modal__title",
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                aria-hidden="true"
>
                ×
</span>,
              <span
                className="sr-only"
>
                Close
</span>,
            ],
            "className": "close",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "children": "×",
              },
              "ref": null,
              "rendered": "×",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Close",
                "className": "sr-only",
              },
              "ref": null,
              "rendered": "Close",
              "type": "span",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Hello",
          },
          "ref": null,
          "rendered": "Hello",
          "type": "div",
        },
      ],
      "type": "section",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <section
          className="modal__body"
>
          <p
                    className="modal__title"
          />
          <button
                    className="close"
                    onClick={[Function]}
                    type="button"
          >
                    <span
                              aria-hidden="true"
                    >
                              ×
                    </span>
                    <span
                              className="sr-only"
                    >
                              Close
                    </span>
          </button>
          <div>
                    Hello
          </div>
</section>,
        "className": "modal close__modal",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="modal__title"
/>,
            <button
              className="close"
              onClick={[Function]}
              type="button"
>
              <span
                            aria-hidden="true"
              >
                            ×
              </span>
              <span
                            className="sr-only"
              >
                            Close
              </span>
</button>,
            <div>
              Hello
</div>,
          ],
          "className": "modal__body",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "modal__title",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  aria-hidden="true"
>
                  ×
</span>,
                <span
                  className="sr-only"
>
                  Close
</span>,
              ],
              "className": "close",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-hidden": "true",
                  "children": "×",
                },
                "ref": null,
                "rendered": "×",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Close",
                  "className": "sr-only",
                },
                "ref": null,
                "rendered": "Close",
                "type": "span",
              },
            ],
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hello",
            },
            "ref": null,
            "rendered": "Hello",
            "type": "div",
          },
        ],
        "type": "section",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`Test Large modal component should render large modal 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    handleClose={[Function]}
    show={true}
    title={null}
>
    <div>
        Hello
    </div>
</Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <section
        className="modal__body"
>
        <p
                className="modal__title"
        />
        <button
                className="close"
                onClick={[Function]}
                type="button"
        >
                <span
                        aria-hidden="true"
                >
                        ×
                </span>
                <span
                        className="sr-only"
                >
                        Close
                </span>
        </button>
        <div>
                Hello
        </div>
</section>,
      "className": "modal display__modal",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="modal__title"
/>,
          <button
            className="close"
            onClick={[Function]}
            type="button"
>
            <span
                        aria-hidden="true"
            >
                        ×
            </span>
            <span
                        className="sr-only"
            >
                        Close
            </span>
</button>,
          <div>
            Hello
</div>,
        ],
        "className": "modal__body",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "modal__title",
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                aria-hidden="true"
>
                ×
</span>,
              <span
                className="sr-only"
>
                Close
</span>,
            ],
            "className": "close",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "children": "×",
              },
              "ref": null,
              "rendered": "×",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Close",
                "className": "sr-only",
              },
              "ref": null,
              "rendered": "Close",
              "type": "span",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Hello",
          },
          "ref": null,
          "rendered": "Hello",
          "type": "div",
        },
      ],
      "type": "section",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <section
          className="modal__body"
>
          <p
                    className="modal__title"
          />
          <button
                    className="close"
                    onClick={[Function]}
                    type="button"
          >
                    <span
                              aria-hidden="true"
                    >
                              ×
                    </span>
                    <span
                              className="sr-only"
                    >
                              Close
                    </span>
          </button>
          <div>
                    Hello
          </div>
</section>,
        "className": "modal display__modal",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="modal__title"
/>,
            <button
              className="close"
              onClick={[Function]}
              type="button"
>
              <span
                            aria-hidden="true"
              >
                            ×
              </span>
              <span
                            className="sr-only"
              >
                            Close
              </span>
</button>,
            <div>
              Hello
</div>,
          ],
          "className": "modal__body",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "modal__title",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  aria-hidden="true"
>
                  ×
</span>,
                <span
                  className="sr-only"
>
                  Close
</span>,
              ],
              "className": "close",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-hidden": "true",
                  "children": "×",
                },
                "ref": null,
                "rendered": "×",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Close",
                  "className": "sr-only",
                },
                "ref": null,
                "rendered": "Close",
                "type": "span",
              },
            ],
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hello",
            },
            "ref": null,
            "rendered": "Hello",
            "type": "div",
          },
        ],
        "type": "section",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
