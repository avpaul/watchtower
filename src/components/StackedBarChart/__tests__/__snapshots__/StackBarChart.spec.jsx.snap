// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<StackBarChart /> Test Suite snapshot the component with data 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StackedBarChart
    data={
        Array [
            Object {
              "OffTrack": 20,
              "OnTrack": 20,
              "name": "Cohort 1",
            },
            Object {
              "OffTrack": 30,
              "OnTrack": 39,
              "name": "Cohort 2",
            },
            Object {
              "OffTrack": 20,
              "OnTrack": 90,
              "name": "Cohort 3",
            },
          ]
    }
    title="DOB Fellows"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="chart_card__header"
>
          <p
                    className="chart_card__title"
          >
                     
                    DOB Fellows
          </p>
</div>,
        undefined,
        <ResponsiveContainer
          className="undefined"
          debounce={0}
          height={200}
          width="100%"
>
          <BarChart
                    barCategoryGap="10%"
                    barGap={4}
                    data={
                              Array [
                                        Object {
                                          "OffTrack": 20,
                                          "OnTrack": 20,
                                          "name": "Cohort 1",
                                        },
                                        Object {
                                          "OffTrack": 30,
                                          "OnTrack": 39,
                                          "name": "Cohort 2",
                                        },
                                        Object {
                                          "OffTrack": 20,
                                          "OnTrack": 90,
                                          "name": "Cohort 3",
                                        },
                                      ]
                    }
                    layout="horizontal"
                    margin={
                              Object {
                                        "bottom": 5,
                                        "left": 30,
                                        "right": 30,
                                        "top": 20,
                                      }
                    }
                    reverseStackOrder={false}
                    stackOffset="none"
          >
                    <CartesianGrid
                              fill="none"
                              horizontal={true}
                              horizontalFill={Array []}
                              horizontalPoints={Array []}
                              stroke="#ccc"
                              vertical={false}
                              verticalFill={Array []}
                              verticalPoints={Array []}
                    />
                    <XAxis
                              allowDataOverflow={false}
                              allowDecimals={true}
                              allowDuplicatedCategory={true}
                              dataKey="cohort"
                              domain={
                                        Array [
                                                  0,
                                                  "auto",
                                                ]
                              }
                              height={30}
                              hide={false}
                              mirror={false}
                              orientation="bottom"
                              padding={
                                        Object {
                                                  "left": 0,
                                                  "right": 0,
                                                }
                              }
                              reversed={false}
                              scale="auto"
                              tickCount={5}
                              type="category"
                              width={0}
                              xAxisId={0}
                    />
                    <YAxis
                              allowDataOverflow={false}
                              allowDecimals={true}
                              allowDuplicatedCategory={true}
                              domain={
                                        Array [
                                                  0,
                                                  "auto",
                                                ]
                              }
                              height={0}
                              hide={false}
                              label={
                                        Object {
                                                  "angle": -90,
                                                  "position": "insideBottomLeft",
                                                  "value": "Total DOB Fellows",
                                                }
                              }
                              mirror={false}
                              orientation="left"
                              padding={
                                        Object {
                                                  "bottom": 0,
                                                  "top": 0,
                                                }
                              }
                              reversed={false}
                              scale="auto"
                              tickCount={5}
                              type="number"
                              width={60}
                              yAxisId={0}
                    />
                    <Tooltip
                              active={false}
                              animationDuration={400}
                              animationEasing="ease"
                              contentStyle={Object {}}
                              coordinate={
                                        Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                              }
                              cursor={
                                        Object {
                                                  "fill": "#fff",
                                                  "fillOpacity": 0.05,
                                                  "position": "top",
                                                }
                              }
                              cursorStyle={Object {}}
                              filterNull={true}
                              isAnimationActive={true}
                              itemSorter={[Function]}
                              itemStyle={Object {}}
                              labelStyle={Object {}}
                              offset={10}
                              separator=" : "
                              useTranslate3d={false}
                              viewBox={
                                        Object {
                                                  "x1": 0,
                                                  "x2": 0,
                                                  "y1": 0,
                                                  "y2": 0,
                                                }
                              }
                              wrapperStyle={Object {}}
                    />
                    <Legend
                              align="right"
                              iconSize={14}
                              iconType="circle"
                              layout="horizontal"
                              verticalAlign="top"
                              wrapperStyle={
                                        Object {
                                                  "top": -40,
                                                }
                              }
                    />
                    <Bar
                              animationBegin={0}
                              animationDuration={400}
                              animationEasing="ease"
                              barSize={30}
                              data={Array []}
                              dataKey="offTrack"
                              fill="#FFAF30"
                              hide={false}
                              isAnimationActive={true}
                              layout="vertical"
                              legendType="rect"
                              minPointSize={0}
                              onAnimationEnd={[Function]}
                              onAnimationStart={[Function]}
                              stackId="a"
                              xAxisId={0}
                              yAxisId={0}
                    />
                    <Bar
                              animationBegin={0}
                              animationDuration={400}
                              animationEasing="ease"
                              barSize={30}
                              data={Array []}
                              dataKey="onTrack"
                              fill="#3359DB"
                              hide={false}
                              isAnimationActive={true}
                              layout="vertical"
                              legendType="rect"
                              minPointSize={0}
                              onAnimationEnd={[Function]}
                              onAnimationStart={[Function]}
                              stackId="a"
                              xAxisId={0}
                              yAxisId={0}
                    />
          </BarChart>
</ResponsiveContainer>,
      ],
      "className": "chart_card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p
            className="chart_card__title"
>
             
            DOB Fellows
</p>,
          "className": "chart_card__header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              " ",
              "DOB Fellows",
            ],
            "className": "chart_card__title",
          },
          "ref": null,
          "rendered": Array [
            " ",
            "DOB Fellows",
          ],
          "type": "p",
        },
        "type": "div",
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <BarChart
            barCategoryGap="10%"
            barGap={4}
            data={
                        Array [
                                    Object {
                                      "OffTrack": 20,
                                      "OnTrack": 20,
                                      "name": "Cohort 1",
                                    },
                                    Object {
                                      "OffTrack": 30,
                                      "OnTrack": 39,
                                      "name": "Cohort 2",
                                    },
                                    Object {
                                      "OffTrack": 20,
                                      "OnTrack": 90,
                                      "name": "Cohort 3",
                                    },
                                  ]
            }
            layout="horizontal"
            margin={
                        Object {
                                    "bottom": 5,
                                    "left": 30,
                                    "right": 30,
                                    "top": 20,
                                  }
            }
            reverseStackOrder={false}
            stackOffset="none"
>
            <CartesianGrid
                        fill="none"
                        horizontal={true}
                        horizontalFill={Array []}
                        horizontalPoints={Array []}
                        stroke="#ccc"
                        vertical={false}
                        verticalFill={Array []}
                        verticalPoints={Array []}
            />
            <XAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        dataKey="cohort"
                        domain={
                                    Array [
                                                0,
                                                "auto",
                                              ]
                        }
                        height={30}
                        hide={false}
                        mirror={false}
                        orientation="bottom"
                        padding={
                                    Object {
                                                "left": 0,
                                                "right": 0,
                                              }
                        }
                        reversed={false}
                        scale="auto"
                        tickCount={5}
                        type="category"
                        width={0}
                        xAxisId={0}
            />
            <YAxis
                        allowDataOverflow={false}
                        allowDecimals={true}
                        allowDuplicatedCategory={true}
                        domain={
                                    Array [
                                                0,
                                                "auto",
                                              ]
                        }
                        height={0}
                        hide={false}
                        label={
                                    Object {
                                                "angle": -90,
                                                "position": "insideBottomLeft",
                                                "value": "Total DOB Fellows",
                                              }
                        }
                        mirror={false}
                        orientation="left"
                        padding={
                                    Object {
                                                "bottom": 0,
                                                "top": 0,
                                              }
                        }
                        reversed={false}
                        scale="auto"
                        tickCount={5}
                        type="number"
                        width={60}
                        yAxisId={0}
            />
            <Tooltip
                        active={false}
                        animationDuration={400}
                        animationEasing="ease"
                        contentStyle={Object {}}
                        coordinate={
                                    Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                        }
                        cursor={
                                    Object {
                                                "fill": "#fff",
                                                "fillOpacity": 0.05,
                                                "position": "top",
                                              }
                        }
                        cursorStyle={Object {}}
                        filterNull={true}
                        isAnimationActive={true}
                        itemSorter={[Function]}
                        itemStyle={Object {}}
                        labelStyle={Object {}}
                        offset={10}
                        separator=" : "
                        useTranslate3d={false}
                        viewBox={
                                    Object {
                                                "x1": 0,
                                                "x2": 0,
                                                "y1": 0,
                                                "y2": 0,
                                              }
                        }
                        wrapperStyle={Object {}}
            />
            <Legend
                        align="right"
                        iconSize={14}
                        iconType="circle"
                        layout="horizontal"
                        verticalAlign="top"
                        wrapperStyle={
                                    Object {
                                                "top": -40,
                                              }
                        }
            />
            <Bar
                        animationBegin={0}
                        animationDuration={400}
                        animationEasing="ease"
                        barSize={30}
                        data={Array []}
                        dataKey="offTrack"
                        fill="#FFAF30"
                        hide={false}
                        isAnimationActive={true}
                        layout="vertical"
                        legendType="rect"
                        minPointSize={0}
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        stackId="a"
                        xAxisId={0}
                        yAxisId={0}
            />
            <Bar
                        animationBegin={0}
                        animationDuration={400}
                        animationEasing="ease"
                        barSize={30}
                        data={Array []}
                        dataKey="onTrack"
                        fill="#3359DB"
                        hide={false}
                        isAnimationActive={true}
                        layout="vertical"
                        legendType="rect"
                        minPointSize={0}
                        onAnimationEnd={[Function]}
                        onAnimationStart={[Function]}
                        stackId="a"
                        xAxisId={0}
                        yAxisId={0}
            />
</BarChart>,
          "className": "undefined",
          "debounce": 0,
          "height": 200,
          "width": "100%",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "barCategoryGap": "10%",
            "barGap": 4,
            "children": Array [
              <CartesianGrid
                fill="none"
                horizontal={true}
                horizontalFill={Array []}
                horizontalPoints={Array []}
                stroke="#ccc"
                vertical={false}
                verticalFill={Array []}
                verticalPoints={Array []}
/>,
              <XAxis
                allowDataOverflow={false}
                allowDecimals={true}
                allowDuplicatedCategory={true}
                dataKey="cohort"
                domain={
                                Array [
                                                0,
                                                "auto",
                                              ]
                }
                height={30}
                hide={false}
                mirror={false}
                orientation="bottom"
                padding={
                                Object {
                                                "left": 0,
                                                "right": 0,
                                              }
                }
                reversed={false}
                scale="auto"
                tickCount={5}
                type="category"
                width={0}
                xAxisId={0}
/>,
              <YAxis
                allowDataOverflow={false}
                allowDecimals={true}
                allowDuplicatedCategory={true}
                domain={
                                Array [
                                                0,
                                                "auto",
                                              ]
                }
                height={0}
                hide={false}
                label={
                                Object {
                                                "angle": -90,
                                                "position": "insideBottomLeft",
                                                "value": "Total DOB Fellows",
                                              }
                }
                mirror={false}
                orientation="left"
                padding={
                                Object {
                                                "bottom": 0,
                                                "top": 0,
                                              }
                }
                reversed={false}
                scale="auto"
                tickCount={5}
                type="number"
                width={60}
                yAxisId={0}
/>,
              <Tooltip
                active={false}
                animationDuration={400}
                animationEasing="ease"
                contentStyle={Object {}}
                coordinate={
                                Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                }
                cursor={
                                Object {
                                                "fill": "#fff",
                                                "fillOpacity": 0.05,
                                                "position": "top",
                                              }
                }
                cursorStyle={Object {}}
                filterNull={true}
                isAnimationActive={true}
                itemSorter={[Function]}
                itemStyle={Object {}}
                labelStyle={Object {}}
                offset={10}
                separator=" : "
                useTranslate3d={false}
                viewBox={
                                Object {
                                                "x1": 0,
                                                "x2": 0,
                                                "y1": 0,
                                                "y2": 0,
                                              }
                }
                wrapperStyle={Object {}}
/>,
              <Legend
                align="right"
                iconSize={14}
                iconType="circle"
                layout="horizontal"
                verticalAlign="top"
                wrapperStyle={
                                Object {
                                                "top": -40,
                                              }
                }
/>,
              <Bar
                animationBegin={0}
                animationDuration={400}
                animationEasing="ease"
                barSize={30}
                data={Array []}
                dataKey="offTrack"
                fill="#FFAF30"
                hide={false}
                isAnimationActive={true}
                layout="vertical"
                legendType="rect"
                minPointSize={0}
                onAnimationEnd={[Function]}
                onAnimationStart={[Function]}
                stackId="a"
                xAxisId={0}
                yAxisId={0}
/>,
              <Bar
                animationBegin={0}
                animationDuration={400}
                animationEasing="ease"
                barSize={30}
                data={Array []}
                dataKey="onTrack"
                fill="#3359DB"
                hide={false}
                isAnimationActive={true}
                layout="vertical"
                legendType="rect"
                minPointSize={0}
                onAnimationEnd={[Function]}
                onAnimationStart={[Function]}
                stackId="a"
                xAxisId={0}
                yAxisId={0}
/>,
            ],
            "data": Array [
              Object {
                "OffTrack": 20,
                "OnTrack": 20,
                "name": "Cohort 1",
              },
              Object {
                "OffTrack": 30,
                "OnTrack": 39,
                "name": "Cohort 2",
              },
              Object {
                "OffTrack": 20,
                "OnTrack": 90,
                "name": "Cohort 3",
              },
            ],
            "layout": "horizontal",
            "margin": Object {
              "bottom": 5,
              "left": 30,
              "right": 30,
              "top": 20,
            },
            "reverseStackOrder": false,
            "stackOffset": "none",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fill": "none",
                "horizontal": true,
                "horizontalFill": Array [],
                "horizontalPoints": Array [],
                "stroke": "#ccc",
                "vertical": false,
                "verticalFill": Array [],
                "verticalPoints": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowDataOverflow": false,
                "allowDecimals": true,
                "allowDuplicatedCategory": true,
                "dataKey": "cohort",
                "domain": Array [
                  0,
                  "auto",
                ],
                "height": 30,
                "hide": false,
                "mirror": false,
                "orientation": "bottom",
                "padding": Object {
                  "left": 0,
                  "right": 0,
                },
                "reversed": false,
                "scale": "auto",
                "tickCount": 5,
                "type": "category",
                "width": 0,
                "xAxisId": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowDataOverflow": false,
                "allowDecimals": true,
                "allowDuplicatedCategory": true,
                "domain": Array [
                  0,
                  "auto",
                ],
                "height": 0,
                "hide": false,
                "label": Object {
                  "angle": -90,
                  "position": "insideBottomLeft",
                  "value": "Total DOB Fellows",
                },
                "mirror": false,
                "orientation": "left",
                "padding": Object {
                  "bottom": 0,
                  "top": 0,
                },
                "reversed": false,
                "scale": "auto",
                "tickCount": 5,
                "type": "number",
                "width": 60,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "animationDuration": 400,
                "animationEasing": "ease",
                "contentStyle": Object {},
                "coordinate": Object {
                  "x": 0,
                  "y": 0,
                },
                "cursor": Object {
                  "fill": "#fff",
                  "fillOpacity": 0.05,
                  "position": "top",
                },
                "cursorStyle": Object {},
                "filterNull": true,
                "isAnimationActive": true,
                "itemSorter": [Function],
                "itemStyle": Object {},
                "labelStyle": Object {},
                "offset": 10,
                "separator": " : ",
                "useTranslate3d": false,
                "viewBox": Object {
                  "x1": 0,
                  "x2": 0,
                  "y1": 0,
                  "y2": 0,
                },
                "wrapperStyle": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "align": "right",
                "iconSize": 14,
                "iconType": "circle",
                "layout": "horizontal",
                "verticalAlign": "top",
                "wrapperStyle": Object {
                  "top": -40,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "animationBegin": 0,
                "animationDuration": 400,
                "animationEasing": "ease",
                "barSize": 30,
                "data": Array [],
                "dataKey": "offTrack",
                "fill": "#FFAF30",
                "hide": false,
                "isAnimationActive": true,
                "layout": "vertical",
                "legendType": "rect",
                "minPointSize": 0,
                "onAnimationEnd": [Function],
                "onAnimationStart": [Function],
                "stackId": "a",
                "xAxisId": 0,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "animationBegin": 0,
                "animationDuration": 400,
                "animationEasing": "ease",
                "barSize": 30,
                "data": Array [],
                "dataKey": "onTrack",
                "fill": "#3359DB",
                "hide": false,
                "isAnimationActive": true,
                "layout": "vertical",
                "legendType": "rect",
                "minPointSize": 0,
                "onAnimationEnd": [Function],
                "onAnimationStart": [Function],
                "stackId": "a",
                "xAxisId": 0,
                "yAxisId": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="chart_card__header"
>
            <p
                        className="chart_card__title"
            >
                         
                        DOB Fellows
            </p>
</div>,
          undefined,
          <ResponsiveContainer
            className="undefined"
            debounce={0}
            height={200}
            width="100%"
>
            <BarChart
                        barCategoryGap="10%"
                        barGap={4}
                        data={
                                    Array [
                                                Object {
                                                  "OffTrack": 20,
                                                  "OnTrack": 20,
                                                  "name": "Cohort 1",
                                                },
                                                Object {
                                                  "OffTrack": 30,
                                                  "OnTrack": 39,
                                                  "name": "Cohort 2",
                                                },
                                                Object {
                                                  "OffTrack": 20,
                                                  "OnTrack": 90,
                                                  "name": "Cohort 3",
                                                },
                                              ]
                        }
                        layout="horizontal"
                        margin={
                                    Object {
                                                "bottom": 5,
                                                "left": 30,
                                                "right": 30,
                                                "top": 20,
                                              }
                        }
                        reverseStackOrder={false}
                        stackOffset="none"
            >
                        <CartesianGrid
                                    fill="none"
                                    horizontal={true}
                                    horizontalFill={Array []}
                                    horizontalPoints={Array []}
                                    stroke="#ccc"
                                    vertical={false}
                                    verticalFill={Array []}
                                    verticalPoints={Array []}
                        />
                        <XAxis
                                    allowDataOverflow={false}
                                    allowDecimals={true}
                                    allowDuplicatedCategory={true}
                                    dataKey="cohort"
                                    domain={
                                                Array [
                                                            0,
                                                            "auto",
                                                          ]
                                    }
                                    height={30}
                                    hide={false}
                                    mirror={false}
                                    orientation="bottom"
                                    padding={
                                                Object {
                                                            "left": 0,
                                                            "right": 0,
                                                          }
                                    }
                                    reversed={false}
                                    scale="auto"
                                    tickCount={5}
                                    type="category"
                                    width={0}
                                    xAxisId={0}
                        />
                        <YAxis
                                    allowDataOverflow={false}
                                    allowDecimals={true}
                                    allowDuplicatedCategory={true}
                                    domain={
                                                Array [
                                                            0,
                                                            "auto",
                                                          ]
                                    }
                                    height={0}
                                    hide={false}
                                    label={
                                                Object {
                                                            "angle": -90,
                                                            "position": "insideBottomLeft",
                                                            "value": "Total DOB Fellows",
                                                          }
                                    }
                                    mirror={false}
                                    orientation="left"
                                    padding={
                                                Object {
                                                            "bottom": 0,
                                                            "top": 0,
                                                          }
                                    }
                                    reversed={false}
                                    scale="auto"
                                    tickCount={5}
                                    type="number"
                                    width={60}
                                    yAxisId={0}
                        />
                        <Tooltip
                                    active={false}
                                    animationDuration={400}
                                    animationEasing="ease"
                                    contentStyle={Object {}}
                                    coordinate={
                                                Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                    }
                                    cursor={
                                                Object {
                                                            "fill": "#fff",
                                                            "fillOpacity": 0.05,
                                                            "position": "top",
                                                          }
                                    }
                                    cursorStyle={Object {}}
                                    filterNull={true}
                                    isAnimationActive={true}
                                    itemSorter={[Function]}
                                    itemStyle={Object {}}
                                    labelStyle={Object {}}
                                    offset={10}
                                    separator=" : "
                                    useTranslate3d={false}
                                    viewBox={
                                                Object {
                                                            "x1": 0,
                                                            "x2": 0,
                                                            "y1": 0,
                                                            "y2": 0,
                                                          }
                                    }
                                    wrapperStyle={Object {}}
                        />
                        <Legend
                                    align="right"
                                    iconSize={14}
                                    iconType="circle"
                                    layout="horizontal"
                                    verticalAlign="top"
                                    wrapperStyle={
                                                Object {
                                                            "top": -40,
                                                          }
                                    }
                        />
                        <Bar
                                    animationBegin={0}
                                    animationDuration={400}
                                    animationEasing="ease"
                                    barSize={30}
                                    data={Array []}
                                    dataKey="offTrack"
                                    fill="#FFAF30"
                                    hide={false}
                                    isAnimationActive={true}
                                    layout="vertical"
                                    legendType="rect"
                                    minPointSize={0}
                                    onAnimationEnd={[Function]}
                                    onAnimationStart={[Function]}
                                    stackId="a"
                                    xAxisId={0}
                                    yAxisId={0}
                        />
                        <Bar
                                    animationBegin={0}
                                    animationDuration={400}
                                    animationEasing="ease"
                                    barSize={30}
                                    data={Array []}
                                    dataKey="onTrack"
                                    fill="#3359DB"
                                    hide={false}
                                    isAnimationActive={true}
                                    layout="vertical"
                                    legendType="rect"
                                    minPointSize={0}
                                    onAnimationEnd={[Function]}
                                    onAnimationStart={[Function]}
                                    stackId="a"
                                    xAxisId={0}
                                    yAxisId={0}
                        />
            </BarChart>
</ResponsiveContainer>,
        ],
        "className": "chart_card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="chart_card__title"
>
               
              DOB Fellows
</p>,
            "className": "chart_card__header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                "DOB Fellows",
              ],
              "className": "chart_card__title",
            },
            "ref": null,
            "rendered": Array [
              " ",
              "DOB Fellows",
            ],
            "type": "p",
          },
          "type": "div",
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <BarChart
              barCategoryGap="10%"
              barGap={4}
              data={
                            Array [
                                          Object {
                                            "OffTrack": 20,
                                            "OnTrack": 20,
                                            "name": "Cohort 1",
                                          },
                                          Object {
                                            "OffTrack": 30,
                                            "OnTrack": 39,
                                            "name": "Cohort 2",
                                          },
                                          Object {
                                            "OffTrack": 20,
                                            "OnTrack": 90,
                                            "name": "Cohort 3",
                                          },
                                        ]
              }
              layout="horizontal"
              margin={
                            Object {
                                          "bottom": 5,
                                          "left": 30,
                                          "right": 30,
                                          "top": 20,
                                        }
              }
              reverseStackOrder={false}
              stackOffset="none"
>
              <CartesianGrid
                            fill="none"
                            horizontal={true}
                            horizontalFill={Array []}
                            horizontalPoints={Array []}
                            stroke="#ccc"
                            vertical={false}
                            verticalFill={Array []}
                            verticalPoints={Array []}
              />
              <XAxis
                            allowDataOverflow={false}
                            allowDecimals={true}
                            allowDuplicatedCategory={true}
                            dataKey="cohort"
                            domain={
                                          Array [
                                                        0,
                                                        "auto",
                                                      ]
                            }
                            height={30}
                            hide={false}
                            mirror={false}
                            orientation="bottom"
                            padding={
                                          Object {
                                                        "left": 0,
                                                        "right": 0,
                                                      }
                            }
                            reversed={false}
                            scale="auto"
                            tickCount={5}
                            type="category"
                            width={0}
                            xAxisId={0}
              />
              <YAxis
                            allowDataOverflow={false}
                            allowDecimals={true}
                            allowDuplicatedCategory={true}
                            domain={
                                          Array [
                                                        0,
                                                        "auto",
                                                      ]
                            }
                            height={0}
                            hide={false}
                            label={
                                          Object {
                                                        "angle": -90,
                                                        "position": "insideBottomLeft",
                                                        "value": "Total DOB Fellows",
                                                      }
                            }
                            mirror={false}
                            orientation="left"
                            padding={
                                          Object {
                                                        "bottom": 0,
                                                        "top": 0,
                                                      }
                            }
                            reversed={false}
                            scale="auto"
                            tickCount={5}
                            type="number"
                            width={60}
                            yAxisId={0}
              />
              <Tooltip
                            active={false}
                            animationDuration={400}
                            animationEasing="ease"
                            contentStyle={Object {}}
                            coordinate={
                                          Object {
                                                        "x": 0,
                                                        "y": 0,
                                                      }
                            }
                            cursor={
                                          Object {
                                                        "fill": "#fff",
                                                        "fillOpacity": 0.05,
                                                        "position": "top",
                                                      }
                            }
                            cursorStyle={Object {}}
                            filterNull={true}
                            isAnimationActive={true}
                            itemSorter={[Function]}
                            itemStyle={Object {}}
                            labelStyle={Object {}}
                            offset={10}
                            separator=" : "
                            useTranslate3d={false}
                            viewBox={
                                          Object {
                                                        "x1": 0,
                                                        "x2": 0,
                                                        "y1": 0,
                                                        "y2": 0,
                                                      }
                            }
                            wrapperStyle={Object {}}
              />
              <Legend
                            align="right"
                            iconSize={14}
                            iconType="circle"
                            layout="horizontal"
                            verticalAlign="top"
                            wrapperStyle={
                                          Object {
                                                        "top": -40,
                                                      }
                            }
              />
              <Bar
                            animationBegin={0}
                            animationDuration={400}
                            animationEasing="ease"
                            barSize={30}
                            data={Array []}
                            dataKey="offTrack"
                            fill="#FFAF30"
                            hide={false}
                            isAnimationActive={true}
                            layout="vertical"
                            legendType="rect"
                            minPointSize={0}
                            onAnimationEnd={[Function]}
                            onAnimationStart={[Function]}
                            stackId="a"
                            xAxisId={0}
                            yAxisId={0}
              />
              <Bar
                            animationBegin={0}
                            animationDuration={400}
                            animationEasing="ease"
                            barSize={30}
                            data={Array []}
                            dataKey="onTrack"
                            fill="#3359DB"
                            hide={false}
                            isAnimationActive={true}
                            layout="vertical"
                            legendType="rect"
                            minPointSize={0}
                            onAnimationEnd={[Function]}
                            onAnimationStart={[Function]}
                            stackId="a"
                            xAxisId={0}
                            yAxisId={0}
              />
</BarChart>,
            "className": "undefined",
            "debounce": 0,
            "height": 200,
            "width": "100%",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "barCategoryGap": "10%",
              "barGap": 4,
              "children": Array [
                <CartesianGrid
                  fill="none"
                  horizontal={true}
                  horizontalFill={Array []}
                  horizontalPoints={Array []}
                  stroke="#ccc"
                  vertical={false}
                  verticalFill={Array []}
                  verticalPoints={Array []}
/>,
                <XAxis
                  allowDataOverflow={false}
                  allowDecimals={true}
                  allowDuplicatedCategory={true}
                  dataKey="cohort"
                  domain={
                                    Array [
                                                      0,
                                                      "auto",
                                                    ]
                  }
                  height={30}
                  hide={false}
                  mirror={false}
                  orientation="bottom"
                  padding={
                                    Object {
                                                      "left": 0,
                                                      "right": 0,
                                                    }
                  }
                  reversed={false}
                  scale="auto"
                  tickCount={5}
                  type="category"
                  width={0}
                  xAxisId={0}
/>,
                <YAxis
                  allowDataOverflow={false}
                  allowDecimals={true}
                  allowDuplicatedCategory={true}
                  domain={
                                    Array [
                                                      0,
                                                      "auto",
                                                    ]
                  }
                  height={0}
                  hide={false}
                  label={
                                    Object {
                                                      "angle": -90,
                                                      "position": "insideBottomLeft",
                                                      "value": "Total DOB Fellows",
                                                    }
                  }
                  mirror={false}
                  orientation="left"
                  padding={
                                    Object {
                                                      "bottom": 0,
                                                      "top": 0,
                                                    }
                  }
                  reversed={false}
                  scale="auto"
                  tickCount={5}
                  type="number"
                  width={60}
                  yAxisId={0}
/>,
                <Tooltip
                  active={false}
                  animationDuration={400}
                  animationEasing="ease"
                  contentStyle={Object {}}
                  coordinate={
                                    Object {
                                                      "x": 0,
                                                      "y": 0,
                                                    }
                  }
                  cursor={
                                    Object {
                                                      "fill": "#fff",
                                                      "fillOpacity": 0.05,
                                                      "position": "top",
                                                    }
                  }
                  cursorStyle={Object {}}
                  filterNull={true}
                  isAnimationActive={true}
                  itemSorter={[Function]}
                  itemStyle={Object {}}
                  labelStyle={Object {}}
                  offset={10}
                  separator=" : "
                  useTranslate3d={false}
                  viewBox={
                                    Object {
                                                      "x1": 0,
                                                      "x2": 0,
                                                      "y1": 0,
                                                      "y2": 0,
                                                    }
                  }
                  wrapperStyle={Object {}}
/>,
                <Legend
                  align="right"
                  iconSize={14}
                  iconType="circle"
                  layout="horizontal"
                  verticalAlign="top"
                  wrapperStyle={
                                    Object {
                                                      "top": -40,
                                                    }
                  }
/>,
                <Bar
                  animationBegin={0}
                  animationDuration={400}
                  animationEasing="ease"
                  barSize={30}
                  data={Array []}
                  dataKey="offTrack"
                  fill="#FFAF30"
                  hide={false}
                  isAnimationActive={true}
                  layout="vertical"
                  legendType="rect"
                  minPointSize={0}
                  onAnimationEnd={[Function]}
                  onAnimationStart={[Function]}
                  stackId="a"
                  xAxisId={0}
                  yAxisId={0}
/>,
                <Bar
                  animationBegin={0}
                  animationDuration={400}
                  animationEasing="ease"
                  barSize={30}
                  data={Array []}
                  dataKey="onTrack"
                  fill="#3359DB"
                  hide={false}
                  isAnimationActive={true}
                  layout="vertical"
                  legendType="rect"
                  minPointSize={0}
                  onAnimationEnd={[Function]}
                  onAnimationStart={[Function]}
                  stackId="a"
                  xAxisId={0}
                  yAxisId={0}
/>,
              ],
              "data": Array [
                Object {
                  "OffTrack": 20,
                  "OnTrack": 20,
                  "name": "Cohort 1",
                },
                Object {
                  "OffTrack": 30,
                  "OnTrack": 39,
                  "name": "Cohort 2",
                },
                Object {
                  "OffTrack": 20,
                  "OnTrack": 90,
                  "name": "Cohort 3",
                },
              ],
              "layout": "horizontal",
              "margin": Object {
                "bottom": 5,
                "left": 30,
                "right": 30,
                "top": 20,
              },
              "reverseStackOrder": false,
              "stackOffset": "none",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "fill": "none",
                  "horizontal": true,
                  "horizontalFill": Array [],
                  "horizontalPoints": Array [],
                  "stroke": "#ccc",
                  "vertical": false,
                  "verticalFill": Array [],
                  "verticalPoints": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowDataOverflow": false,
                  "allowDecimals": true,
                  "allowDuplicatedCategory": true,
                  "dataKey": "cohort",
                  "domain": Array [
                    0,
                    "auto",
                  ],
                  "height": 30,
                  "hide": false,
                  "mirror": false,
                  "orientation": "bottom",
                  "padding": Object {
                    "left": 0,
                    "right": 0,
                  },
                  "reversed": false,
                  "scale": "auto",
                  "tickCount": 5,
                  "type": "category",
                  "width": 0,
                  "xAxisId": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowDataOverflow": false,
                  "allowDecimals": true,
                  "allowDuplicatedCategory": true,
                  "domain": Array [
                    0,
                    "auto",
                  ],
                  "height": 0,
                  "hide": false,
                  "label": Object {
                    "angle": -90,
                    "position": "insideBottomLeft",
                    "value": "Total DOB Fellows",
                  },
                  "mirror": false,
                  "orientation": "left",
                  "padding": Object {
                    "bottom": 0,
                    "top": 0,
                  },
                  "reversed": false,
                  "scale": "auto",
                  "tickCount": 5,
                  "type": "number",
                  "width": 60,
                  "yAxisId": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "animationDuration": 400,
                  "animationEasing": "ease",
                  "contentStyle": Object {},
                  "coordinate": Object {
                    "x": 0,
                    "y": 0,
                  },
                  "cursor": Object {
                    "fill": "#fff",
                    "fillOpacity": 0.05,
                    "position": "top",
                  },
                  "cursorStyle": Object {},
                  "filterNull": true,
                  "isAnimationActive": true,
                  "itemSorter": [Function],
                  "itemStyle": Object {},
                  "labelStyle": Object {},
                  "offset": 10,
                  "separator": " : ",
                  "useTranslate3d": false,
                  "viewBox": Object {
                    "x1": 0,
                    "x2": 0,
                    "y1": 0,
                    "y2": 0,
                  },
                  "wrapperStyle": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "align": "right",
                  "iconSize": 14,
                  "iconType": "circle",
                  "layout": "horizontal",
                  "verticalAlign": "top",
                  "wrapperStyle": Object {
                    "top": -40,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "animationBegin": 0,
                  "animationDuration": 400,
                  "animationEasing": "ease",
                  "barSize": 30,
                  "data": Array [],
                  "dataKey": "offTrack",
                  "fill": "#FFAF30",
                  "hide": false,
                  "isAnimationActive": true,
                  "layout": "vertical",
                  "legendType": "rect",
                  "minPointSize": 0,
                  "onAnimationEnd": [Function],
                  "onAnimationStart": [Function],
                  "stackId": "a",
                  "xAxisId": 0,
                  "yAxisId": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "animationBegin": 0,
                  "animationDuration": 400,
                  "animationEasing": "ease",
                  "barSize": 30,
                  "data": Array [],
                  "dataKey": "onTrack",
                  "fill": "#3359DB",
                  "hide": false,
                  "isAnimationActive": true,
                  "layout": "vertical",
                  "legendType": "rect",
                  "minPointSize": 0,
                  "onAnimationEnd": [Function],
                  "onAnimationStart": [Function],
                  "stackId": "a",
                  "xAxisId": 0,
                  "yAxisId": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
