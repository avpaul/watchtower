// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<StackBarChart /> Test Suite snapshot the component with data 1`] = `
<div
  className="chart_card scroll"
>
  <div
    className="chart_card__header"
  >
    <p
      className="chart_card__title"
    >
      DOB Fellows
    </p>
  </div>
  <ResponsiveContainer
    className="undefined"
    debounce={0}
    height={260}
    minWidth={1300}
    width="100%"
  >
    <BarChart
      barCategoryGap="10%"
      barGap={4}
      data={
        Array [
          Object {
            "OffTrack": 20,
            "OnTrack": 20,
            "name": "Cohort 1",
          },
          Object {
            "OffTrack": 30,
            "OnTrack": 39,
            "name": "Cohort 2",
          },
          Object {
            "OffTrack": 20,
            "OnTrack": 90,
            "name": "Cohort 3",
          },
        ]
      }
      layout="horizontal"
      margin={
        Object {
          "bottom": 20,
          "left": 30,
          "right": 30,
          "top": 20,
        }
      }
      reverseStackOrder={false}
      stackOffset="none"
    >
      <CartesianGrid
        fill="none"
        horizontal={true}
        horizontalFill={Array []}
        horizontalPoints={Array []}
        stroke="#ECECEC"
        vertical={false}
        verticalFill={Array []}
        verticalPoints={Array []}
      />
      <XAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        angle={-45}
        axisLine={
          Object {
            "stroke": "#ECECEC",
          }
        }
        dataKey="cohort"
        domain={
          Array [
            0,
            "auto",
          ]
        }
        dy={20}
        height={62}
        hide={false}
        interval={0}
        label={
          Object {
            "fontFamily": "DIN Pro Light",
            "fontSize": "14px",
            "position": "insideBottom",
          }
        }
        mirror={false}
        orientation="bottom"
        padding={
          Object {
            "left": 0,
            "right": 0,
          }
        }
        reversed={false}
        scale="auto"
        tick={
          Object {
            "fontFamily": "DIN Pro Light",
            "fontSize": "14px",
          }
        }
        tickCount={5}
        tickLine={false}
        tickMargin={15}
        tickSize={0}
        type="category"
        width={0}
        xAxisId={0}
      />
      <YAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        axisLine={
          Object {
            "stroke": "#ECECEC",
          }
        }
        domain={
          Array [
            0,
            "auto",
          ]
        }
        height={0}
        hide={false}
        label={
          Object {
            "angle": -90,
            "dx": -30,
            "fontFamily": "DIN Pro Light",
            "fontSize": "14px",
            "position": "center",
            "value": "Total DOB Fellows",
          }
        }
        mirror={false}
        orientation="left"
        padding={
          Object {
            "bottom": 0,
            "top": 0,
          }
        }
        reversed={false}
        scale="auto"
        tick={
          Object {
            "fontFamily": "DIN Pro Light",
            "fontSize": "12px",
          }
        }
        tickCount={5}
        tickLine={false}
        tickMargin={10}
        type="number"
        width={60}
        yAxisId={0}
      />
      <Tooltip
        active={false}
        animationDuration={400}
        animationEasing="ease"
        contentStyle={Object {}}
        coordinate={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        cursor={
          Object {
            "fill": "#fff",
            "fillOpacity": 0.05,
          }
        }
        cursorStyle={Object {}}
        filterNull={true}
        isAnimationActive={true}
        itemStyle={
          Object {
            "padding": "5px 21px",
            "textAlign": "center",
            "width": "162px",
          }
        }
        labelStyle={Object {}}
        offset={5}
        separator=" : "
        useTranslate3d={false}
        viewBox={
          Object {
            "x1": 0,
            "x2": 0,
            "y1": 0,
            "y2": 0,
          }
        }
        wrapperStyle={
          Object {
            "fontSize": "12px",
            "textAlign": "center",
          }
        }
      />
      <Legend
        align="right"
        iconSize={14}
        iconType="circle"
        layout="horizontal"
        verticalAlign="top"
        wrapperStyle={
          Object {
            "top": -40,
          }
        }
      />
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        barSize={40}
        data={Array []}
        dataKey="offTrack"
        fill="#FFAF30"
        hide={false}
        isAnimationActive={true}
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        name="Off Track"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        stackId="a"
        xAxisId={0}
        yAxisId={0}
      />
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        barSize={40}
        data={Array []}
        dataKey="onTrack"
        fill="#3359DB"
        hide={false}
        isAnimationActive={true}
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        name="On Track"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        stackId="a"
        xAxisId={0}
        yAxisId={0}
      />
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        barSize={40}
        data={Array []}
        dataKey="null"
        fill="#D3D3D3"
        hide={false}
        isAnimationActive={true}
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        name="No Status"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        stackId="a"
        xAxisId={0}
        yAxisId={0}
      />
    </BarChart>
  </ResponsiveContainer>
</div>
`;
