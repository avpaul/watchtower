// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests the ProjectEngineerTable renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProjectEngineerTable
    engineer={Object {}}
    engineers={
        Array [
            Object {},
          ]
    }
    loading={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Table>
        <TableHeader
                headers={
                        Array [
                                "Engineer",
                                "Role",
                                "Cohort",
                                "Appr.End Date",
                                "Start Date",
                              ]
                }
        />
        <ProjectEngineerRow
                engineer={Object {}}
                engineerCells={
                        Array [
                                <div>
                                  <img
                                            alt="engineer"
                                            src={undefined}
                                  />
                                  <span>
                                             
                                  </span>
                        </div>,
                                undefined,
                                undefined,
                                "29/10/2018",
                                "29/10/2018",
                              ]
                }
        />
</Table>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <TableHeader
            headers={
                        Array [
                                    "Engineer",
                                    "Role",
                                    "Cohort",
                                    "Appr.End Date",
                                    "Start Date",
                                  ]
            }
/>,
          Array [
            <ProjectEngineerRow
              engineer={Object {}}
              engineerCells={
                            Array [
                                          <div>
                                            <img
                                                            alt="engineer"
                                                            src={undefined}
                                            />
                                            <span>
                                                             
                                            </span>
                            </div>,
                                          undefined,
                                          undefined,
                                          "29/10/2018",
                                          "29/10/2018",
                                        ]
              }
/>,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "headers": Array [
              "Engineer",
              "Role",
              "Cohort",
              "Appr.End Date",
              "Start Date",
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "weak-key-0",
          "nodeType": "function",
          "props": Object {
            "engineer": Object {},
            "engineerCells": Array [
              <div>
                <img
                                alt="engineer"
                                src={undefined}
                />
                <span>
                                 
                </span>
</div>,
              undefined,
              undefined,
              "29/10/2018",
              "29/10/2018",
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Table>
          <TableHeader
                    headers={
                              Array [
                                        "Engineer",
                                        "Role",
                                        "Cohort",
                                        "Appr.End Date",
                                        "Start Date",
                                      ]
                    }
          />
          <ProjectEngineerRow
                    engineer={Object {}}
                    engineerCells={
                              Array [
                                        <div>
                                          <img
                                                      alt="engineer"
                                                      src={undefined}
                                          />
                                          <span>
                                                       
                                          </span>
                              </div>,
                                        undefined,
                                        undefined,
                                        "29/10/2018",
                                        "29/10/2018",
                                      ]
                    }
          />
</Table>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <TableHeader
              headers={
                            Array [
                                          "Engineer",
                                          "Role",
                                          "Cohort",
                                          "Appr.End Date",
                                          "Start Date",
                                        ]
              }
/>,
            Array [
              <ProjectEngineerRow
                engineer={Object {}}
                engineerCells={
                                Array [
                                                <div>
                                                  <img
                                                                    alt="engineer"
                                                                    src={undefined}
                                                  />
                                                  <span>
                                                                     
                                                  </span>
                                </div>,
                                                undefined,
                                                undefined,
                                                "29/10/2018",
                                                "29/10/2018",
                                              ]
                }
/>,
            ],
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "headers": Array [
                "Engineer",
                "Role",
                "Cohort",
                "Appr.End Date",
                "Start Date",
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "weak-key-0",
            "nodeType": "function",
            "props": Object {
              "engineer": Object {},
              "engineerCells": Array [
                <div>
                  <img
                                    alt="engineer"
                                    src={undefined}
                  />
                  <span>
                                     
                  </span>
</div>,
                undefined,
                undefined,
                "29/10/2018",
                "29/10/2018",
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`tests the ProjectEngineerTable renders correctly 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProjectEngineerTable
    engineer={Object {}}
    engineers={Array []}
    loading={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "customStyle": Object {},
      "message": "There are currently no Engineers on this project",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "customStyle": Object {},
        "message": "There are currently no Engineers on this project",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`tests the ProjectEngineerTable renders correctly 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProjectEngineerTable
    engineer={Object {}}
    engineers={Array []}
    loading={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "customStyle": Object {},
      "message": "There are currently no Engineers on this project",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "customStyle": Object {},
        "message": "There are currently no Engineers on this project",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
