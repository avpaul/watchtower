// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests the Engineer card renders correctly when loading is false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EngineerCard
    data={
        Object {
            "fellow": Object {
              "apprenticeship_end_date": "",
              "apprenticeship_project": "WatchTower",
              "apprenticeship_start_date": "",
              "apprenticeship_technology": "PHP/JavaScript",
              "fellow_id": "-LJK1qECFdekucrwqqkh",
              "first_name": "Cristian",
              "last_name": "Bartell",
              "manager_id": "-LGy4OuPDHCZCZvDuPz0",
              "sims_end_date": "",
              "sims_project": "AuthorsHaven",
              "sims_project_technology": "Python/Django",
              "sims_start_date": "",
            },
            "loading": false,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3
          className="profile-card-header"
>
          My Profile
</h3>,
        <div
          className="bio-card text-center"
>
          <Unknown>
                    <ProfileCard
                              firstName="Cristian"
                              lastName="Bartell"
                              picture={undefined}
                    />
                    <ProjectCards
                              endDate=""
                              picture={undefined}
                              projectLevel="Simulations"
                              projectName="AuthorsHaven"
                              startDate=""
                              technologies="Python/Django"
                    />
                    <ProjectCards
                              endDate=""
                              picture={undefined}
                              projectLevel="Apprenticeship"
                              projectName="WatchTower"
                              startDate=""
                              technologies="PHP/JavaScript"
                    />
          </Unknown>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "My Profile",
          "className": "profile-card-header",
        },
        "ref": null,
        "rendered": "My Profile",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Unknown>
            <ProfileCard
                        firstName="Cristian"
                        lastName="Bartell"
                        picture={undefined}
            />
            <ProjectCards
                        endDate=""
                        picture={undefined}
                        projectLevel="Simulations"
                        projectName="AuthorsHaven"
                        startDate=""
                        technologies="Python/Django"
            />
            <ProjectCards
                        endDate=""
                        picture={undefined}
                        projectLevel="Apprenticeship"
                        projectName="WatchTower"
                        startDate=""
                        technologies="PHP/JavaScript"
            />
</Unknown>,
          "className": "bio-card text-center",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ProfileCard
                firstName="Cristian"
                lastName="Bartell"
                picture={undefined}
/>,
              <ProjectCards
                endDate=""
                picture={undefined}
                projectLevel="Simulations"
                projectName="AuthorsHaven"
                startDate=""
                technologies="Python/Django"
/>,
              <ProjectCards
                endDate=""
                picture={undefined}
                projectLevel="Apprenticeship"
                projectName="WatchTower"
                startDate=""
                technologies="PHP/JavaScript"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "firstName": "Cristian",
                "lastName": "Bartell",
                "picture": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "endDate": "",
                "picture": undefined,
                "projectLevel": "Simulations",
                "projectName": "AuthorsHaven",
                "startDate": "",
                "technologies": "Python/Django",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "endDate": "",
                "picture": undefined,
                "projectLevel": "Apprenticeship",
                "projectName": "WatchTower",
                "startDate": "",
                "technologies": "PHP/JavaScript",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": Symbol(react.fragment),
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3
            className="profile-card-header"
>
            My Profile
</h3>,
          <div
            className="bio-card text-center"
>
            <Unknown>
                        <ProfileCard
                                    firstName="Cristian"
                                    lastName="Bartell"
                                    picture={undefined}
                        />
                        <ProjectCards
                                    endDate=""
                                    picture={undefined}
                                    projectLevel="Simulations"
                                    projectName="AuthorsHaven"
                                    startDate=""
                                    technologies="Python/Django"
                        />
                        <ProjectCards
                                    endDate=""
                                    picture={undefined}
                                    projectLevel="Apprenticeship"
                                    projectName="WatchTower"
                                    startDate=""
                                    technologies="PHP/JavaScript"
                        />
            </Unknown>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "My Profile",
            "className": "profile-card-header",
          },
          "ref": null,
          "rendered": "My Profile",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Unknown>
              <ProfileCard
                            firstName="Cristian"
                            lastName="Bartell"
                            picture={undefined}
              />
              <ProjectCards
                            endDate=""
                            picture={undefined}
                            projectLevel="Simulations"
                            projectName="AuthorsHaven"
                            startDate=""
                            technologies="Python/Django"
              />
              <ProjectCards
                            endDate=""
                            picture={undefined}
                            projectLevel="Apprenticeship"
                            projectName="WatchTower"
                            startDate=""
                            technologies="PHP/JavaScript"
              />
</Unknown>,
            "className": "bio-card text-center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ProfileCard
                  firstName="Cristian"
                  lastName="Bartell"
                  picture={undefined}
/>,
                <ProjectCards
                  endDate=""
                  picture={undefined}
                  projectLevel="Simulations"
                  projectName="AuthorsHaven"
                  startDate=""
                  technologies="Python/Django"
/>,
                <ProjectCards
                  endDate=""
                  picture={undefined}
                  projectLevel="Apprenticeship"
                  projectName="WatchTower"
                  startDate=""
                  technologies="PHP/JavaScript"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "firstName": "Cristian",
                  "lastName": "Bartell",
                  "picture": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "endDate": "",
                  "picture": undefined,
                  "projectLevel": "Simulations",
                  "projectName": "AuthorsHaven",
                  "startDate": "",
                  "technologies": "Python/Django",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "endDate": "",
                  "picture": undefined,
                  "projectLevel": "Apprenticeship",
                  "projectName": "WatchTower",
                  "startDate": "",
                  "technologies": "PHP/JavaScript",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": Symbol(react.fragment),
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`tests the Engineer card renders correctly when loading is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EngineerCard
    data={
        Object {
            "fellow": Object {},
            "loading": true,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3
          className="profile-card-header"
>
          My Profile
</h3>,
        <div
          className="bio-card text-center"
>
          <Loader
                    size=""
          />
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "My Profile",
          "className": "profile-card-header",
        },
        "ref": null,
        "rendered": "My Profile",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Loader
            size=""
/>,
          "className": "bio-card text-center",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "size": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3
            className="profile-card-header"
>
            My Profile
</h3>,
          <div
            className="bio-card text-center"
>
            <Loader
                        size=""
            />
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "My Profile",
            "className": "profile-card-header",
          },
          "ref": null,
          "rendered": "My Profile",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Loader
              size=""
/>,
            "className": "bio-card text-center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "size": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
