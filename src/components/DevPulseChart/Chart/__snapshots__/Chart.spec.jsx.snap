// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders to match snapshot 1`] = `
<div
  className="line-chart-card pulse-chart__legend"
>
  <div
    className="line-chart-card__header"
  />
  <ResponsiveContainer
    debounce={0}
    height={330}
    minWidth={500}
    width="100%"
  >
    <LineChart
      barCategoryGap="10%"
      barGap={4}
      data={
        Array [
          Object {
            "average_score": 1.67,
            "created_at": "2018-11-18 18:49:54",
            "fellow_id": "-LJK1qECFdekucrwqqkh",
            "id": 59284,
            "level": "D1",
            "scores": Array [
              Object {
                "attribute": "Quantity",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 13,
                "note": "He paired and delivered a story on top of the story assigned to her for her for the week.",
                "rating_id": 59284,
                "score": "2",
              },
              Object {
                "attribute": "Integration",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 14,
                "note": "He has managed to keep all stakeholders informed of progress of his work but also his teams progress.",
                "rating_id": 59284,
                "score": "2",
              },
              Object {
                "attribute": "Communication",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 15,
                "note": "He has managed to keep all stakeholders informed of progress of his work but also his teams progress.&nbsp;",
                "rating_id": 59284,
                "score": "2",
              },
              Object {
                "attribute": "Professionalism",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 16,
                "note": "",
                "rating_id": 59284,
                "score": "1",
              },
              Object {
                "attribute": "Initiative",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 17,
                "note": "",
                "rating_id": 59284,
                "score": "1",
              },
              Object {
                "attribute": "Quality",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 18,
                "note": "His ability to learn what is required to be completent has greatly improved. He has been very proactive and should continue to do so. Great effort, keep it up",
                "rating_id": 59284,
                "score": "2",
              },
            ],
            "staff_id": "-LAmk78f7GyBWkt2UWpb",
            "updated_at": "2018-11-18 18:49:54",
          },
          Object {
            "average_score": 1.33,
            "created_at": "2018-11-26 12:24:15",
            "fellow_id": "-LJK1qECFdekucrwqqkh",
            "id": 60171,
            "level": "D1",
            "scores": Array [
              Object {
                "attribute": "Quality",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 7,
                "note": "",
                "rating_id": 60171,
                "score": "1",
              },
              Object {
                "attribute": "Integration",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 8,
                "note": "He followed the TTL around to make sure he merged every ready PR. He would also personally follow up to make sure his teammates acted on the comments that were blocking their PRs from being merged.",
                "rating_id": 60171,
                "score": "2",
              },
              Object {
                "attribute": "Professionalism",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 9,
                "note": "",
                "rating_id": 60171,
                "score": "1",
              },
              Object {
                "attribute": "Communication",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 10,
                "note": "",
                "rating_id": 60171,
                "score": "1",
              },
              Object {
                "attribute": "Initiative",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 11,
                "note": "",
                "rating_id": 60171,
                "score": "1",
              },
              Object {
                "attribute": "Quantity",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 12,
                "note": "Gordon really impressed when it came to quantity this week. I expected him to finish two features and he not only finished those but he went ahead to work on two pending backend PRs and then he also submitted about 3 other relatively small front-end PRs.",
                "rating_id": 60171,
                "score": "2",
              },
            ],
            "staff_id": "-LAmk78f7GyBWkt2UWpb",
            "updated_at": "2018-11-26 12:24:15",
          },
          Object {
            "average_score": 1.67,
            "created_at": "2018-11-18 18:49:54",
            "fellow_id": "-LJK1qECFdekucrwqqkh",
            "id": 59284,
            "level": "D1",
            "scores": Array [
              Object {
                "attribute": "Quantity",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 13,
                "note": "He paired and delivered a story on top of the story assigned to her for her for the week.",
                "rating_id": 59284,
                "score": "2",
              },
              Object {
                "attribute": "Integration",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 14,
                "note": "He has managed to keep all stakeholders informed of progress of his work but also his teams progress.",
                "rating_id": 59284,
                "score": "2",
              },
              Object {
                "attribute": "Communication",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 15,
                "note": "He has managed to keep all stakeholders informed of progress of his work but also his teams progress.&nbsp;",
                "rating_id": 59284,
                "score": "2",
              },
              Object {
                "attribute": "Professionalism",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 16,
                "note": "",
                "rating_id": 59284,
                "score": "1",
              },
              Object {
                "attribute": "Initiative",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 17,
                "note": "",
                "rating_id": 59284,
                "score": "1",
              },
              Object {
                "attribute": "Quality",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 18,
                "note": "His ability to learn what is required to be completent has greatly improved. He has been very proactive and should continue to do so. Great effort, keep it up",
                "rating_id": 59284,
                "score": "2",
              },
            ],
            "staff_id": "-LAmk78f7GyBWkt2UWpb",
            "updated_at": "2018-11-18 18:49:54",
          },
          Object {
            "average_score": 1.33,
            "created_at": "2018-11-26 12:24:15",
            "fellow_id": "-LJK1qECFdekucrwqqkh",
            "id": 60171,
            "level": "D1",
            "scores": Array [
              Object {
                "attribute": "Quality",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 7,
                "note": "",
                "rating_id": 60171,
                "score": "1",
              },
              Object {
                "attribute": "Integration",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 8,
                "note": "He followed the TTL around to make sure he merged every ready PR. He would also personally follow up to make sure his teammates acted on the comments that were blocking their PRs from being merged.",
                "rating_id": 60171,
                "score": "2",
              },
              Object {
                "attribute": "Professionalism",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 9,
                "note": "",
                "rating_id": 60171,
                "score": "1",
              },
              Object {
                "attribute": "Communication",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 10,
                "note": "",
                "rating_id": 60171,
                "score": "1",
              },
              Object {
                "attribute": "Initiative",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 11,
                "note": "",
                "rating_id": 60171,
                "score": "1",
              },
              Object {
                "attribute": "Quantity",
                "fellow_id": "-LJK1qECFdekucrwqqkh",
                "id": 12,
                "note": "Gordon really impressed when it came to quantity this week. I expected him to finish two features and he not only finished those but he went ahead to work on two pending backend PRs and then he also submitted about 3 other relatively small front-end PRs.",
                "rating_id": 60171,
                "score": "2",
              },
            ],
            "staff_id": "-LAmk78f7GyBWkt2UWpb",
            "updated_at": "2018-11-26 12:24:15",
          },
        ]
      }
      height={300}
      layout="horizontal"
      margin={
        Object {
          "bottom": 50,
          "left": 35,
          "right": 50,
          "top": 20,
        }
      }
      reverseStackOrder={false}
      stackOffset="none"
      width={300}
    >
      <XAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        angle={45}
        axisLine={
          Object {
            "stroke": "#ECECEC",
          }
        }
        dataKey="week"
        domain={
          Array [
            0,
            "auto",
          ]
        }
        height={30}
        hide={false}
        interval={0}
        label={
          Object {
            "fontFamily": "DIN Pro Light",
          }
        }
        mirror={false}
        orientation="bottom"
        padding={
          Object {
            "left": 25,
          }
        }
        reversed={false}
        scale="auto"
        tick={
          Object {
            "fontFamily": "DIN Pro Light",
            "fontSize": "12px",
          }
        }
        tickCount={5}
        tickLine={false}
        tickMargin={25}
        type="category"
        width={0}
        xAxisId={0}
      />
      <YAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        axisLine={
          Object {
            "stroke": "#ECECEC",
          }
        }
        domain={
          Array [
            -3,
            3,
          ]
        }
        height={0}
        hide={false}
        mirror={false}
        orientation="left"
        padding={
          Object {
            "bottom": 0,
            "top": 0,
          }
        }
        reversed={false}
        scale="auto"
        tick={
          Object {
            "fontFamily": "DIN Pro Light",
            "fontSize": "14px",
          }
        }
        tickCount={5}
        tickLine={false}
        tickMargin={15}
        tickSize={0}
        ticks={
          Array [
            -2,
            -1,
            0,
            1,
            2,
          ]
        }
        type="number"
        width={60}
        yAxisId={0}
      >
        <Label
          angle={-90}
          dx={-20}
          fontFamily="DIN Pro Light"
          offset={5}
          position="center"
          value="DevPulse Ratings"
        />
      </YAxis>
      <CartesianGrid
        fill="none"
        horizontal={true}
        horizontalFill={Array []}
        horizontalPoints={Array []}
        stroke="#ccc"
        vertical={false}
        verticalFill={Array []}
        verticalPoints={Array []}
      />
      <ReferenceLine
        fill="none"
        fillOpacity={1}
        ifOverflow="discard"
        isFront={false}
        stroke="white"
        strokeDasharray="5 5"
        strokeWidth={1}
        xAxisId={0}
        y="1"
        yAxisId={0}
      />
      <ReferenceLine
        dx={-50}
        fill="none"
        fillOpacity={1}
        ifOverflow="discard"
        isFront={false}
        offset={25}
        stroke="#ccc"
        strokeWidth={1}
        xAxisId={0}
        yAxisId={0}
      />
      <Tooltip
        active={false}
        animationDuration={400}
        animationEasing="ease"
        contentStyle={Object {}}
        coordinate={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        cursor={true}
        cursorStyle={Object {}}
        filterNull={true}
        isAnimationActive={true}
        itemStyle={Object {}}
        labelStyle={Object {}}
        offset={10}
        separator=" : "
        useTranslate3d={false}
        viewBox={
          Object {
            "x1": 0,
            "x2": 0,
            "y1": 0,
            "y2": 0,
          }
        }
        wrapperStyle={Object {}}
      />
      <Legend
        align="center"
        iconSize={14}
        iconType="circle"
        itemStyle={
          Object {
            "paddingRight": "40px",
            "textAlign": "center",
          }
        }
        layout="horizontal"
        payload={
          Array [
            Object {
              "color": "#FF3030",
              "type": "circle",
              "value": "Quantity : 1.17",
            },
            Object {
              "color": "#9C8330",
              "type": "circle",
              "value": "Quality : 1.11",
            },
            Object {
              "color": "#000000",
              "type": "circle",
              "value": "Professionalism : 1.17",
            },
            Object {
              "color": "#72BCD4",
              "type": "circle",
              "value": "Initiative : 1.05",
            },
            Object {
              "color": "#FFAF30",
              "type": "circle",
              "value": "Integration : 1.23",
            },
            Object {
              "color": "#3359DB",
              "marginRight": "40px",
              "type": "circle",
              "value": "Communication : 1.23",
            },
          ]
        }
        verticalAlign="top"
        wrapperStyle={
          Object {
            "fontFamily": "DIN Pro Light",
            "top": -44,
            "width": "inherit",
          }
        }
      />
      <Line
        activeDot={
          Object {
            "r": 4,
          }
        }
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineA"
        connectNulls={false}
        dataKey="communication"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#3359DB"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineB"
        connectNulls={false}
        dataKey="integration"
        dot={true}
        fill="#fff"
        hide={false}
        id="ID02"
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#FFAF30"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineC"
        connectNulls={false}
        dataKey="initiative"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#72BCD4"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineD"
        connectNulls={false}
        dataKey="professionalism"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#000000"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineE"
        connectNulls={false}
        dataKey="quality"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#9C8330"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineF"
        connectNulls={false}
        dataKey="quantity"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#FF3030"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
    </LineChart>
  </ResponsiveContainer>
</div>
`;

exports[`renders to match snapshot 2`] = `
<div
  className="line-chart-card pulse-chart__legend"
>
  <div
    className="line-chart-card__header"
  />
  <ResponsiveContainer
    debounce={0}
    height={330}
    minWidth={500}
    width="100%"
  >
    <LineChart
      barCategoryGap="10%"
      barGap={4}
      data={Array []}
      height={300}
      layout="horizontal"
      margin={
        Object {
          "bottom": 50,
          "left": 35,
          "right": 50,
          "top": 20,
        }
      }
      reverseStackOrder={false}
      stackOffset="none"
      width={300}
    >
      <XAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        angle={45}
        axisLine={
          Object {
            "stroke": "#ECECEC",
          }
        }
        dataKey="week"
        domain={
          Array [
            0,
            "auto",
          ]
        }
        height={30}
        hide={false}
        interval={0}
        label={
          Object {
            "fontFamily": "DIN Pro Light",
          }
        }
        mirror={false}
        orientation="bottom"
        padding={
          Object {
            "left": 25,
          }
        }
        reversed={false}
        scale="auto"
        tick={
          Object {
            "fontFamily": "DIN Pro Light",
            "fontSize": "12px",
          }
        }
        tickCount={5}
        tickLine={false}
        tickMargin={25}
        type="category"
        width={0}
        xAxisId={0}
      />
      <YAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        axisLine={
          Object {
            "stroke": "#ECECEC",
          }
        }
        domain={
          Array [
            -3,
            3,
          ]
        }
        height={0}
        hide={false}
        mirror={false}
        orientation="left"
        padding={
          Object {
            "bottom": 0,
            "top": 0,
          }
        }
        reversed={false}
        scale="auto"
        tick={
          Object {
            "fontFamily": "DIN Pro Light",
            "fontSize": "14px",
          }
        }
        tickCount={5}
        tickLine={false}
        tickMargin={15}
        tickSize={0}
        ticks={
          Array [
            -2,
            -1,
            0,
            1,
            2,
          ]
        }
        type="number"
        width={60}
        yAxisId={0}
      >
        <Label
          angle={-90}
          dx={-20}
          fontFamily="DIN Pro Light"
          offset={5}
          position="center"
          value="DevPulse Ratings"
        />
      </YAxis>
      <CartesianGrid
        fill="none"
        horizontal={true}
        horizontalFill={Array []}
        horizontalPoints={Array []}
        stroke="#ccc"
        vertical={false}
        verticalFill={Array []}
        verticalPoints={Array []}
      />
      <ReferenceLine
        fill="none"
        fillOpacity={1}
        ifOverflow="discard"
        isFront={false}
        stroke="white"
        strokeDasharray="5 5"
        strokeWidth={1}
        xAxisId={0}
        y="1"
        yAxisId={0}
      />
      <ReferenceLine
        dx={-50}
        fill="none"
        fillOpacity={1}
        ifOverflow="discard"
        isFront={false}
        offset={25}
        stroke="#ccc"
        strokeWidth={1}
        x="week"
        xAxisId={0}
        yAxisId={0}
      />
      <Tooltip
        active={false}
        animationDuration={400}
        animationEasing="ease"
        contentStyle={Object {}}
        coordinate={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        cursor={true}
        cursorStyle={Object {}}
        filterNull={true}
        isAnimationActive={true}
        itemStyle={Object {}}
        labelStyle={Object {}}
        offset={10}
        separator=" : "
        useTranslate3d={false}
        viewBox={
          Object {
            "x1": 0,
            "x2": 0,
            "y1": 0,
            "y2": 0,
          }
        }
        wrapperStyle={Object {}}
      />
      <Legend
        align="center"
        iconSize={14}
        iconType="circle"
        itemStyle={
          Object {
            "paddingRight": "40px",
            "textAlign": "center",
          }
        }
        layout="horizontal"
        payload={
          Array [
            Object {
              "color": "#FF3030",
              "type": "circle",
              "value": "Quantity : 1.17",
            },
            Object {
              "color": "#9C8330",
              "type": "circle",
              "value": "Quality : 1.11",
            },
            Object {
              "color": "#000000",
              "type": "circle",
              "value": "Professionalism : 1.17",
            },
            Object {
              "color": "#72BCD4",
              "type": "circle",
              "value": "Initiative : 1.05",
            },
            Object {
              "color": "#FFAF30",
              "type": "circle",
              "value": "Integration : 1.23",
            },
            Object {
              "color": "#3359DB",
              "marginRight": "40px",
              "type": "circle",
              "value": "Communication : 1.23",
            },
          ]
        }
        verticalAlign="top"
        wrapperStyle={
          Object {
            "fontFamily": "DIN Pro Light",
            "top": -44,
            "width": "inherit",
          }
        }
      />
      <Line
        activeDot={
          Object {
            "r": 4,
          }
        }
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineA"
        connectNulls={false}
        dataKey="communication"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#3359DB"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineB"
        connectNulls={false}
        dataKey="integration"
        dot={true}
        fill="#fff"
        hide={false}
        id="ID02"
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#FFAF30"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineC"
        connectNulls={false}
        dataKey="initiative"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#72BCD4"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineD"
        connectNulls={false}
        dataKey="professionalism"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#000000"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineE"
        connectNulls={false}
        dataKey="quality"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#9C8330"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
      <Line
        activeDot={true}
        animateNewValues={true}
        animationBegin={0}
        animationDuration={1500}
        animationEasing="ease"
        className="lineF"
        connectNulls={false}
        dataKey="quantity"
        dot={true}
        fill="#fff"
        hide={false}
        isAnimationActive={true}
        legendType="line"
        onAnimationEnd={[Function]}
        onAnimationStart={[Function]}
        points={Array []}
        stroke="#FF3030"
        strokeWidth={1}
        type="monotone"
        xAxisId={0}
        yAxisId={0}
      />
    </LineChart>
  </ResponsiveContainer>
</div>
`;
