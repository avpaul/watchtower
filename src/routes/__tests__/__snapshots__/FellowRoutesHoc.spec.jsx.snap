// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FellowDashboards /> should call activate account 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FellowDashboards
    activateCadreEngineerAccount={[Function]}
    d1EngineerData={Array []}
    getCadreEngineers={[Function]}
    history={
        Object {
            "push": [Function],
          }
    }
    loading={false}
    role={
        Object {
            "Andelan": "jey",
          }
    }
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
    user={
        Object {
            "name": "Test User",
            "roles": Object {
              "Andelan": "jey",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <FellowDashboard
        activateCadreEngineerAccount={[Function]}
        d1EngineerData={Array []}
        getCadreEngineers={[Function]}
        history={
                Object {
                        "push": [Function],
                      }
        }
        loading={false}
        role={
                Object {
                        "Andelan": "jey",
                      }
        }
        store={
                Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      }
        }
        user={
                Object {
                        "name": "Test User",
                        "roles": Object {
                          "Andelan": "jey",
                        },
                      }
        }
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "activateCadreEngineerAccount": [Function],
        "d1EngineerData": Array [],
        "getCadreEngineers": [Function],
        "history": Object {
          "push": [Function],
        },
        "loading": false,
        "role": Object {
          "Andelan": "jey",
        },
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "user": Object {
          "name": "Test User",
          "roles": Object {
            "Andelan": "jey",
          },
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <FellowDashboard
          activateCadreEngineerAccount={[Function]}
          d1EngineerData={Array []}
          getCadreEngineers={[Function]}
          history={
                    Object {
                              "push": [Function],
                            }
          }
          loading={false}
          role={
                    Object {
                              "Andelan": "jey",
                            }
          }
          store={
                    Object {
                              "clearActions": [Function],
                              "dispatch": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                            }
          }
          user={
                    Object {
                              "name": "Test User",
                              "roles": Object {
                                "Andelan": "jey",
                              },
                            }
          }
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activateCadreEngineerAccount": [Function],
          "d1EngineerData": Array [],
          "getCadreEngineers": [Function],
          "history": Object {
            "push": [Function],
          },
          "loading": false,
          "role": Object {
            "Andelan": "jey",
          },
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "user": Object {
            "name": "Test User",
            "roles": Object {
              "Andelan": "jey",
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<FellowDashboards /> should render well 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(FellowDashboards)
    activateCadreEngineerAccount={[Function]}
    d1EngineerData={
        Object {
            "email": "collins.muru@andela.com",
            "name": "collins",
          }
    }
    getCadreEngineers={[Function]}
    history={
        Object {
            "push": [Function],
          }
    }
    role={
        Object {
            "Andelan": "jey",
          }
    }
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
    user={
        Object {
            "name": "Test User",
            "roles": Object {
              "Andelan": "jey",
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "activateCadreEngineerAccount": [Function],
      "d1EngineerData": Array [
        Object {
          "account_active": false,
          "email": "chidozie.nwoga@andela.com",
          "id": 1,
        },
      ],
      "getCadreEngineers": [Function],
      "history": Object {
        "push": [Function],
      },
      "loading": false,
      "role": Object {
        "Andelan": "jey",
      },
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "user": Object {
        "name": "Test User",
        "roles": Object {
          "Andelan": "jey",
        },
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activateCadreEngineerAccount": [Function],
        "d1EngineerData": Array [
          Object {
            "account_active": false,
            "email": "chidozie.nwoga@andela.com",
            "id": 1,
          },
        ],
        "getCadreEngineers": [Function],
        "history": Object {
          "push": [Function],
        },
        "loading": false,
        "role": Object {
          "Andelan": "jey",
        },
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "user": Object {
          "name": "Test User",
          "roles": Object {
            "Andelan": "jey",
          },
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): Object {
    "storeSubscription": undefined,
  },
}
`;
