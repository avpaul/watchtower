// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests FellowPerformance component component shallow renders the paginated fellow performance component correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    component={
        <FellowPerformance
            feedback={
                Object {
                    "payload": Array [],
                    "total": 10,
                  }
            }
            fellowPrePipFeedback={
                Object {
                    "data": Array [],
                    "total": 23,
                  }
            }
            getFellowPipFeedback={[Function]}
            getFellowPrePipFeedback={[Function]}
        />
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "component": <FellowPerformance
        component={
                <FellowPerformance
                        feedback={
                                Object {
                                        "payload": Array [],
                                        "total": 10,
                                      }
                        }
                        fellowPrePipFeedback={
                                Object {
                                        "data": Array [],
                                        "total": 23,
                                      }
                        }
                        getFellowPipFeedback={[Function]}
                        getFellowPrePipFeedback={[Function]}
                />
        }
/>,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "component": <FellowPerformance
          component={
                    <FellowPerformance
                              feedback={
                                        Object {
                                                  "payload": Array [],
                                                  "total": 10,
                                                }
                              }
                              fellowPrePipFeedback={
                                        Object {
                                                  "data": Array [],
                                                  "total": 23,
                                                }
                              }
                              getFellowPipFeedback={[Function]}
                              getFellowPrePipFeedback={[Function]}
                    />
          }
/>,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
