// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test view projects should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ViewProjects
    allProjects={
        Object {
            "data": Array [
              Object {
                "channels": null,
                "id": 1,
                "manager": "-LAmk78f7GyBWkt2UWpb",
                "name": "test project",
                "technologies": "NodeJs,Laravel",
                "type": "internal",
              },
            ],
          }
    }
    fetchAllProjects={[Function]}
    projectData={
        Array [
            Object {
              "channels": null,
              "id": 1,
              "manager": "-LAmk78f7GyBWkt2UWpb",
              "name": "test project",
              "technologies": "NodeJs,Laravel",
              "type": "internal",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <MapProjectCards
        projectData={
                Array [
                        Object {
                          "channels": null,
                          "id": 1,
                          "manager": "-LAmk78f7GyBWkt2UWpb",
                          "name": "test project",
                          "technologies": "NodeJs,Laravel",
                          "type": "internal",
                        },
                      ]
        }
/>,
      "className": "cadre__page",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "projectData": Array [
          Object {
            "channels": null,
            "id": 1,
            "manager": "-LAmk78f7GyBWkt2UWpb",
            "name": "test project",
            "technologies": "NodeJs,Laravel",
            "type": "internal",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <MapProjectCards
          projectData={
                    Array [
                              Object {
                                "channels": null,
                                "id": 1,
                                "manager": "-LAmk78f7GyBWkt2UWpb",
                                "name": "test project",
                                "technologies": "NodeJs,Laravel",
                                "type": "internal",
                              },
                            ]
          }
/>,
        "className": "cadre__page",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "projectData": Array [
            Object {
              "channels": null,
              "id": 1,
              "manager": "-LAmk78f7GyBWkt2UWpb",
              "name": "test project",
              "technologies": "NodeJs,Laravel",
              "type": "internal",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
