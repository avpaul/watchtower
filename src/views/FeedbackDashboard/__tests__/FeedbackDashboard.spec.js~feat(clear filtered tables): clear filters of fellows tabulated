import React from 'react';
import { shallow } from 'enzyme';
import FeedbackDashboard from '../FeedbackDashboard';
import MapFeedbackFilterCard from '../../../components/MapFeedbackFilterCard';
import FellowFilterCard from '../../../components/FellowFilterCard';
import feedbackData from '../../../__mocks__/feedbackSummary.json';

describe('FeedbackDashboard tests', () => {
  const setup = (user, role) => {
    const props = {
      user,
      role,
      getManagerFeedback: jest.fn().mockImplementation(() =>
        Promise.resolve({
          error: false,
          managersFeedback: feedbackData
        })
      )
    };
    const feedbackDashboardWrapper = shallow(<FeedbackDashboard {...props} />);
    return { feedbackDashboardWrapper };
  };

  it('should render feedback dashboard without crashing', () => {
    const { feedbackDashboardWrapper } = setup(
      { roles: 'WATCH_TOWER_LF' },
      'WATCH_TOWER_LF'
    );
    expect(feedbackDashboardWrapper).toMatchSnapshot();
  });

  it('should set status to all fellows  when a all-fellows card is clicked', () => {
    const { feedbackDashboardWrapper } = setup(
      { roles: 'WATCH_TOWER_LF' },
      'WATCH_TOWER_LF'
    );
    feedbackDashboardWrapper.setState({
      feedbackArray: feedbackData,
      allFeedback: feedbackData,
      isTicked: {
        level: 'All Levels',
        type: 'Pre-PIP & PIP',
        criteria: 'All Criteria',
        project: 'All Projects'
      }
    });
    feedbackDashboardWrapper
      .find(MapFeedbackFilterCard)
      .at(1)
      .dive()
      .find(FellowFilterCard)
      .first()
      .dive()
      .simulate('click', {
        currentTarget: {
          id: 'LMS',
          attributes: [{}, {}, { value: 'criteria' }]
        }
      });
    expect(feedbackDashboardWrapper.state('isTicked')).toEqual({
      level: 'All Levels',
      type: 'Pre-PIP & PIP',
      criteria: 'LMS',
      project: 'All Projects'
    });
    expect(feedbackDashboardWrapper.state('allFeedback').length).toEqual(2);
  });
});
