// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TLLDasboard  /> tests renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TTLDashboardMain
    getManagersFellows={[Function]}
    managerFellows={
        Object {
            "loading": true,
            "managerFellows": Object {},
          }
    }
    user={
        Object {
            "email": "test@mail.com",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="ttl_fellow_summary"
>
        <h2
                className="ttl_fellow_summary__title"
        >
                 FELLOWS SUMMARY 
        </h2>
        <div
                className="ttl_fellow_summary__cards"
        >
                <FilterCard
                        cardDetails={
                                Object {
                                        "subTitle": "Click for details",
                                        "title": "Total Fellows",
                                        "totalFellows": 0,
                                      }
                        }
                        className="card"
                        filterId="1"
                        onClick={undefined}
                />
        </div>
</div>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="ttl_fellow_summary__title"
>
             FELLOWS SUMMARY 
</h2>,
          <div
            className="ttl_fellow_summary__cards"
>
            <FilterCard
                        cardDetails={
                                    Object {
                                                "subTitle": "Click for details",
                                                "title": "Total Fellows",
                                                "totalFellows": 0,
                                              }
                        }
                        className="card"
                        filterId="1"
                        onClick={undefined}
            />
</div>,
        ],
        "className": "ttl_fellow_summary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " FELLOWS SUMMARY ",
            "className": "ttl_fellow_summary__title",
          },
          "ref": null,
          "rendered": " FELLOWS SUMMARY ",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FilterCard
              cardDetails={
                            Object {
                                          "subTitle": "Click for details",
                                          "title": "Total Fellows",
                                          "totalFellows": 0,
                                        }
              }
              className="card"
              filterId="1"
              onClick={undefined}
/>,
            "className": "ttl_fellow_summary__cards",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "cardDetails": Object {
                "subTitle": "Click for details",
                "title": "Total Fellows",
                "totalFellows": 0,
              },
              "className": "card",
              "filterId": "1",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="ttl_fellow_summary"
>
          <h2
                    className="ttl_fellow_summary__title"
          >
                     FELLOWS SUMMARY 
          </h2>
          <div
                    className="ttl_fellow_summary__cards"
          >
                    <FilterCard
                              cardDetails={
                                        Object {
                                                  "subTitle": "Click for details",
                                                  "title": "Total Fellows",
                                                  "totalFellows": 0,
                                                }
                              }
                              className="card"
                              filterId="1"
                              onClick={undefined}
                    />
          </div>
</div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="ttl_fellow_summary__title"
>
               FELLOWS SUMMARY 
</h2>,
            <div
              className="ttl_fellow_summary__cards"
>
              <FilterCard
                            cardDetails={
                                          Object {
                                                        "subTitle": "Click for details",
                                                        "title": "Total Fellows",
                                                        "totalFellows": 0,
                                                      }
                            }
                            className="card"
                            filterId="1"
                            onClick={undefined}
              />
</div>,
          ],
          "className": "ttl_fellow_summary",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " FELLOWS SUMMARY ",
              "className": "ttl_fellow_summary__title",
            },
            "ref": null,
            "rendered": " FELLOWS SUMMARY ",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FilterCard
                cardDetails={
                                Object {
                                                "subTitle": "Click for details",
                                                "title": "Total Fellows",
                                                "totalFellows": 0,
                                              }
                }
                className="card"
                filterId="1"
                onClick={undefined}
/>,
              "className": "ttl_fellow_summary__cards",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "cardDetails": Object {
                  "subTitle": "Click for details",
                  "title": "Total Fellows",
                  "totalFellows": 0,
                },
                "className": "card",
                "filterId": "1",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
