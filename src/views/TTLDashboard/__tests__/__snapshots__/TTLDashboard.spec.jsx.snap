// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TLLDasboard  /> tests renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    getTtlProjects={[Function]}
    ttlProjects={
        Object {
            "projects": Object {},
          }
    }
    user={
        Object {
            "email": "test@mail.com",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(ProjectsSummaryChart)
          user={
                    Object {
                              "email": "test@mail.com",
                            }
          }
/>,
        <Connect(TTLFellowsProgress) />,
      ],
      "className": "container-fluid",
      "style": Object {
        "paddingBottom": "49px",
        "paddingLeft": "0",
        "paddingRight": "0",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "user": Object {
            "email": "test@mail.com",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(ProjectsSummaryChart)
            user={
                        Object {
                                    "email": "test@mail.com",
                                  }
            }
/>,
          <Connect(TTLFellowsProgress) />,
        ],
        "className": "container-fluid",
        "style": Object {
          "paddingBottom": "49px",
          "paddingLeft": "0",
          "paddingRight": "0",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "user": Object {
              "email": "test@mail.com",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
