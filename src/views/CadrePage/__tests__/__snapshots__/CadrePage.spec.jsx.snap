// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cadre Page should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CadrePage
    user={
        Object {
            "firstName": "Test",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="cadre-welcome__name"
>
          Hey, 
          Test
          !
</p>,
        <p
          className="cadre-welcome__text"
>
          Welcome, to Cadre Program
           
          <span
                    aria-label="Celebration"
                    className="cadre-welcome__text"
                    role="img"
          >
                    ðŸŽ‰
          </span>
</p>,
        ",",
        <img
          alt="cadre-illustration"
          className="cadreIllustration"
          src="cadre-engineer-illustration.svg"
/>,
        <p
          className="cadre-welcome__message"
>
          We are glad you made it to the stage. Here, you'd be able to select your Engineering path.
</p>,
        <button
          className="cadrerectangle"
          type="submit"
>
          <Link
                    className="cader-link"
                    replace={false}
                    to="/dashboard"
          >
                    CONTINUE
          </Link>
</button>,
      ],
      "className": "cadre-engineer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Hey, ",
            "Test",
            "!",
          ],
          "className": "cadre-welcome__name",
        },
        "ref": null,
        "rendered": Array [
          "Hey, ",
          "Test",
          "!",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Welcome, to Cadre Program",
            " ",
            <span
              aria-label="Celebration"
              className="cadre-welcome__text"
              role="img"
>
              ðŸŽ‰
</span>,
          ],
          "className": "cadre-welcome__text",
        },
        "ref": null,
        "rendered": Array [
          "Welcome, to Cadre Program",
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "Celebration",
              "children": "ðŸŽ‰",
              "className": "cadre-welcome__text",
              "role": "img",
            },
            "ref": null,
            "rendered": "ðŸŽ‰",
            "type": "span",
          },
        ],
        "type": "p",
      },
      ",",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "cadre-illustration",
          "className": "cadreIllustration",
          "src": "cadre-engineer-illustration.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "We are glad you made it to the stage. Here, you'd be able to select your Engineering path.",
          "className": "cadre-welcome__message",
        },
        "ref": null,
        "rendered": "We are glad you made it to the stage. Here, you'd be able to select your Engineering path.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            className="cader-link"
            replace={false}
            to="/dashboard"
>
            CONTINUE
</Link>,
          "className": "cadrerectangle",
          "type": "submit",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "CONTINUE",
            "className": "cader-link",
            "replace": false,
            "to": "/dashboard",
          },
          "ref": null,
          "rendered": "CONTINUE",
          "type": [Function],
        },
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="cadre-welcome__name"
>
            Hey, 
            Test
            !
</p>,
          <p
            className="cadre-welcome__text"
>
            Welcome, to Cadre Program
             
            <span
                        aria-label="Celebration"
                        className="cadre-welcome__text"
                        role="img"
            >
                        ðŸŽ‰
            </span>
</p>,
          ",",
          <img
            alt="cadre-illustration"
            className="cadreIllustration"
            src="cadre-engineer-illustration.svg"
/>,
          <p
            className="cadre-welcome__message"
>
            We are glad you made it to the stage. Here, you'd be able to select your Engineering path.
</p>,
          <button
            className="cadrerectangle"
            type="submit"
>
            <Link
                        className="cader-link"
                        replace={false}
                        to="/dashboard"
            >
                        CONTINUE
            </Link>
</button>,
        ],
        "className": "cadre-engineer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Hey, ",
              "Test",
              "!",
            ],
            "className": "cadre-welcome__name",
          },
          "ref": null,
          "rendered": Array [
            "Hey, ",
            "Test",
            "!",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Welcome, to Cadre Program",
              " ",
              <span
                aria-label="Celebration"
                className="cadre-welcome__text"
                role="img"
>
                ðŸŽ‰
</span>,
            ],
            "className": "cadre-welcome__text",
          },
          "ref": null,
          "rendered": Array [
            "Welcome, to Cadre Program",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Celebration",
                "children": "ðŸŽ‰",
                "className": "cadre-welcome__text",
                "role": "img",
              },
              "ref": null,
              "rendered": "ðŸŽ‰",
              "type": "span",
            },
          ],
          "type": "p",
        },
        ",",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "cadre-illustration",
            "className": "cadreIllustration",
            "src": "cadre-engineer-illustration.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "We are glad you made it to the stage. Here, you'd be able to select your Engineering path.",
            "className": "cadre-welcome__message",
          },
          "ref": null,
          "rendered": "We are glad you made it to the stage. Here, you'd be able to select your Engineering path.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="cader-link"
              replace={false}
              to="/dashboard"
>
              CONTINUE
</Link>,
            "className": "cadrerectangle",
            "type": "submit",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "CONTINUE",
              "className": "cader-link",
              "replace": false,
              "to": "/dashboard",
            },
            "ref": null,
            "rendered": "CONTINUE",
            "type": [Function],
          },
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
