// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Vacancy Dashboard render paginated view correctly 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <PaginatedVacanciesDashboard
    component={
      <ViewRoleVacancies
        location={Object {}}
        paginationWrapper={
          Object {
            "handlePaginationPageChange": [Function],
            "paginateData": [Function],
            "processData": [Function],
            "renderPagination": [Function],
            "state": Object {
              "filteredData": Array [],
              "paginatedData": Array [],
              "paginationFilter": Object {
                "page": 1,
                "perPage": 25,
                "totalPages": 0,
              },
            },
            "updateData": [Function],
          }
        }
        vacancies={
          Object {
            "certificationVacancies": Array [
              Object {
                "available_slots": 2,
                "certification": Object {
                  "description": "Ut aut et incidunt officiis repudiandae temporibus.",
                  "duration": 20,
                  "exclusive": true,
                  "id": 1,
                  "name": "Lyric Strosin",
                },
                "vacancy_details": Object {
                  "certification": Object {
                    "description": "Ut aut et incidunt temporibus.",
                    "duration": 20,
                    "exclusive": true,
                    "id": 1,
                    "name": "Lyric Strosin",
                  },
                  "certification_id": 1,
                  "created_at": "2019-07-11 06:54:50",
                  "fellow_id": null,
                  "id": 2,
                  "is_active": false,
                  "updated_at": "2019-07-11 06:54:50",
                },
              },
            ],
            "projectVacancies": Array [
              Object {
                "available_slots": 1,
                "project": Object {
                  "id": 1,
                  "name": "A et.",
                },
                "role": Object {
                  "active_engineers": Array [],
                  "description": "Neque aut modi minima dolorem quia itaque.",
                  "id": 6,
                  "name": "FPC",
                },
                "vacancy": Object {
                  "cycle_id": 1,
                  "fellow_id": null,
                  "id": 1,
                  "is_active": false,
                  "project_id": 1,
                  "project_role_id": 6,
                },
              },
            ],
          }
        }
        vacanciesWithNoCycleId={
          Object {
            "available_slots": 1,
            "project": Object {
              "id": 1,
              "name": "A et.",
            },
            "role": Object {
              "active_engineers": Array [],
              "description": "Neque aut modi minima dolorem quia itaque.",
              "id": 6,
              "name": "FPC",
            },
            "vacancy": Object {
              "cycle_id": 1,
              "fellow_id": null,
              "id": 1,
              "is_active": false,
              "project_id": 1,
              "project_role_id": 6,
            },
          }
        }
      />
    }
  />
</Router>
`;

exports[`Vacancy Dashboard renders correctly 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <ViewRoleVacancies
    location={Object {}}
    paginationWrapper={
      Object {
        "handlePaginationPageChange": [Function],
        "paginateData": [Function],
        "processData": [Function],
        "renderPagination": [Function],
        "state": Object {
          "filteredData": Array [],
          "paginatedData": Array [],
          "paginationFilter": Object {
            "page": 1,
            "perPage": 25,
            "totalPages": 0,
          },
        },
        "updateData": [Function],
      }
    }
    vacancies={
      Object {
        "certificationVacancies": Array [
          Object {
            "available_slots": 2,
            "certification": Object {
              "description": "Ut aut et incidunt officiis repudiandae temporibus.",
              "duration": 20,
              "exclusive": true,
              "id": 1,
              "name": "Lyric Strosin",
            },
            "vacancy_details": Object {
              "certification": Object {
                "description": "Ut aut et incidunt temporibus.",
                "duration": 20,
                "exclusive": true,
                "id": 1,
                "name": "Lyric Strosin",
              },
              "certification_id": 1,
              "created_at": "2019-07-11 06:54:50",
              "fellow_id": null,
              "id": 2,
              "is_active": false,
              "updated_at": "2019-07-11 06:54:50",
            },
          },
        ],
        "projectVacancies": Array [
          Object {
            "available_slots": 1,
            "project": Object {
              "id": 1,
              "name": "A et.",
            },
            "role": Object {
              "active_engineers": Array [],
              "description": "Neque aut modi minima dolorem quia itaque.",
              "id": 6,
              "name": "FPC",
            },
            "vacancy": Object {
              "cycle_id": 1,
              "fellow_id": null,
              "id": 1,
              "is_active": false,
              "project_id": 1,
              "project_role_id": 6,
            },
          },
        ],
      }
    }
    vacanciesWithNoCycleId={
      Object {
        "available_slots": 1,
        "project": Object {
          "id": 1,
          "name": "A et.",
        },
        "role": Object {
          "active_engineers": Array [],
          "description": "Neque aut modi minima dolorem quia itaque.",
          "id": 6,
          "name": "FPC",
        },
        "vacancy": Object {
          "cycle_id": 1,
          "fellow_id": null,
          "id": 1,
          "is_active": false,
          "project_id": 1,
          "project_role_id": 6,
        },
      }
    }
  />
</Router>
`;

exports[`Vacancy Dashboard renders no vacancies when array is empty 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <ViewRoleVacancies
    location={Object {}}
    paginationWrapper={
      Object {
        "handlePaginationPageChange": [Function],
        "paginateData": [Function],
        "processData": [Function],
        "renderPagination": [Function],
        "state": Object {
          "filteredData": Array [],
          "paginatedData": Array [],
          "paginationFilter": Object {
            "page": 1,
            "perPage": 25,
            "totalPages": 0,
          },
        },
        "updateData": [Function],
      }
    }
    vacancies={Array []}
  />
</Router>
`;
