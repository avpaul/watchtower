// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add Vacancy Modal renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddVacanciesModal
    allProjectRoles={
        Object {
            "data": Array [
              Object {
                "id": 1,
                "name": "Scrum Master",
              },
            ],
          }
    }
    allProjects={
        Object {
            "data": Array [
              Object {
                "id": 1,
                "name": "WatchTower",
              },
            ],
            "error": null,
            "loading": false,
          }
    }
    createNewProjectVacancies={[Function]}
    createProjectVacancies={
        Object {
            "data": Array [],
            "error": null,
            "loading": false,
          }
    }
    fetchAllProjects={[Function]}
    fetchAllRoles={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Unknown>
        <DropdownInput
                className="wt-dropdown"
                comment=""
                componentStateKey="inputs"
                defaultStatus={0}
                enableSearch={true}
                extras={null}
                inputValue=""
                label="Select Project"
                loading={false}
                multipleSelection={false}
                name="project"
                options={
                        Array [
                                Object {
                                  "id": 1,
                                  "label": "WatchTower",
                                  "name": "WatchTower",
                                },
                              ]
                }
                parent={
                        AddVacanciesModal {
                                "context": Object {},
                                "handleClick": [Function],
                                "handleClose": [Function],
                                "props": Object {
                                  "allProjectRoles": Object {
                                    "data": Array [
                                      Object {
                                        "id": 1,
                                        "name": "Scrum Master",
                                      },
                                    ],
                                  },
                                  "allProjects": Object {
                                    "data": Array [
                                      Object {
                                        "id": 1,
                                        "name": "WatchTower",
                                      },
                                    ],
                                    "error": null,
                                    "loading": false,
                                  },
                                  "createNewProjectVacancies": [Function],
                                  "createProjectVacancies": Object {
                                    "data": Array [],
                                    "error": null,
                                    "loading": false,
                                  },
                                  "fetchAllProjects": [Function],
                                  "fetchAllRoles": [Function],
                                },
                                "refs": Object {},
                                "renderButton": [Function],
                                "renderDropdown": [Function],
                                "renderFooter": [Function],
                                "renderModalBody": [Function],
                                "setState": [Function],
                                "state": Object {
                                  "inputs": Object {},
                                  "success": false,
                                },
                                "updateSubmitState": [Function],
                                "updater": Updater {
                                  "_callbacks": Array [],
                                  "_renderer": ReactShallowRenderer {
                                    "_context": Object {},
                                    "_didScheduleRenderPhaseUpdate": false,
                                    "_dispatcher": Object {
                                      "readContext": [Function],
                                      "useCallback": [Function],
                                      "useContext": [Function],
                                      "useDebugValue": [Function],
                                      "useEffect": [Function],
                                      "useImperativeHandle": [Function],
                                      "useLayoutEffect": [Function],
                                      "useMemo": [Function],
                                      "useReducer": [Function],
                                      "useRef": [Function],
                                      "useState": [Function],
                                    },
                                    "_element": <AddVacanciesModal
                                      allProjectRoles={
                                                    Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "Scrum Master",
                                                                    },
                                                                  ],
                                                                }
                                      }
                                      allProjects={
                                                    Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "WatchTower",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                                      }
                                      createNewProjectVacancies={[Function]}
                                      createProjectVacancies={
                                                    Object {
                                                                  "data": Array [],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                                      }
                                      fetchAllProjects={[Function]}
                                      fetchAllRoles={[Function]}
                        />,
                                    "_firstWorkInProgressHook": null,
                                    "_forcedUpdate": false,
                                    "_instance": [Circular],
                                    "_isReRender": false,
                                    "_newState": null,
                                    "_numberOfReRenders": 0,
                                    "_renderPhaseUpdates": null,
                                    "_rendered": <GenericModal
                                      footer={
                                                    <div
                                                                  className="modal-footer"
                                                    >
                                                                  <CadreMainButton
                                                                                buttonProps={
                                                                                              Object {
                                                                                                            "onClick": [Function],
                                                                                                          }
                                                                                }
                                                                                label="CREATE"
                                                                  />
                                                    </div>
                                      }
                                      handleClose={[Function]}
                                      handleSubmit={[Function]}
                                      id="addProjectVacanciesModal"
                                      submitLoading={false}
                                      success={false}
                                      successMessage="New project vacancies have been created!"
                                      title="Create Vacancies"
                        >
                                      <Unknown>
                                                    <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={true}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Project"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="project"
                                                                  options={
                                                                                Array [
                                                                                              Object {
                                                                                                "id": 1,
                                                                                                "label": "WatchTower",
                                                                                                "name": "WatchTower",
                                                                                              },
                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Project"
                                                    />
                                                    <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={false}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Role"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="role"
                                                                  options={
                                                                                Array [
                                                                                              Object {
                                                                                                "id": 1,
                                                                                                "label": "Scrum Master",
                                                                                                "name": "Scrum Master",
                                                                                              },
                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Role"
                                                    />
                                                    <TextInput
                                                                  alertText="Please input a valid number of slots!"
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Vacancy Slots"
                                                                  length={999}
                                                                  name="slots"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                                    />
                                      </Unknown>
                        </GenericModal>,
                                    "_rendering": false,
                                    "_updater": [Circular],
                                    "_workInProgressHook": null,
                                  },
                                },
                                Symbol(enzyme.__setState__): [Function],
                              }
                }
                placeholder="Select Project"
        />
        <DropdownInput
                className="wt-dropdown"
                comment=""
                componentStateKey="inputs"
                defaultStatus={0}
                enableSearch={false}
                extras={null}
                inputValue=""
                label="Select Role"
                loading={false}
                multipleSelection={false}
                name="role"
                options={
                        Array [
                                Object {
                                  "id": 1,
                                  "label": "Scrum Master",
                                  "name": "Scrum Master",
                                },
                              ]
                }
                parent={
                        AddVacanciesModal {
                                "context": Object {},
                                "handleClick": [Function],
                                "handleClose": [Function],
                                "props": Object {
                                  "allProjectRoles": Object {
                                    "data": Array [
                                      Object {
                                        "id": 1,
                                        "name": "Scrum Master",
                                      },
                                    ],
                                  },
                                  "allProjects": Object {
                                    "data": Array [
                                      Object {
                                        "id": 1,
                                        "name": "WatchTower",
                                      },
                                    ],
                                    "error": null,
                                    "loading": false,
                                  },
                                  "createNewProjectVacancies": [Function],
                                  "createProjectVacancies": Object {
                                    "data": Array [],
                                    "error": null,
                                    "loading": false,
                                  },
                                  "fetchAllProjects": [Function],
                                  "fetchAllRoles": [Function],
                                },
                                "refs": Object {},
                                "renderButton": [Function],
                                "renderDropdown": [Function],
                                "renderFooter": [Function],
                                "renderModalBody": [Function],
                                "setState": [Function],
                                "state": Object {
                                  "inputs": Object {},
                                  "success": false,
                                },
                                "updateSubmitState": [Function],
                                "updater": Updater {
                                  "_callbacks": Array [],
                                  "_renderer": ReactShallowRenderer {
                                    "_context": Object {},
                                    "_didScheduleRenderPhaseUpdate": false,
                                    "_dispatcher": Object {
                                      "readContext": [Function],
                                      "useCallback": [Function],
                                      "useContext": [Function],
                                      "useDebugValue": [Function],
                                      "useEffect": [Function],
                                      "useImperativeHandle": [Function],
                                      "useLayoutEffect": [Function],
                                      "useMemo": [Function],
                                      "useReducer": [Function],
                                      "useRef": [Function],
                                      "useState": [Function],
                                    },
                                    "_element": <AddVacanciesModal
                                      allProjectRoles={
                                                    Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "Scrum Master",
                                                                    },
                                                                  ],
                                                                }
                                      }
                                      allProjects={
                                                    Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "WatchTower",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                                      }
                                      createNewProjectVacancies={[Function]}
                                      createProjectVacancies={
                                                    Object {
                                                                  "data": Array [],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                                      }
                                      fetchAllProjects={[Function]}
                                      fetchAllRoles={[Function]}
                        />,
                                    "_firstWorkInProgressHook": null,
                                    "_forcedUpdate": false,
                                    "_instance": [Circular],
                                    "_isReRender": false,
                                    "_newState": null,
                                    "_numberOfReRenders": 0,
                                    "_renderPhaseUpdates": null,
                                    "_rendered": <GenericModal
                                      footer={
                                                    <div
                                                                  className="modal-footer"
                                                    >
                                                                  <CadreMainButton
                                                                                buttonProps={
                                                                                              Object {
                                                                                                            "onClick": [Function],
                                                                                                          }
                                                                                }
                                                                                label="CREATE"
                                                                  />
                                                    </div>
                                      }
                                      handleClose={[Function]}
                                      handleSubmit={[Function]}
                                      id="addProjectVacanciesModal"
                                      submitLoading={false}
                                      success={false}
                                      successMessage="New project vacancies have been created!"
                                      title="Create Vacancies"
                        >
                                      <Unknown>
                                                    <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={true}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Project"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="project"
                                                                  options={
                                                                                Array [
                                                                                              Object {
                                                                                                "id": 1,
                                                                                                "label": "WatchTower",
                                                                                                "name": "WatchTower",
                                                                                              },
                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Project"
                                                    />
                                                    <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={false}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Role"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="role"
                                                                  options={
                                                                                Array [
                                                                                              Object {
                                                                                                "id": 1,
                                                                                                "label": "Scrum Master",
                                                                                                "name": "Scrum Master",
                                                                                              },
                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Role"
                                                    />
                                                    <TextInput
                                                                  alertText="Please input a valid number of slots!"
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Vacancy Slots"
                                                                  length={999}
                                                                  name="slots"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                                    />
                                      </Unknown>
                        </GenericModal>,
                                    "_rendering": false,
                                    "_updater": [Circular],
                                    "_workInProgressHook": null,
                                  },
                                },
                                Symbol(enzyme.__setState__): [Function],
                              }
                }
                placeholder="Select Role"
        />
        <TextInput
                alertText="Please input a valid number of slots!"
                className="wt-text-input"
                comment=""
                componentStateKey="inputs"
                defaultStatus={0}
                inputValue=""
                label="Vacancy Slots"
                length={999}
                name="slots"
                parent={
                        AddVacanciesModal {
                                "context": Object {},
                                "handleClick": [Function],
                                "handleClose": [Function],
                                "props": Object {
                                  "allProjectRoles": Object {
                                    "data": Array [
                                      Object {
                                        "id": 1,
                                        "name": "Scrum Master",
                                      },
                                    ],
                                  },
                                  "allProjects": Object {
                                    "data": Array [
                                      Object {
                                        "id": 1,
                                        "name": "WatchTower",
                                      },
                                    ],
                                    "error": null,
                                    "loading": false,
                                  },
                                  "createNewProjectVacancies": [Function],
                                  "createProjectVacancies": Object {
                                    "data": Array [],
                                    "error": null,
                                    "loading": false,
                                  },
                                  "fetchAllProjects": [Function],
                                  "fetchAllRoles": [Function],
                                },
                                "refs": Object {},
                                "renderButton": [Function],
                                "renderDropdown": [Function],
                                "renderFooter": [Function],
                                "renderModalBody": [Function],
                                "setState": [Function],
                                "state": Object {
                                  "inputs": Object {},
                                  "success": false,
                                },
                                "updateSubmitState": [Function],
                                "updater": Updater {
                                  "_callbacks": Array [],
                                  "_renderer": ReactShallowRenderer {
                                    "_context": Object {},
                                    "_didScheduleRenderPhaseUpdate": false,
                                    "_dispatcher": Object {
                                      "readContext": [Function],
                                      "useCallback": [Function],
                                      "useContext": [Function],
                                      "useDebugValue": [Function],
                                      "useEffect": [Function],
                                      "useImperativeHandle": [Function],
                                      "useLayoutEffect": [Function],
                                      "useMemo": [Function],
                                      "useReducer": [Function],
                                      "useRef": [Function],
                                      "useState": [Function],
                                    },
                                    "_element": <AddVacanciesModal
                                      allProjectRoles={
                                                    Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "Scrum Master",
                                                                    },
                                                                  ],
                                                                }
                                      }
                                      allProjects={
                                                    Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "WatchTower",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                                      }
                                      createNewProjectVacancies={[Function]}
                                      createProjectVacancies={
                                                    Object {
                                                                  "data": Array [],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                                      }
                                      fetchAllProjects={[Function]}
                                      fetchAllRoles={[Function]}
                        />,
                                    "_firstWorkInProgressHook": null,
                                    "_forcedUpdate": false,
                                    "_instance": [Circular],
                                    "_isReRender": false,
                                    "_newState": null,
                                    "_numberOfReRenders": 0,
                                    "_renderPhaseUpdates": null,
                                    "_rendered": <GenericModal
                                      footer={
                                                    <div
                                                                  className="modal-footer"
                                                    >
                                                                  <CadreMainButton
                                                                                buttonProps={
                                                                                              Object {
                                                                                                            "onClick": [Function],
                                                                                                          }
                                                                                }
                                                                                label="CREATE"
                                                                  />
                                                    </div>
                                      }
                                      handleClose={[Function]}
                                      handleSubmit={[Function]}
                                      id="addProjectVacanciesModal"
                                      submitLoading={false}
                                      success={false}
                                      successMessage="New project vacancies have been created!"
                                      title="Create Vacancies"
                        >
                                      <Unknown>
                                                    <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={true}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Project"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="project"
                                                                  options={
                                                                                Array [
                                                                                              Object {
                                                                                                "id": 1,
                                                                                                "label": "WatchTower",
                                                                                                "name": "WatchTower",
                                                                                              },
                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Project"
                                                    />
                                                    <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={false}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Role"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="role"
                                                                  options={
                                                                                Array [
                                                                                              Object {
                                                                                                "id": 1,
                                                                                                "label": "Scrum Master",
                                                                                                "name": "Scrum Master",
                                                                                              },
                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Role"
                                                    />
                                                    <TextInput
                                                                  alertText="Please input a valid number of slots!"
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Vacancy Slots"
                                                                  length={999}
                                                                  name="slots"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                                    />
                                      </Unknown>
                        </GenericModal>,
                                    "_rendering": false,
                                    "_updater": [Circular],
                                    "_workInProgressHook": null,
                                  },
                                },
                                Symbol(enzyme.__setState__): [Function],
                              }
                }
                placeholder=""
                testInput={[Function]}
                type="text"
        />
</Unknown>,
      "footer": <div
        className="modal-footer"
>
        <CadreMainButton
                buttonProps={
                        Object {
                                "onClick": [Function],
                              }
                }
                label="CREATE"
        />
</div>,
      "handleClose": [Function],
      "handleSubmit": [Function],
      "id": "addProjectVacanciesModal",
      "submitLoading": false,
      "success": false,
      "successMessage": "New project vacancies have been created!",
      "title": "Create Vacancies",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <DropdownInput
            className="wt-dropdown"
            comment=""
            componentStateKey="inputs"
            defaultStatus={0}
            enableSearch={true}
            extras={null}
            inputValue=""
            label="Select Project"
            loading={false}
            multipleSelection={false}
            name="project"
            options={
                        Array [
                                    Object {
                                      "id": 1,
                                      "label": "WatchTower",
                                      "name": "WatchTower",
                                    },
                                  ]
            }
            parent={
                        AddVacanciesModal {
                                    "context": Object {},
                                    "handleClick": [Function],
                                    "handleClose": [Function],
                                    "props": Object {
                                      "allProjectRoles": Object {
                                        "data": Array [
                                          Object {
                                            "id": 1,
                                            "name": "Scrum Master",
                                          },
                                        ],
                                      },
                                      "allProjects": Object {
                                        "data": Array [
                                          Object {
                                            "id": 1,
                                            "name": "WatchTower",
                                          },
                                        ],
                                        "error": null,
                                        "loading": false,
                                      },
                                      "createNewProjectVacancies": [Function],
                                      "createProjectVacancies": Object {
                                        "data": Array [],
                                        "error": null,
                                        "loading": false,
                                      },
                                      "fetchAllProjects": [Function],
                                      "fetchAllRoles": [Function],
                                    },
                                    "refs": Object {},
                                    "renderButton": [Function],
                                    "renderDropdown": [Function],
                                    "renderFooter": [Function],
                                    "renderModalBody": [Function],
                                    "setState": [Function],
                                    "state": Object {
                                      "inputs": Object {},
                                      "success": false,
                                    },
                                    "updateSubmitState": [Function],
                                    "updater": Updater {
                                      "_callbacks": Array [],
                                      "_renderer": ReactShallowRenderer {
                                        "_context": Object {},
                                        "_didScheduleRenderPhaseUpdate": false,
                                        "_dispatcher": Object {
                                          "readContext": [Function],
                                          "useCallback": [Function],
                                          "useContext": [Function],
                                          "useDebugValue": [Function],
                                          "useEffect": [Function],
                                          "useImperativeHandle": [Function],
                                          "useLayoutEffect": [Function],
                                          "useMemo": [Function],
                                          "useReducer": [Function],
                                          "useRef": [Function],
                                          "useState": [Function],
                                        },
                                        "_element": <AddVacanciesModal
                                          allProjectRoles={
                                                            Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "Scrum Master",
                                                                                },
                                                                              ],
                                                                            }
                                          }
                                          allProjects={
                                                            Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "WatchTower",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                          }
                                          createNewProjectVacancies={[Function]}
                                          createProjectVacancies={
                                                            Object {
                                                                              "data": Array [],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                          }
                                          fetchAllProjects={[Function]}
                                          fetchAllRoles={[Function]}
                        />,
                                        "_firstWorkInProgressHook": null,
                                        "_forcedUpdate": false,
                                        "_instance": [Circular],
                                        "_isReRender": false,
                                        "_newState": null,
                                        "_numberOfReRenders": 0,
                                        "_renderPhaseUpdates": null,
                                        "_rendered": <GenericModal
                                          footer={
                                                            <div
                                                                              className="modal-footer"
                                                            >
                                                                              <CadreMainButton
                                                                                                buttonProps={
                                                                                                                  Object {
                                                                                                                                    "onClick": [Function],
                                                                                                                                  }
                                                                                                }
                                                                                                label="CREATE"
                                                                              />
                                                            </div>
                                          }
                                          handleClose={[Function]}
                                          handleSubmit={[Function]}
                                          id="addProjectVacanciesModal"
                                          submitLoading={false}
                                          success={false}
                                          successMessage="New project vacancies have been created!"
                                          title="Create Vacancies"
                        >
                                          <Unknown>
                                                            <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={true}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Project"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="project"
                                                                              options={
                                                                                                Array [
                                                                                                                  Object {
                                                                                                                    "id": 1,
                                                                                                                    "label": "WatchTower",
                                                                                                                    "name": "WatchTower",
                                                                                                                  },
                                                                                                                ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Project"
                                                            />
                                                            <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={false}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Role"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="role"
                                                                              options={
                                                                                                Array [
                                                                                                                  Object {
                                                                                                                    "id": 1,
                                                                                                                    "label": "Scrum Master",
                                                                                                                    "name": "Scrum Master",
                                                                                                                  },
                                                                                                                ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Role"
                                                            />
                                                            <TextInput
                                                                              alertText="Please input a valid number of slots!"
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Vacancy Slots"
                                                                              length={999}
                                                                              name="slots"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                            />
                                          </Unknown>
                        </GenericModal>,
                                        "_rendering": false,
                                        "_updater": [Circular],
                                        "_workInProgressHook": null,
                                      },
                                    },
                                    Symbol(enzyme.__setState__): [Function],
                                  }
            }
            placeholder="Select Project"
/>,
          <DropdownInput
            className="wt-dropdown"
            comment=""
            componentStateKey="inputs"
            defaultStatus={0}
            enableSearch={false}
            extras={null}
            inputValue=""
            label="Select Role"
            loading={false}
            multipleSelection={false}
            name="role"
            options={
                        Array [
                                    Object {
                                      "id": 1,
                                      "label": "Scrum Master",
                                      "name": "Scrum Master",
                                    },
                                  ]
            }
            parent={
                        AddVacanciesModal {
                                    "context": Object {},
                                    "handleClick": [Function],
                                    "handleClose": [Function],
                                    "props": Object {
                                      "allProjectRoles": Object {
                                        "data": Array [
                                          Object {
                                            "id": 1,
                                            "name": "Scrum Master",
                                          },
                                        ],
                                      },
                                      "allProjects": Object {
                                        "data": Array [
                                          Object {
                                            "id": 1,
                                            "name": "WatchTower",
                                          },
                                        ],
                                        "error": null,
                                        "loading": false,
                                      },
                                      "createNewProjectVacancies": [Function],
                                      "createProjectVacancies": Object {
                                        "data": Array [],
                                        "error": null,
                                        "loading": false,
                                      },
                                      "fetchAllProjects": [Function],
                                      "fetchAllRoles": [Function],
                                    },
                                    "refs": Object {},
                                    "renderButton": [Function],
                                    "renderDropdown": [Function],
                                    "renderFooter": [Function],
                                    "renderModalBody": [Function],
                                    "setState": [Function],
                                    "state": Object {
                                      "inputs": Object {},
                                      "success": false,
                                    },
                                    "updateSubmitState": [Function],
                                    "updater": Updater {
                                      "_callbacks": Array [],
                                      "_renderer": ReactShallowRenderer {
                                        "_context": Object {},
                                        "_didScheduleRenderPhaseUpdate": false,
                                        "_dispatcher": Object {
                                          "readContext": [Function],
                                          "useCallback": [Function],
                                          "useContext": [Function],
                                          "useDebugValue": [Function],
                                          "useEffect": [Function],
                                          "useImperativeHandle": [Function],
                                          "useLayoutEffect": [Function],
                                          "useMemo": [Function],
                                          "useReducer": [Function],
                                          "useRef": [Function],
                                          "useState": [Function],
                                        },
                                        "_element": <AddVacanciesModal
                                          allProjectRoles={
                                                            Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "Scrum Master",
                                                                                },
                                                                              ],
                                                                            }
                                          }
                                          allProjects={
                                                            Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "WatchTower",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                          }
                                          createNewProjectVacancies={[Function]}
                                          createProjectVacancies={
                                                            Object {
                                                                              "data": Array [],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                          }
                                          fetchAllProjects={[Function]}
                                          fetchAllRoles={[Function]}
                        />,
                                        "_firstWorkInProgressHook": null,
                                        "_forcedUpdate": false,
                                        "_instance": [Circular],
                                        "_isReRender": false,
                                        "_newState": null,
                                        "_numberOfReRenders": 0,
                                        "_renderPhaseUpdates": null,
                                        "_rendered": <GenericModal
                                          footer={
                                                            <div
                                                                              className="modal-footer"
                                                            >
                                                                              <CadreMainButton
                                                                                                buttonProps={
                                                                                                                  Object {
                                                                                                                                    "onClick": [Function],
                                                                                                                                  }
                                                                                                }
                                                                                                label="CREATE"
                                                                              />
                                                            </div>
                                          }
                                          handleClose={[Function]}
                                          handleSubmit={[Function]}
                                          id="addProjectVacanciesModal"
                                          submitLoading={false}
                                          success={false}
                                          successMessage="New project vacancies have been created!"
                                          title="Create Vacancies"
                        >
                                          <Unknown>
                                                            <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={true}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Project"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="project"
                                                                              options={
                                                                                                Array [
                                                                                                                  Object {
                                                                                                                    "id": 1,
                                                                                                                    "label": "WatchTower",
                                                                                                                    "name": "WatchTower",
                                                                                                                  },
                                                                                                                ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Project"
                                                            />
                                                            <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={false}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Role"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="role"
                                                                              options={
                                                                                                Array [
                                                                                                                  Object {
                                                                                                                    "id": 1,
                                                                                                                    "label": "Scrum Master",
                                                                                                                    "name": "Scrum Master",
                                                                                                                  },
                                                                                                                ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Role"
                                                            />
                                                            <TextInput
                                                                              alertText="Please input a valid number of slots!"
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Vacancy Slots"
                                                                              length={999}
                                                                              name="slots"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                            />
                                          </Unknown>
                        </GenericModal>,
                                        "_rendering": false,
                                        "_updater": [Circular],
                                        "_workInProgressHook": null,
                                      },
                                    },
                                    Symbol(enzyme.__setState__): [Function],
                                  }
            }
            placeholder="Select Role"
/>,
          <TextInput
            alertText="Please input a valid number of slots!"
            className="wt-text-input"
            comment=""
            componentStateKey="inputs"
            defaultStatus={0}
            inputValue=""
            label="Vacancy Slots"
            length={999}
            name="slots"
            parent={
                        AddVacanciesModal {
                                    "context": Object {},
                                    "handleClick": [Function],
                                    "handleClose": [Function],
                                    "props": Object {
                                      "allProjectRoles": Object {
                                        "data": Array [
                                          Object {
                                            "id": 1,
                                            "name": "Scrum Master",
                                          },
                                        ],
                                      },
                                      "allProjects": Object {
                                        "data": Array [
                                          Object {
                                            "id": 1,
                                            "name": "WatchTower",
                                          },
                                        ],
                                        "error": null,
                                        "loading": false,
                                      },
                                      "createNewProjectVacancies": [Function],
                                      "createProjectVacancies": Object {
                                        "data": Array [],
                                        "error": null,
                                        "loading": false,
                                      },
                                      "fetchAllProjects": [Function],
                                      "fetchAllRoles": [Function],
                                    },
                                    "refs": Object {},
                                    "renderButton": [Function],
                                    "renderDropdown": [Function],
                                    "renderFooter": [Function],
                                    "renderModalBody": [Function],
                                    "setState": [Function],
                                    "state": Object {
                                      "inputs": Object {},
                                      "success": false,
                                    },
                                    "updateSubmitState": [Function],
                                    "updater": Updater {
                                      "_callbacks": Array [],
                                      "_renderer": ReactShallowRenderer {
                                        "_context": Object {},
                                        "_didScheduleRenderPhaseUpdate": false,
                                        "_dispatcher": Object {
                                          "readContext": [Function],
                                          "useCallback": [Function],
                                          "useContext": [Function],
                                          "useDebugValue": [Function],
                                          "useEffect": [Function],
                                          "useImperativeHandle": [Function],
                                          "useLayoutEffect": [Function],
                                          "useMemo": [Function],
                                          "useReducer": [Function],
                                          "useRef": [Function],
                                          "useState": [Function],
                                        },
                                        "_element": <AddVacanciesModal
                                          allProjectRoles={
                                                            Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "Scrum Master",
                                                                                },
                                                                              ],
                                                                            }
                                          }
                                          allProjects={
                                                            Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "WatchTower",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                          }
                                          createNewProjectVacancies={[Function]}
                                          createProjectVacancies={
                                                            Object {
                                                                              "data": Array [],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                          }
                                          fetchAllProjects={[Function]}
                                          fetchAllRoles={[Function]}
                        />,
                                        "_firstWorkInProgressHook": null,
                                        "_forcedUpdate": false,
                                        "_instance": [Circular],
                                        "_isReRender": false,
                                        "_newState": null,
                                        "_numberOfReRenders": 0,
                                        "_renderPhaseUpdates": null,
                                        "_rendered": <GenericModal
                                          footer={
                                                            <div
                                                                              className="modal-footer"
                                                            >
                                                                              <CadreMainButton
                                                                                                buttonProps={
                                                                                                                  Object {
                                                                                                                                    "onClick": [Function],
                                                                                                                                  }
                                                                                                }
                                                                                                label="CREATE"
                                                                              />
                                                            </div>
                                          }
                                          handleClose={[Function]}
                                          handleSubmit={[Function]}
                                          id="addProjectVacanciesModal"
                                          submitLoading={false}
                                          success={false}
                                          successMessage="New project vacancies have been created!"
                                          title="Create Vacancies"
                        >
                                          <Unknown>
                                                            <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={true}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Project"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="project"
                                                                              options={
                                                                                                Array [
                                                                                                                  Object {
                                                                                                                    "id": 1,
                                                                                                                    "label": "WatchTower",
                                                                                                                    "name": "WatchTower",
                                                                                                                  },
                                                                                                                ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Project"
                                                            />
                                                            <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={false}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Role"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="role"
                                                                              options={
                                                                                                Array [
                                                                                                                  Object {
                                                                                                                    "id": 1,
                                                                                                                    "label": "Scrum Master",
                                                                                                                    "name": "Scrum Master",
                                                                                                                  },
                                                                                                                ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Role"
                                                            />
                                                            <TextInput
                                                                              alertText="Please input a valid number of slots!"
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Vacancy Slots"
                                                                              length={999}
                                                                              name="slots"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                            />
                                          </Unknown>
                        </GenericModal>,
                                        "_rendering": false,
                                        "_updater": [Circular],
                                        "_workInProgressHook": null,
                                      },
                                    },
                                    Symbol(enzyme.__setState__): [Function],
                                  }
            }
            placeholder=""
            testInput={[Function]}
            type="text"
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "wt-dropdown",
            "comment": "",
            "componentStateKey": "inputs",
            "defaultStatus": 0,
            "enableSearch": true,
            "extras": null,
            "inputValue": "",
            "label": "Select Project",
            "loading": false,
            "multipleSelection": false,
            "name": "project",
            "options": Array [
              Object {
                "id": 1,
                "label": "WatchTower",
                "name": "WatchTower",
              },
            ],
            "parent": AddVacanciesModal {
              "context": Object {},
              "handleClick": [Function],
              "handleClose": [Function],
              "props": Object {
                "allProjectRoles": Object {
                  "data": Array [
                    Object {
                      "id": 1,
                      "name": "Scrum Master",
                    },
                  ],
                },
                "allProjects": Object {
                  "data": Array [
                    Object {
                      "id": 1,
                      "name": "WatchTower",
                    },
                  ],
                  "error": null,
                  "loading": false,
                },
                "createNewProjectVacancies": [Function],
                "createProjectVacancies": Object {
                  "data": Array [],
                  "error": null,
                  "loading": false,
                },
                "fetchAllProjects": [Function],
                "fetchAllRoles": [Function],
              },
              "refs": Object {},
              "renderButton": [Function],
              "renderDropdown": [Function],
              "renderFooter": [Function],
              "renderModalBody": [Function],
              "setState": [Function],
              "state": Object {
                "inputs": Object {},
                "success": false,
              },
              "updateSubmitState": [Function],
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_didScheduleRenderPhaseUpdate": false,
                  "_dispatcher": Object {
                    "readContext": [Function],
                    "useCallback": [Function],
                    "useContext": [Function],
                    "useDebugValue": [Function],
                    "useEffect": [Function],
                    "useImperativeHandle": [Function],
                    "useLayoutEffect": [Function],
                    "useMemo": [Function],
                    "useReducer": [Function],
                    "useRef": [Function],
                    "useState": [Function],
                  },
                  "_element": <AddVacanciesModal
                    allProjectRoles={
                                        Object {
                                                            "data": Array [
                                                              Object {
                                                                "id": 1,
                                                                "name": "Scrum Master",
                                                              },
                                                            ],
                                                          }
                    }
                    allProjects={
                                        Object {
                                                            "data": Array [
                                                              Object {
                                                                "id": 1,
                                                                "name": "WatchTower",
                                                              },
                                                            ],
                                                            "error": null,
                                                            "loading": false,
                                                          }
                    }
                    createNewProjectVacancies={[Function]}
                    createProjectVacancies={
                                        Object {
                                                            "data": Array [],
                                                            "error": null,
                                                            "loading": false,
                                                          }
                    }
                    fetchAllProjects={[Function]}
                    fetchAllRoles={[Function]}
/>,
                  "_firstWorkInProgressHook": null,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_isReRender": false,
                  "_newState": null,
                  "_numberOfReRenders": 0,
                  "_renderPhaseUpdates": null,
                  "_rendered": <GenericModal
                    footer={
                                        <div
                                                            className="modal-footer"
                                        >
                                                            <CadreMainButton
                                                                                buttonProps={
                                                                                                    Object {
                                                                                                                        "onClick": [Function],
                                                                                                                      }
                                                                                }
                                                                                label="CREATE"
                                                            />
                                        </div>
                    }
                    handleClose={[Function]}
                    handleSubmit={[Function]}
                    id="addProjectVacanciesModal"
                    submitLoading={false}
                    success={false}
                    successMessage="New project vacancies have been created!"
                    title="Create Vacancies"
>
                    <Unknown>
                                        <DropdownInput
                                                            className="wt-dropdown"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            enableSearch={true}
                                                            extras={null}
                                                            inputValue=""
                                                            label="Select Project"
                                                            loading={false}
                                                            multipleSelection={false}
                                                            name="project"
                                                            options={
                                                                                Array [
                                                                                                    Object {
                                                                                                      "id": 1,
                                                                                                      "label": "WatchTower",
                                                                                                      "name": "WatchTower",
                                                                                                    },
                                                                                                  ]
                                                            }
                                                            parent={[Circular]}
                                                            placeholder="Select Project"
                                        />
                                        <DropdownInput
                                                            className="wt-dropdown"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            enableSearch={false}
                                                            extras={null}
                                                            inputValue=""
                                                            label="Select Role"
                                                            loading={false}
                                                            multipleSelection={false}
                                                            name="role"
                                                            options={
                                                                                Array [
                                                                                                    Object {
                                                                                                      "id": 1,
                                                                                                      "label": "Scrum Master",
                                                                                                      "name": "Scrum Master",
                                                                                                    },
                                                                                                  ]
                                                            }
                                                            parent={[Circular]}
                                                            placeholder="Select Role"
                                        />
                                        <TextInput
                                                            alertText="Please input a valid number of slots!"
                                                            className="wt-text-input"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            inputValue=""
                                                            label="Vacancy Slots"
                                                            length={999}
                                                            name="slots"
                                                            parent={[Circular]}
                                                            placeholder=""
                                                            testInput={[Function]}
                                                            type="text"
                                        />
                    </Unknown>
</GenericModal>,
                  "_rendering": false,
                  "_updater": [Circular],
                  "_workInProgressHook": null,
                },
              },
              Symbol(enzyme.__setState__): [Function],
            },
            "placeholder": "Select Project",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "wt-dropdown",
            "comment": "",
            "componentStateKey": "inputs",
            "defaultStatus": 0,
            "enableSearch": false,
            "extras": null,
            "inputValue": "",
            "label": "Select Role",
            "loading": false,
            "multipleSelection": false,
            "name": "role",
            "options": Array [
              Object {
                "id": 1,
                "label": "Scrum Master",
                "name": "Scrum Master",
              },
            ],
            "parent": AddVacanciesModal {
              "context": Object {},
              "handleClick": [Function],
              "handleClose": [Function],
              "props": Object {
                "allProjectRoles": Object {
                  "data": Array [
                    Object {
                      "id": 1,
                      "name": "Scrum Master",
                    },
                  ],
                },
                "allProjects": Object {
                  "data": Array [
                    Object {
                      "id": 1,
                      "name": "WatchTower",
                    },
                  ],
                  "error": null,
                  "loading": false,
                },
                "createNewProjectVacancies": [Function],
                "createProjectVacancies": Object {
                  "data": Array [],
                  "error": null,
                  "loading": false,
                },
                "fetchAllProjects": [Function],
                "fetchAllRoles": [Function],
              },
              "refs": Object {},
              "renderButton": [Function],
              "renderDropdown": [Function],
              "renderFooter": [Function],
              "renderModalBody": [Function],
              "setState": [Function],
              "state": Object {
                "inputs": Object {},
                "success": false,
              },
              "updateSubmitState": [Function],
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_didScheduleRenderPhaseUpdate": false,
                  "_dispatcher": Object {
                    "readContext": [Function],
                    "useCallback": [Function],
                    "useContext": [Function],
                    "useDebugValue": [Function],
                    "useEffect": [Function],
                    "useImperativeHandle": [Function],
                    "useLayoutEffect": [Function],
                    "useMemo": [Function],
                    "useReducer": [Function],
                    "useRef": [Function],
                    "useState": [Function],
                  },
                  "_element": <AddVacanciesModal
                    allProjectRoles={
                                        Object {
                                                            "data": Array [
                                                              Object {
                                                                "id": 1,
                                                                "name": "Scrum Master",
                                                              },
                                                            ],
                                                          }
                    }
                    allProjects={
                                        Object {
                                                            "data": Array [
                                                              Object {
                                                                "id": 1,
                                                                "name": "WatchTower",
                                                              },
                                                            ],
                                                            "error": null,
                                                            "loading": false,
                                                          }
                    }
                    createNewProjectVacancies={[Function]}
                    createProjectVacancies={
                                        Object {
                                                            "data": Array [],
                                                            "error": null,
                                                            "loading": false,
                                                          }
                    }
                    fetchAllProjects={[Function]}
                    fetchAllRoles={[Function]}
/>,
                  "_firstWorkInProgressHook": null,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_isReRender": false,
                  "_newState": null,
                  "_numberOfReRenders": 0,
                  "_renderPhaseUpdates": null,
                  "_rendered": <GenericModal
                    footer={
                                        <div
                                                            className="modal-footer"
                                        >
                                                            <CadreMainButton
                                                                                buttonProps={
                                                                                                    Object {
                                                                                                                        "onClick": [Function],
                                                                                                                      }
                                                                                }
                                                                                label="CREATE"
                                                            />
                                        </div>
                    }
                    handleClose={[Function]}
                    handleSubmit={[Function]}
                    id="addProjectVacanciesModal"
                    submitLoading={false}
                    success={false}
                    successMessage="New project vacancies have been created!"
                    title="Create Vacancies"
>
                    <Unknown>
                                        <DropdownInput
                                                            className="wt-dropdown"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            enableSearch={true}
                                                            extras={null}
                                                            inputValue=""
                                                            label="Select Project"
                                                            loading={false}
                                                            multipleSelection={false}
                                                            name="project"
                                                            options={
                                                                                Array [
                                                                                                    Object {
                                                                                                      "id": 1,
                                                                                                      "label": "WatchTower",
                                                                                                      "name": "WatchTower",
                                                                                                    },
                                                                                                  ]
                                                            }
                                                            parent={[Circular]}
                                                            placeholder="Select Project"
                                        />
                                        <DropdownInput
                                                            className="wt-dropdown"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            enableSearch={false}
                                                            extras={null}
                                                            inputValue=""
                                                            label="Select Role"
                                                            loading={false}
                                                            multipleSelection={false}
                                                            name="role"
                                                            options={
                                                                                Array [
                                                                                                    Object {
                                                                                                      "id": 1,
                                                                                                      "label": "Scrum Master",
                                                                                                      "name": "Scrum Master",
                                                                                                    },
                                                                                                  ]
                                                            }
                                                            parent={[Circular]}
                                                            placeholder="Select Role"
                                        />
                                        <TextInput
                                                            alertText="Please input a valid number of slots!"
                                                            className="wt-text-input"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            inputValue=""
                                                            label="Vacancy Slots"
                                                            length={999}
                                                            name="slots"
                                                            parent={[Circular]}
                                                            placeholder=""
                                                            testInput={[Function]}
                                                            type="text"
                                        />
                    </Unknown>
</GenericModal>,
                  "_rendering": false,
                  "_updater": [Circular],
                  "_workInProgressHook": null,
                },
              },
              Symbol(enzyme.__setState__): [Function],
            },
            "placeholder": "Select Role",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alertText": "Please input a valid number of slots!",
            "className": "wt-text-input",
            "comment": "",
            "componentStateKey": "inputs",
            "defaultStatus": 0,
            "inputValue": "",
            "label": "Vacancy Slots",
            "length": 999,
            "name": "slots",
            "parent": AddVacanciesModal {
              "context": Object {},
              "handleClick": [Function],
              "handleClose": [Function],
              "props": Object {
                "allProjectRoles": Object {
                  "data": Array [
                    Object {
                      "id": 1,
                      "name": "Scrum Master",
                    },
                  ],
                },
                "allProjects": Object {
                  "data": Array [
                    Object {
                      "id": 1,
                      "name": "WatchTower",
                    },
                  ],
                  "error": null,
                  "loading": false,
                },
                "createNewProjectVacancies": [Function],
                "createProjectVacancies": Object {
                  "data": Array [],
                  "error": null,
                  "loading": false,
                },
                "fetchAllProjects": [Function],
                "fetchAllRoles": [Function],
              },
              "refs": Object {},
              "renderButton": [Function],
              "renderDropdown": [Function],
              "renderFooter": [Function],
              "renderModalBody": [Function],
              "setState": [Function],
              "state": Object {
                "inputs": Object {},
                "success": false,
              },
              "updateSubmitState": [Function],
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_didScheduleRenderPhaseUpdate": false,
                  "_dispatcher": Object {
                    "readContext": [Function],
                    "useCallback": [Function],
                    "useContext": [Function],
                    "useDebugValue": [Function],
                    "useEffect": [Function],
                    "useImperativeHandle": [Function],
                    "useLayoutEffect": [Function],
                    "useMemo": [Function],
                    "useReducer": [Function],
                    "useRef": [Function],
                    "useState": [Function],
                  },
                  "_element": <AddVacanciesModal
                    allProjectRoles={
                                        Object {
                                                            "data": Array [
                                                              Object {
                                                                "id": 1,
                                                                "name": "Scrum Master",
                                                              },
                                                            ],
                                                          }
                    }
                    allProjects={
                                        Object {
                                                            "data": Array [
                                                              Object {
                                                                "id": 1,
                                                                "name": "WatchTower",
                                                              },
                                                            ],
                                                            "error": null,
                                                            "loading": false,
                                                          }
                    }
                    createNewProjectVacancies={[Function]}
                    createProjectVacancies={
                                        Object {
                                                            "data": Array [],
                                                            "error": null,
                                                            "loading": false,
                                                          }
                    }
                    fetchAllProjects={[Function]}
                    fetchAllRoles={[Function]}
/>,
                  "_firstWorkInProgressHook": null,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_isReRender": false,
                  "_newState": null,
                  "_numberOfReRenders": 0,
                  "_renderPhaseUpdates": null,
                  "_rendered": <GenericModal
                    footer={
                                        <div
                                                            className="modal-footer"
                                        >
                                                            <CadreMainButton
                                                                                buttonProps={
                                                                                                    Object {
                                                                                                                        "onClick": [Function],
                                                                                                                      }
                                                                                }
                                                                                label="CREATE"
                                                            />
                                        </div>
                    }
                    handleClose={[Function]}
                    handleSubmit={[Function]}
                    id="addProjectVacanciesModal"
                    submitLoading={false}
                    success={false}
                    successMessage="New project vacancies have been created!"
                    title="Create Vacancies"
>
                    <Unknown>
                                        <DropdownInput
                                                            className="wt-dropdown"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            enableSearch={true}
                                                            extras={null}
                                                            inputValue=""
                                                            label="Select Project"
                                                            loading={false}
                                                            multipleSelection={false}
                                                            name="project"
                                                            options={
                                                                                Array [
                                                                                                    Object {
                                                                                                      "id": 1,
                                                                                                      "label": "WatchTower",
                                                                                                      "name": "WatchTower",
                                                                                                    },
                                                                                                  ]
                                                            }
                                                            parent={[Circular]}
                                                            placeholder="Select Project"
                                        />
                                        <DropdownInput
                                                            className="wt-dropdown"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            enableSearch={false}
                                                            extras={null}
                                                            inputValue=""
                                                            label="Select Role"
                                                            loading={false}
                                                            multipleSelection={false}
                                                            name="role"
                                                            options={
                                                                                Array [
                                                                                                    Object {
                                                                                                      "id": 1,
                                                                                                      "label": "Scrum Master",
                                                                                                      "name": "Scrum Master",
                                                                                                    },
                                                                                                  ]
                                                            }
                                                            parent={[Circular]}
                                                            placeholder="Select Role"
                                        />
                                        <TextInput
                                                            alertText="Please input a valid number of slots!"
                                                            className="wt-text-input"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            inputValue=""
                                                            label="Vacancy Slots"
                                                            length={999}
                                                            name="slots"
                                                            parent={[Circular]}
                                                            placeholder=""
                                                            testInput={[Function]}
                                                            type="text"
                                        />
                    </Unknown>
</GenericModal>,
                  "_rendering": false,
                  "_updater": [Circular],
                  "_workInProgressHook": null,
                },
              },
              Symbol(enzyme.__setState__): [Function],
            },
            "placeholder": "",
            "testInput": [Function],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Unknown>
          <DropdownInput
                    className="wt-dropdown"
                    comment=""
                    componentStateKey="inputs"
                    defaultStatus={0}
                    enableSearch={true}
                    extras={null}
                    inputValue=""
                    label="Select Project"
                    loading={false}
                    multipleSelection={false}
                    name="project"
                    options={
                              Array [
                                        Object {
                                          "id": 1,
                                          "label": "WatchTower",
                                          "name": "WatchTower",
                                        },
                                      ]
                    }
                    parent={
                              AddVacanciesModal {
                                        "context": Object {},
                                        "handleClick": [Function],
                                        "handleClose": [Function],
                                        "props": Object {
                                          "allProjectRoles": Object {
                                            "data": Array [
                                              Object {
                                                "id": 1,
                                                "name": "Scrum Master",
                                              },
                                            ],
                                          },
                                          "allProjects": Object {
                                            "data": Array [
                                              Object {
                                                "id": 1,
                                                "name": "WatchTower",
                                              },
                                            ],
                                            "error": null,
                                            "loading": false,
                                          },
                                          "createNewProjectVacancies": [Function],
                                          "createProjectVacancies": Object {
                                            "data": Array [],
                                            "error": null,
                                            "loading": false,
                                          },
                                          "fetchAllProjects": [Function],
                                          "fetchAllRoles": [Function],
                                        },
                                        "refs": Object {},
                                        "renderButton": [Function],
                                        "renderDropdown": [Function],
                                        "renderFooter": [Function],
                                        "renderModalBody": [Function],
                                        "setState": [Function],
                                        "state": Object {
                                          "inputs": Object {},
                                          "success": false,
                                        },
                                        "updateSubmitState": [Function],
                                        "updater": Updater {
                                          "_callbacks": Array [],
                                          "_renderer": ReactShallowRenderer {
                                            "_context": Object {},
                                            "_didScheduleRenderPhaseUpdate": false,
                                            "_dispatcher": Object {
                                              "readContext": [Function],
                                              "useCallback": [Function],
                                              "useContext": [Function],
                                              "useDebugValue": [Function],
                                              "useEffect": [Function],
                                              "useImperativeHandle": [Function],
                                              "useLayoutEffect": [Function],
                                              "useMemo": [Function],
                                              "useReducer": [Function],
                                              "useRef": [Function],
                                              "useState": [Function],
                                            },
                                            "_element": <AddVacanciesModal
                                              allProjectRoles={
                                                              Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "Scrum Master",
                                                                                },
                                                                              ],
                                                                            }
                                              }
                                              allProjects={
                                                              Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "WatchTower",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                              }
                                              createNewProjectVacancies={[Function]}
                                              createProjectVacancies={
                                                              Object {
                                                                              "data": Array [],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                              }
                                              fetchAllProjects={[Function]}
                                              fetchAllRoles={[Function]}
                              />,
                                            "_firstWorkInProgressHook": null,
                                            "_forcedUpdate": false,
                                            "_instance": [Circular],
                                            "_isReRender": false,
                                            "_newState": null,
                                            "_numberOfReRenders": 0,
                                            "_renderPhaseUpdates": null,
                                            "_rendered": <GenericModal
                                              footer={
                                                              <div
                                                                              className="modal-footer"
                                                              >
                                                                              <CadreMainButton
                                                                                              buttonProps={
                                                                                                              Object {
                                                                                                                              "onClick": [Function],
                                                                                                                            }
                                                                                              }
                                                                                              label="CREATE"
                                                                              />
                                                              </div>
                                              }
                                              handleClose={[Function]}
                                              handleSubmit={[Function]}
                                              id="addProjectVacanciesModal"
                                              submitLoading={false}
                                              success={false}
                                              successMessage="New project vacancies have been created!"
                                              title="Create Vacancies"
                              >
                                              <Unknown>
                                                              <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={true}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Project"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="project"
                                                                              options={
                                                                                              Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "WatchTower",
                                                                                                                "name": "WatchTower",
                                                                                                              },
                                                                                                            ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Project"
                                                              />
                                                              <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={false}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Role"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="role"
                                                                              options={
                                                                                              Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "Scrum Master",
                                                                                                                "name": "Scrum Master",
                                                                                                              },
                                                                                                            ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Role"
                                                              />
                                                              <TextInput
                                                                              alertText="Please input a valid number of slots!"
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Vacancy Slots"
                                                                              length={999}
                                                                              name="slots"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                              />
                                              </Unknown>
                              </GenericModal>,
                                            "_rendering": false,
                                            "_updater": [Circular],
                                            "_workInProgressHook": null,
                                          },
                                        },
                                        Symbol(enzyme.__setState__): [Function],
                                      }
                    }
                    placeholder="Select Project"
          />
          <DropdownInput
                    className="wt-dropdown"
                    comment=""
                    componentStateKey="inputs"
                    defaultStatus={0}
                    enableSearch={false}
                    extras={null}
                    inputValue=""
                    label="Select Role"
                    loading={false}
                    multipleSelection={false}
                    name="role"
                    options={
                              Array [
                                        Object {
                                          "id": 1,
                                          "label": "Scrum Master",
                                          "name": "Scrum Master",
                                        },
                                      ]
                    }
                    parent={
                              AddVacanciesModal {
                                        "context": Object {},
                                        "handleClick": [Function],
                                        "handleClose": [Function],
                                        "props": Object {
                                          "allProjectRoles": Object {
                                            "data": Array [
                                              Object {
                                                "id": 1,
                                                "name": "Scrum Master",
                                              },
                                            ],
                                          },
                                          "allProjects": Object {
                                            "data": Array [
                                              Object {
                                                "id": 1,
                                                "name": "WatchTower",
                                              },
                                            ],
                                            "error": null,
                                            "loading": false,
                                          },
                                          "createNewProjectVacancies": [Function],
                                          "createProjectVacancies": Object {
                                            "data": Array [],
                                            "error": null,
                                            "loading": false,
                                          },
                                          "fetchAllProjects": [Function],
                                          "fetchAllRoles": [Function],
                                        },
                                        "refs": Object {},
                                        "renderButton": [Function],
                                        "renderDropdown": [Function],
                                        "renderFooter": [Function],
                                        "renderModalBody": [Function],
                                        "setState": [Function],
                                        "state": Object {
                                          "inputs": Object {},
                                          "success": false,
                                        },
                                        "updateSubmitState": [Function],
                                        "updater": Updater {
                                          "_callbacks": Array [],
                                          "_renderer": ReactShallowRenderer {
                                            "_context": Object {},
                                            "_didScheduleRenderPhaseUpdate": false,
                                            "_dispatcher": Object {
                                              "readContext": [Function],
                                              "useCallback": [Function],
                                              "useContext": [Function],
                                              "useDebugValue": [Function],
                                              "useEffect": [Function],
                                              "useImperativeHandle": [Function],
                                              "useLayoutEffect": [Function],
                                              "useMemo": [Function],
                                              "useReducer": [Function],
                                              "useRef": [Function],
                                              "useState": [Function],
                                            },
                                            "_element": <AddVacanciesModal
                                              allProjectRoles={
                                                              Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "Scrum Master",
                                                                                },
                                                                              ],
                                                                            }
                                              }
                                              allProjects={
                                                              Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "WatchTower",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                              }
                                              createNewProjectVacancies={[Function]}
                                              createProjectVacancies={
                                                              Object {
                                                                              "data": Array [],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                              }
                                              fetchAllProjects={[Function]}
                                              fetchAllRoles={[Function]}
                              />,
                                            "_firstWorkInProgressHook": null,
                                            "_forcedUpdate": false,
                                            "_instance": [Circular],
                                            "_isReRender": false,
                                            "_newState": null,
                                            "_numberOfReRenders": 0,
                                            "_renderPhaseUpdates": null,
                                            "_rendered": <GenericModal
                                              footer={
                                                              <div
                                                                              className="modal-footer"
                                                              >
                                                                              <CadreMainButton
                                                                                              buttonProps={
                                                                                                              Object {
                                                                                                                              "onClick": [Function],
                                                                                                                            }
                                                                                              }
                                                                                              label="CREATE"
                                                                              />
                                                              </div>
                                              }
                                              handleClose={[Function]}
                                              handleSubmit={[Function]}
                                              id="addProjectVacanciesModal"
                                              submitLoading={false}
                                              success={false}
                                              successMessage="New project vacancies have been created!"
                                              title="Create Vacancies"
                              >
                                              <Unknown>
                                                              <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={true}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Project"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="project"
                                                                              options={
                                                                                              Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "WatchTower",
                                                                                                                "name": "WatchTower",
                                                                                                              },
                                                                                                            ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Project"
                                                              />
                                                              <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={false}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Role"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="role"
                                                                              options={
                                                                                              Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "Scrum Master",
                                                                                                                "name": "Scrum Master",
                                                                                                              },
                                                                                                            ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Role"
                                                              />
                                                              <TextInput
                                                                              alertText="Please input a valid number of slots!"
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Vacancy Slots"
                                                                              length={999}
                                                                              name="slots"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                              />
                                              </Unknown>
                              </GenericModal>,
                                            "_rendering": false,
                                            "_updater": [Circular],
                                            "_workInProgressHook": null,
                                          },
                                        },
                                        Symbol(enzyme.__setState__): [Function],
                                      }
                    }
                    placeholder="Select Role"
          />
          <TextInput
                    alertText="Please input a valid number of slots!"
                    className="wt-text-input"
                    comment=""
                    componentStateKey="inputs"
                    defaultStatus={0}
                    inputValue=""
                    label="Vacancy Slots"
                    length={999}
                    name="slots"
                    parent={
                              AddVacanciesModal {
                                        "context": Object {},
                                        "handleClick": [Function],
                                        "handleClose": [Function],
                                        "props": Object {
                                          "allProjectRoles": Object {
                                            "data": Array [
                                              Object {
                                                "id": 1,
                                                "name": "Scrum Master",
                                              },
                                            ],
                                          },
                                          "allProjects": Object {
                                            "data": Array [
                                              Object {
                                                "id": 1,
                                                "name": "WatchTower",
                                              },
                                            ],
                                            "error": null,
                                            "loading": false,
                                          },
                                          "createNewProjectVacancies": [Function],
                                          "createProjectVacancies": Object {
                                            "data": Array [],
                                            "error": null,
                                            "loading": false,
                                          },
                                          "fetchAllProjects": [Function],
                                          "fetchAllRoles": [Function],
                                        },
                                        "refs": Object {},
                                        "renderButton": [Function],
                                        "renderDropdown": [Function],
                                        "renderFooter": [Function],
                                        "renderModalBody": [Function],
                                        "setState": [Function],
                                        "state": Object {
                                          "inputs": Object {},
                                          "success": false,
                                        },
                                        "updateSubmitState": [Function],
                                        "updater": Updater {
                                          "_callbacks": Array [],
                                          "_renderer": ReactShallowRenderer {
                                            "_context": Object {},
                                            "_didScheduleRenderPhaseUpdate": false,
                                            "_dispatcher": Object {
                                              "readContext": [Function],
                                              "useCallback": [Function],
                                              "useContext": [Function],
                                              "useDebugValue": [Function],
                                              "useEffect": [Function],
                                              "useImperativeHandle": [Function],
                                              "useLayoutEffect": [Function],
                                              "useMemo": [Function],
                                              "useReducer": [Function],
                                              "useRef": [Function],
                                              "useState": [Function],
                                            },
                                            "_element": <AddVacanciesModal
                                              allProjectRoles={
                                                              Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "Scrum Master",
                                                                                },
                                                                              ],
                                                                            }
                                              }
                                              allProjects={
                                                              Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "id": 1,
                                                                                  "name": "WatchTower",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                              }
                                              createNewProjectVacancies={[Function]}
                                              createProjectVacancies={
                                                              Object {
                                                                              "data": Array [],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                              }
                                              fetchAllProjects={[Function]}
                                              fetchAllRoles={[Function]}
                              />,
                                            "_firstWorkInProgressHook": null,
                                            "_forcedUpdate": false,
                                            "_instance": [Circular],
                                            "_isReRender": false,
                                            "_newState": null,
                                            "_numberOfReRenders": 0,
                                            "_renderPhaseUpdates": null,
                                            "_rendered": <GenericModal
                                              footer={
                                                              <div
                                                                              className="modal-footer"
                                                              >
                                                                              <CadreMainButton
                                                                                              buttonProps={
                                                                                                              Object {
                                                                                                                              "onClick": [Function],
                                                                                                                            }
                                                                                              }
                                                                                              label="CREATE"
                                                                              />
                                                              </div>
                                              }
                                              handleClose={[Function]}
                                              handleSubmit={[Function]}
                                              id="addProjectVacanciesModal"
                                              submitLoading={false}
                                              success={false}
                                              successMessage="New project vacancies have been created!"
                                              title="Create Vacancies"
                              >
                                              <Unknown>
                                                              <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={true}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Project"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="project"
                                                                              options={
                                                                                              Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "WatchTower",
                                                                                                                "name": "WatchTower",
                                                                                                              },
                                                                                                            ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Project"
                                                              />
                                                              <DropdownInput
                                                                              className="wt-dropdown"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              enableSearch={false}
                                                                              extras={null}
                                                                              inputValue=""
                                                                              label="Select Role"
                                                                              loading={false}
                                                                              multipleSelection={false}
                                                                              name="role"
                                                                              options={
                                                                                              Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "Scrum Master",
                                                                                                                "name": "Scrum Master",
                                                                                                              },
                                                                                                            ]
                                                                              }
                                                                              parent={[Circular]}
                                                                              placeholder="Select Role"
                                                              />
                                                              <TextInput
                                                                              alertText="Please input a valid number of slots!"
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Vacancy Slots"
                                                                              length={999}
                                                                              name="slots"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                              />
                                              </Unknown>
                              </GenericModal>,
                                            "_rendering": false,
                                            "_updater": [Circular],
                                            "_workInProgressHook": null,
                                          },
                                        },
                                        Symbol(enzyme.__setState__): [Function],
                                      }
                    }
                    placeholder=""
                    testInput={[Function]}
                    type="text"
          />
</Unknown>,
        "footer": <div
          className="modal-footer"
>
          <CadreMainButton
                    buttonProps={
                              Object {
                                        "onClick": [Function],
                                      }
                    }
                    label="CREATE"
          />
</div>,
        "handleClose": [Function],
        "handleSubmit": [Function],
        "id": "addProjectVacanciesModal",
        "submitLoading": false,
        "success": false,
        "successMessage": "New project vacancies have been created!",
        "title": "Create Vacancies",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <DropdownInput
              className="wt-dropdown"
              comment=""
              componentStateKey="inputs"
              defaultStatus={0}
              enableSearch={true}
              extras={null}
              inputValue=""
              label="Select Project"
              loading={false}
              multipleSelection={false}
              name="project"
              options={
                            Array [
                                          Object {
                                            "id": 1,
                                            "label": "WatchTower",
                                            "name": "WatchTower",
                                          },
                                        ]
              }
              parent={
                            AddVacanciesModal {
                                          "context": Object {},
                                          "handleClick": [Function],
                                          "handleClose": [Function],
                                          "props": Object {
                                            "allProjectRoles": Object {
                                              "data": Array [
                                                Object {
                                                  "id": 1,
                                                  "name": "Scrum Master",
                                                },
                                              ],
                                            },
                                            "allProjects": Object {
                                              "data": Array [
                                                Object {
                                                  "id": 1,
                                                  "name": "WatchTower",
                                                },
                                              ],
                                              "error": null,
                                              "loading": false,
                                            },
                                            "createNewProjectVacancies": [Function],
                                            "createProjectVacancies": Object {
                                              "data": Array [],
                                              "error": null,
                                              "loading": false,
                                            },
                                            "fetchAllProjects": [Function],
                                            "fetchAllRoles": [Function],
                                          },
                                          "refs": Object {},
                                          "renderButton": [Function],
                                          "renderDropdown": [Function],
                                          "renderFooter": [Function],
                                          "renderModalBody": [Function],
                                          "setState": [Function],
                                          "state": Object {
                                            "inputs": Object {},
                                            "success": false,
                                          },
                                          "updateSubmitState": [Function],
                                          "updater": Updater {
                                            "_callbacks": Array [],
                                            "_renderer": ReactShallowRenderer {
                                              "_context": Object {},
                                              "_didScheduleRenderPhaseUpdate": false,
                                              "_dispatcher": Object {
                                                "readContext": [Function],
                                                "useCallback": [Function],
                                                "useContext": [Function],
                                                "useDebugValue": [Function],
                                                "useEffect": [Function],
                                                "useImperativeHandle": [Function],
                                                "useLayoutEffect": [Function],
                                                "useMemo": [Function],
                                                "useReducer": [Function],
                                                "useRef": [Function],
                                                "useState": [Function],
                                              },
                                              "_element": <AddVacanciesModal
                                                allProjectRoles={
                                                                    Object {
                                                                                        "data": Array [
                                                                                          Object {
                                                                                            "id": 1,
                                                                                            "name": "Scrum Master",
                                                                                          },
                                                                                        ],
                                                                                      }
                                                }
                                                allProjects={
                                                                    Object {
                                                                                        "data": Array [
                                                                                          Object {
                                                                                            "id": 1,
                                                                                            "name": "WatchTower",
                                                                                          },
                                                                                        ],
                                                                                        "error": null,
                                                                                        "loading": false,
                                                                                      }
                                                }
                                                createNewProjectVacancies={[Function]}
                                                createProjectVacancies={
                                                                    Object {
                                                                                        "data": Array [],
                                                                                        "error": null,
                                                                                        "loading": false,
                                                                                      }
                                                }
                                                fetchAllProjects={[Function]}
                                                fetchAllRoles={[Function]}
                            />,
                                              "_firstWorkInProgressHook": null,
                                              "_forcedUpdate": false,
                                              "_instance": [Circular],
                                              "_isReRender": false,
                                              "_newState": null,
                                              "_numberOfReRenders": 0,
                                              "_renderPhaseUpdates": null,
                                              "_rendered": <GenericModal
                                                footer={
                                                                    <div
                                                                                        className="modal-footer"
                                                                    >
                                                                                        <CadreMainButton
                                                                                                            buttonProps={
                                                                                                                                Object {
                                                                                                                                                    "onClick": [Function],
                                                                                                                                                  }
                                                                                                            }
                                                                                                            label="CREATE"
                                                                                        />
                                                                    </div>
                                                }
                                                handleClose={[Function]}
                                                handleSubmit={[Function]}
                                                id="addProjectVacanciesModal"
                                                submitLoading={false}
                                                success={false}
                                                successMessage="New project vacancies have been created!"
                                                title="Create Vacancies"
                            >
                                                <Unknown>
                                                                    <DropdownInput
                                                                                        className="wt-dropdown"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        enableSearch={true}
                                                                                        extras={null}
                                                                                        inputValue=""
                                                                                        label="Select Project"
                                                                                        loading={false}
                                                                                        multipleSelection={false}
                                                                                        name="project"
                                                                                        options={
                                                                                                            Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                  "label": "WatchTower",
                                                                                                                                  "name": "WatchTower",
                                                                                                                                },
                                                                                                                              ]
                                                                                        }
                                                                                        parent={[Circular]}
                                                                                        placeholder="Select Project"
                                                                    />
                                                                    <DropdownInput
                                                                                        className="wt-dropdown"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        enableSearch={false}
                                                                                        extras={null}
                                                                                        inputValue=""
                                                                                        label="Select Role"
                                                                                        loading={false}
                                                                                        multipleSelection={false}
                                                                                        name="role"
                                                                                        options={
                                                                                                            Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                  "label": "Scrum Master",
                                                                                                                                  "name": "Scrum Master",
                                                                                                                                },
                                                                                                                              ]
                                                                                        }
                                                                                        parent={[Circular]}
                                                                                        placeholder="Select Role"
                                                                    />
                                                                    <TextInput
                                                                                        alertText="Please input a valid number of slots!"
                                                                                        className="wt-text-input"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        inputValue=""
                                                                                        label="Vacancy Slots"
                                                                                        length={999}
                                                                                        name="slots"
                                                                                        parent={[Circular]}
                                                                                        placeholder=""
                                                                                        testInput={[Function]}
                                                                                        type="text"
                                                                    />
                                                </Unknown>
                            </GenericModal>,
                                              "_rendering": false,
                                              "_updater": [Circular],
                                              "_workInProgressHook": null,
                                            },
                                          },
                                          Symbol(enzyme.__setState__): [Function],
                                        }
              }
              placeholder="Select Project"
/>,
            <DropdownInput
              className="wt-dropdown"
              comment=""
              componentStateKey="inputs"
              defaultStatus={0}
              enableSearch={false}
              extras={null}
              inputValue=""
              label="Select Role"
              loading={false}
              multipleSelection={false}
              name="role"
              options={
                            Array [
                                          Object {
                                            "id": 1,
                                            "label": "Scrum Master",
                                            "name": "Scrum Master",
                                          },
                                        ]
              }
              parent={
                            AddVacanciesModal {
                                          "context": Object {},
                                          "handleClick": [Function],
                                          "handleClose": [Function],
                                          "props": Object {
                                            "allProjectRoles": Object {
                                              "data": Array [
                                                Object {
                                                  "id": 1,
                                                  "name": "Scrum Master",
                                                },
                                              ],
                                            },
                                            "allProjects": Object {
                                              "data": Array [
                                                Object {
                                                  "id": 1,
                                                  "name": "WatchTower",
                                                },
                                              ],
                                              "error": null,
                                              "loading": false,
                                            },
                                            "createNewProjectVacancies": [Function],
                                            "createProjectVacancies": Object {
                                              "data": Array [],
                                              "error": null,
                                              "loading": false,
                                            },
                                            "fetchAllProjects": [Function],
                                            "fetchAllRoles": [Function],
                                          },
                                          "refs": Object {},
                                          "renderButton": [Function],
                                          "renderDropdown": [Function],
                                          "renderFooter": [Function],
                                          "renderModalBody": [Function],
                                          "setState": [Function],
                                          "state": Object {
                                            "inputs": Object {},
                                            "success": false,
                                          },
                                          "updateSubmitState": [Function],
                                          "updater": Updater {
                                            "_callbacks": Array [],
                                            "_renderer": ReactShallowRenderer {
                                              "_context": Object {},
                                              "_didScheduleRenderPhaseUpdate": false,
                                              "_dispatcher": Object {
                                                "readContext": [Function],
                                                "useCallback": [Function],
                                                "useContext": [Function],
                                                "useDebugValue": [Function],
                                                "useEffect": [Function],
                                                "useImperativeHandle": [Function],
                                                "useLayoutEffect": [Function],
                                                "useMemo": [Function],
                                                "useReducer": [Function],
                                                "useRef": [Function],
                                                "useState": [Function],
                                              },
                                              "_element": <AddVacanciesModal
                                                allProjectRoles={
                                                                    Object {
                                                                                        "data": Array [
                                                                                          Object {
                                                                                            "id": 1,
                                                                                            "name": "Scrum Master",
                                                                                          },
                                                                                        ],
                                                                                      }
                                                }
                                                allProjects={
                                                                    Object {
                                                                                        "data": Array [
                                                                                          Object {
                                                                                            "id": 1,
                                                                                            "name": "WatchTower",
                                                                                          },
                                                                                        ],
                                                                                        "error": null,
                                                                                        "loading": false,
                                                                                      }
                                                }
                                                createNewProjectVacancies={[Function]}
                                                createProjectVacancies={
                                                                    Object {
                                                                                        "data": Array [],
                                                                                        "error": null,
                                                                                        "loading": false,
                                                                                      }
                                                }
                                                fetchAllProjects={[Function]}
                                                fetchAllRoles={[Function]}
                            />,
                                              "_firstWorkInProgressHook": null,
                                              "_forcedUpdate": false,
                                              "_instance": [Circular],
                                              "_isReRender": false,
                                              "_newState": null,
                                              "_numberOfReRenders": 0,
                                              "_renderPhaseUpdates": null,
                                              "_rendered": <GenericModal
                                                footer={
                                                                    <div
                                                                                        className="modal-footer"
                                                                    >
                                                                                        <CadreMainButton
                                                                                                            buttonProps={
                                                                                                                                Object {
                                                                                                                                                    "onClick": [Function],
                                                                                                                                                  }
                                                                                                            }
                                                                                                            label="CREATE"
                                                                                        />
                                                                    </div>
                                                }
                                                handleClose={[Function]}
                                                handleSubmit={[Function]}
                                                id="addProjectVacanciesModal"
                                                submitLoading={false}
                                                success={false}
                                                successMessage="New project vacancies have been created!"
                                                title="Create Vacancies"
                            >
                                                <Unknown>
                                                                    <DropdownInput
                                                                                        className="wt-dropdown"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        enableSearch={true}
                                                                                        extras={null}
                                                                                        inputValue=""
                                                                                        label="Select Project"
                                                                                        loading={false}
                                                                                        multipleSelection={false}
                                                                                        name="project"
                                                                                        options={
                                                                                                            Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                  "label": "WatchTower",
                                                                                                                                  "name": "WatchTower",
                                                                                                                                },
                                                                                                                              ]
                                                                                        }
                                                                                        parent={[Circular]}
                                                                                        placeholder="Select Project"
                                                                    />
                                                                    <DropdownInput
                                                                                        className="wt-dropdown"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        enableSearch={false}
                                                                                        extras={null}
                                                                                        inputValue=""
                                                                                        label="Select Role"
                                                                                        loading={false}
                                                                                        multipleSelection={false}
                                                                                        name="role"
                                                                                        options={
                                                                                                            Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                  "label": "Scrum Master",
                                                                                                                                  "name": "Scrum Master",
                                                                                                                                },
                                                                                                                              ]
                                                                                        }
                                                                                        parent={[Circular]}
                                                                                        placeholder="Select Role"
                                                                    />
                                                                    <TextInput
                                                                                        alertText="Please input a valid number of slots!"
                                                                                        className="wt-text-input"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        inputValue=""
                                                                                        label="Vacancy Slots"
                                                                                        length={999}
                                                                                        name="slots"
                                                                                        parent={[Circular]}
                                                                                        placeholder=""
                                                                                        testInput={[Function]}
                                                                                        type="text"
                                                                    />
                                                </Unknown>
                            </GenericModal>,
                                              "_rendering": false,
                                              "_updater": [Circular],
                                              "_workInProgressHook": null,
                                            },
                                          },
                                          Symbol(enzyme.__setState__): [Function],
                                        }
              }
              placeholder="Select Role"
/>,
            <TextInput
              alertText="Please input a valid number of slots!"
              className="wt-text-input"
              comment=""
              componentStateKey="inputs"
              defaultStatus={0}
              inputValue=""
              label="Vacancy Slots"
              length={999}
              name="slots"
              parent={
                            AddVacanciesModal {
                                          "context": Object {},
                                          "handleClick": [Function],
                                          "handleClose": [Function],
                                          "props": Object {
                                            "allProjectRoles": Object {
                                              "data": Array [
                                                Object {
                                                  "id": 1,
                                                  "name": "Scrum Master",
                                                },
                                              ],
                                            },
                                            "allProjects": Object {
                                              "data": Array [
                                                Object {
                                                  "id": 1,
                                                  "name": "WatchTower",
                                                },
                                              ],
                                              "error": null,
                                              "loading": false,
                                            },
                                            "createNewProjectVacancies": [Function],
                                            "createProjectVacancies": Object {
                                              "data": Array [],
                                              "error": null,
                                              "loading": false,
                                            },
                                            "fetchAllProjects": [Function],
                                            "fetchAllRoles": [Function],
                                          },
                                          "refs": Object {},
                                          "renderButton": [Function],
                                          "renderDropdown": [Function],
                                          "renderFooter": [Function],
                                          "renderModalBody": [Function],
                                          "setState": [Function],
                                          "state": Object {
                                            "inputs": Object {},
                                            "success": false,
                                          },
                                          "updateSubmitState": [Function],
                                          "updater": Updater {
                                            "_callbacks": Array [],
                                            "_renderer": ReactShallowRenderer {
                                              "_context": Object {},
                                              "_didScheduleRenderPhaseUpdate": false,
                                              "_dispatcher": Object {
                                                "readContext": [Function],
                                                "useCallback": [Function],
                                                "useContext": [Function],
                                                "useDebugValue": [Function],
                                                "useEffect": [Function],
                                                "useImperativeHandle": [Function],
                                                "useLayoutEffect": [Function],
                                                "useMemo": [Function],
                                                "useReducer": [Function],
                                                "useRef": [Function],
                                                "useState": [Function],
                                              },
                                              "_element": <AddVacanciesModal
                                                allProjectRoles={
                                                                    Object {
                                                                                        "data": Array [
                                                                                          Object {
                                                                                            "id": 1,
                                                                                            "name": "Scrum Master",
                                                                                          },
                                                                                        ],
                                                                                      }
                                                }
                                                allProjects={
                                                                    Object {
                                                                                        "data": Array [
                                                                                          Object {
                                                                                            "id": 1,
                                                                                            "name": "WatchTower",
                                                                                          },
                                                                                        ],
                                                                                        "error": null,
                                                                                        "loading": false,
                                                                                      }
                                                }
                                                createNewProjectVacancies={[Function]}
                                                createProjectVacancies={
                                                                    Object {
                                                                                        "data": Array [],
                                                                                        "error": null,
                                                                                        "loading": false,
                                                                                      }
                                                }
                                                fetchAllProjects={[Function]}
                                                fetchAllRoles={[Function]}
                            />,
                                              "_firstWorkInProgressHook": null,
                                              "_forcedUpdate": false,
                                              "_instance": [Circular],
                                              "_isReRender": false,
                                              "_newState": null,
                                              "_numberOfReRenders": 0,
                                              "_renderPhaseUpdates": null,
                                              "_rendered": <GenericModal
                                                footer={
                                                                    <div
                                                                                        className="modal-footer"
                                                                    >
                                                                                        <CadreMainButton
                                                                                                            buttonProps={
                                                                                                                                Object {
                                                                                                                                                    "onClick": [Function],
                                                                                                                                                  }
                                                                                                            }
                                                                                                            label="CREATE"
                                                                                        />
                                                                    </div>
                                                }
                                                handleClose={[Function]}
                                                handleSubmit={[Function]}
                                                id="addProjectVacanciesModal"
                                                submitLoading={false}
                                                success={false}
                                                successMessage="New project vacancies have been created!"
                                                title="Create Vacancies"
                            >
                                                <Unknown>
                                                                    <DropdownInput
                                                                                        className="wt-dropdown"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        enableSearch={true}
                                                                                        extras={null}
                                                                                        inputValue=""
                                                                                        label="Select Project"
                                                                                        loading={false}
                                                                                        multipleSelection={false}
                                                                                        name="project"
                                                                                        options={
                                                                                                            Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                  "label": "WatchTower",
                                                                                                                                  "name": "WatchTower",
                                                                                                                                },
                                                                                                                              ]
                                                                                        }
                                                                                        parent={[Circular]}
                                                                                        placeholder="Select Project"
                                                                    />
                                                                    <DropdownInput
                                                                                        className="wt-dropdown"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        enableSearch={false}
                                                                                        extras={null}
                                                                                        inputValue=""
                                                                                        label="Select Role"
                                                                                        loading={false}
                                                                                        multipleSelection={false}
                                                                                        name="role"
                                                                                        options={
                                                                                                            Array [
                                                                                                                                Object {
                                                                                                                                  "id": 1,
                                                                                                                                  "label": "Scrum Master",
                                                                                                                                  "name": "Scrum Master",
                                                                                                                                },
                                                                                                                              ]
                                                                                        }
                                                                                        parent={[Circular]}
                                                                                        placeholder="Select Role"
                                                                    />
                                                                    <TextInput
                                                                                        alertText="Please input a valid number of slots!"
                                                                                        className="wt-text-input"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        inputValue=""
                                                                                        label="Vacancy Slots"
                                                                                        length={999}
                                                                                        name="slots"
                                                                                        parent={[Circular]}
                                                                                        placeholder=""
                                                                                        testInput={[Function]}
                                                                                        type="text"
                                                                    />
                                                </Unknown>
                            </GenericModal>,
                                              "_rendering": false,
                                              "_updater": [Circular],
                                              "_workInProgressHook": null,
                                            },
                                          },
                                          Symbol(enzyme.__setState__): [Function],
                                        }
              }
              placeholder=""
              testInput={[Function]}
              type="text"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "wt-dropdown",
              "comment": "",
              "componentStateKey": "inputs",
              "defaultStatus": 0,
              "enableSearch": true,
              "extras": null,
              "inputValue": "",
              "label": "Select Project",
              "loading": false,
              "multipleSelection": false,
              "name": "project",
              "options": Array [
                Object {
                  "id": 1,
                  "label": "WatchTower",
                  "name": "WatchTower",
                },
              ],
              "parent": AddVacanciesModal {
                "context": Object {},
                "handleClick": [Function],
                "handleClose": [Function],
                "props": Object {
                  "allProjectRoles": Object {
                    "data": Array [
                      Object {
                        "id": 1,
                        "name": "Scrum Master",
                      },
                    ],
                  },
                  "allProjects": Object {
                    "data": Array [
                      Object {
                        "id": 1,
                        "name": "WatchTower",
                      },
                    ],
                    "error": null,
                    "loading": false,
                  },
                  "createNewProjectVacancies": [Function],
                  "createProjectVacancies": Object {
                    "data": Array [],
                    "error": null,
                    "loading": false,
                  },
                  "fetchAllProjects": [Function],
                  "fetchAllRoles": [Function],
                },
                "refs": Object {},
                "renderButton": [Function],
                "renderDropdown": [Function],
                "renderFooter": [Function],
                "renderModalBody": [Function],
                "setState": [Function],
                "state": Object {
                  "inputs": Object {},
                  "success": false,
                },
                "updateSubmitState": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useState": [Function],
                    },
                    "_element": <AddVacanciesModal
                      allProjectRoles={
                                            Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "Scrum Master",
                                                                    },
                                                                  ],
                                                                }
                      }
                      allProjects={
                                            Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "WatchTower",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                      }
                      createNewProjectVacancies={[Function]}
                      createProjectVacancies={
                                            Object {
                                                                  "data": Array [],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                      }
                      fetchAllProjects={[Function]}
                      fetchAllRoles={[Function]}
/>,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <GenericModal
                      footer={
                                            <div
                                                                  className="modal-footer"
                                            >
                                                                  <CadreMainButton
                                                                                        buttonProps={
                                                                                                              Object {
                                                                                                                                    "onClick": [Function],
                                                                                                                                  }
                                                                                        }
                                                                                        label="CREATE"
                                                                  />
                                            </div>
                      }
                      handleClose={[Function]}
                      handleSubmit={[Function]}
                      id="addProjectVacanciesModal"
                      submitLoading={false}
                      success={false}
                      successMessage="New project vacancies have been created!"
                      title="Create Vacancies"
>
                      <Unknown>
                                            <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={true}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Project"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="project"
                                                                  options={
                                                                                        Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "WatchTower",
                                                                                                                "name": "WatchTower",
                                                                                                              },
                                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Project"
                                            />
                                            <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={false}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Role"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="role"
                                                                  options={
                                                                                        Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "Scrum Master",
                                                                                                                "name": "Scrum Master",
                                                                                                              },
                                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Role"
                                            />
                                            <TextInput
                                                                  alertText="Please input a valid number of slots!"
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Vacancy Slots"
                                                                  length={999}
                                                                  name="slots"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                            />
                      </Unknown>
</GenericModal>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              },
              "placeholder": "Select Project",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "wt-dropdown",
              "comment": "",
              "componentStateKey": "inputs",
              "defaultStatus": 0,
              "enableSearch": false,
              "extras": null,
              "inputValue": "",
              "label": "Select Role",
              "loading": false,
              "multipleSelection": false,
              "name": "role",
              "options": Array [
                Object {
                  "id": 1,
                  "label": "Scrum Master",
                  "name": "Scrum Master",
                },
              ],
              "parent": AddVacanciesModal {
                "context": Object {},
                "handleClick": [Function],
                "handleClose": [Function],
                "props": Object {
                  "allProjectRoles": Object {
                    "data": Array [
                      Object {
                        "id": 1,
                        "name": "Scrum Master",
                      },
                    ],
                  },
                  "allProjects": Object {
                    "data": Array [
                      Object {
                        "id": 1,
                        "name": "WatchTower",
                      },
                    ],
                    "error": null,
                    "loading": false,
                  },
                  "createNewProjectVacancies": [Function],
                  "createProjectVacancies": Object {
                    "data": Array [],
                    "error": null,
                    "loading": false,
                  },
                  "fetchAllProjects": [Function],
                  "fetchAllRoles": [Function],
                },
                "refs": Object {},
                "renderButton": [Function],
                "renderDropdown": [Function],
                "renderFooter": [Function],
                "renderModalBody": [Function],
                "setState": [Function],
                "state": Object {
                  "inputs": Object {},
                  "success": false,
                },
                "updateSubmitState": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useState": [Function],
                    },
                    "_element": <AddVacanciesModal
                      allProjectRoles={
                                            Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "Scrum Master",
                                                                    },
                                                                  ],
                                                                }
                      }
                      allProjects={
                                            Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "WatchTower",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                      }
                      createNewProjectVacancies={[Function]}
                      createProjectVacancies={
                                            Object {
                                                                  "data": Array [],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                      }
                      fetchAllProjects={[Function]}
                      fetchAllRoles={[Function]}
/>,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <GenericModal
                      footer={
                                            <div
                                                                  className="modal-footer"
                                            >
                                                                  <CadreMainButton
                                                                                        buttonProps={
                                                                                                              Object {
                                                                                                                                    "onClick": [Function],
                                                                                                                                  }
                                                                                        }
                                                                                        label="CREATE"
                                                                  />
                                            </div>
                      }
                      handleClose={[Function]}
                      handleSubmit={[Function]}
                      id="addProjectVacanciesModal"
                      submitLoading={false}
                      success={false}
                      successMessage="New project vacancies have been created!"
                      title="Create Vacancies"
>
                      <Unknown>
                                            <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={true}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Project"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="project"
                                                                  options={
                                                                                        Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "WatchTower",
                                                                                                                "name": "WatchTower",
                                                                                                              },
                                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Project"
                                            />
                                            <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={false}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Role"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="role"
                                                                  options={
                                                                                        Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "Scrum Master",
                                                                                                                "name": "Scrum Master",
                                                                                                              },
                                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Role"
                                            />
                                            <TextInput
                                                                  alertText="Please input a valid number of slots!"
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Vacancy Slots"
                                                                  length={999}
                                                                  name="slots"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                            />
                      </Unknown>
</GenericModal>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              },
              "placeholder": "Select Role",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "alertText": "Please input a valid number of slots!",
              "className": "wt-text-input",
              "comment": "",
              "componentStateKey": "inputs",
              "defaultStatus": 0,
              "inputValue": "",
              "label": "Vacancy Slots",
              "length": 999,
              "name": "slots",
              "parent": AddVacanciesModal {
                "context": Object {},
                "handleClick": [Function],
                "handleClose": [Function],
                "props": Object {
                  "allProjectRoles": Object {
                    "data": Array [
                      Object {
                        "id": 1,
                        "name": "Scrum Master",
                      },
                    ],
                  },
                  "allProjects": Object {
                    "data": Array [
                      Object {
                        "id": 1,
                        "name": "WatchTower",
                      },
                    ],
                    "error": null,
                    "loading": false,
                  },
                  "createNewProjectVacancies": [Function],
                  "createProjectVacancies": Object {
                    "data": Array [],
                    "error": null,
                    "loading": false,
                  },
                  "fetchAllProjects": [Function],
                  "fetchAllRoles": [Function],
                },
                "refs": Object {},
                "renderButton": [Function],
                "renderDropdown": [Function],
                "renderFooter": [Function],
                "renderModalBody": [Function],
                "setState": [Function],
                "state": Object {
                  "inputs": Object {},
                  "success": false,
                },
                "updateSubmitState": [Function],
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useState": [Function],
                    },
                    "_element": <AddVacanciesModal
                      allProjectRoles={
                                            Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "Scrum Master",
                                                                    },
                                                                  ],
                                                                }
                      }
                      allProjects={
                                            Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "id": 1,
                                                                      "name": "WatchTower",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                      }
                      createNewProjectVacancies={[Function]}
                      createProjectVacancies={
                                            Object {
                                                                  "data": Array [],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                      }
                      fetchAllProjects={[Function]}
                      fetchAllRoles={[Function]}
/>,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <GenericModal
                      footer={
                                            <div
                                                                  className="modal-footer"
                                            >
                                                                  <CadreMainButton
                                                                                        buttonProps={
                                                                                                              Object {
                                                                                                                                    "onClick": [Function],
                                                                                                                                  }
                                                                                        }
                                                                                        label="CREATE"
                                                                  />
                                            </div>
                      }
                      handleClose={[Function]}
                      handleSubmit={[Function]}
                      id="addProjectVacanciesModal"
                      submitLoading={false}
                      success={false}
                      successMessage="New project vacancies have been created!"
                      title="Create Vacancies"
>
                      <Unknown>
                                            <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={true}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Project"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="project"
                                                                  options={
                                                                                        Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "WatchTower",
                                                                                                                "name": "WatchTower",
                                                                                                              },
                                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Project"
                                            />
                                            <DropdownInput
                                                                  className="wt-dropdown"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  enableSearch={false}
                                                                  extras={null}
                                                                  inputValue=""
                                                                  label="Select Role"
                                                                  loading={false}
                                                                  multipleSelection={false}
                                                                  name="role"
                                                                  options={
                                                                                        Array [
                                                                                                              Object {
                                                                                                                "id": 1,
                                                                                                                "label": "Scrum Master",
                                                                                                                "name": "Scrum Master",
                                                                                                              },
                                                                                                            ]
                                                                  }
                                                                  parent={[Circular]}
                                                                  placeholder="Select Role"
                                            />
                                            <TextInput
                                                                  alertText="Please input a valid number of slots!"
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Vacancy Slots"
                                                                  length={999}
                                                                  name="slots"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                            />
                      </Unknown>
</GenericModal>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              },
              "placeholder": "",
              "testInput": [Function],
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
