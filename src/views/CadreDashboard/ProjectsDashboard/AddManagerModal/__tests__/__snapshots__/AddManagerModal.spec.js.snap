// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add Manager Modal renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddManagerModal
    addProjectManager={[Function]}
    fetchProjectManagers={
        Object {
            "data": Array [
              Object {
                "email": "johndoe@andela.com",
                "id": 1,
                "name": "John Doe",
              },
            ],
            "error": null,
            "loading": false,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Unknown>
        <TextInput
                alertText=""
                className="wt-text-input"
                comment=""
                componentStateKey="inputs"
                defaultStatus={0}
                inputValue=""
                label="Name"
                length={999}
                name="managerName"
                parent={
                        AddManagerModal {
                                "context": Object {},
                                "handleClick": [Function],
                                "handleClose": [Function],
                                "props": Object {
                                  "addProjectManager": [Function],
                                  "fetchProjectManagers": Object {
                                    "data": Array [
                                      Object {
                                        "email": "johndoe@andela.com",
                                        "id": 1,
                                        "name": "John Doe",
                                      },
                                    ],
                                    "error": null,
                                    "loading": false,
                                  },
                                },
                                "refs": Object {},
                                "renderModalBody": [Function],
                                "renderModalContent": [Function],
                                "renderTextInput": [Function],
                                "setState": [Function],
                                "state": Object {
                                  "inputs": Object {},
                                },
                                "updater": Updater {
                                  "_callbacks": Array [],
                                  "_renderer": ReactShallowRenderer {
                                    "_context": Object {},
                                    "_didScheduleRenderPhaseUpdate": false,
                                    "_dispatcher": Object {
                                      "readContext": [Function],
                                      "useCallback": [Function],
                                      "useContext": [Function],
                                      "useDebugValue": [Function],
                                      "useEffect": [Function],
                                      "useImperativeHandle": [Function],
                                      "useLayoutEffect": [Function],
                                      "useMemo": [Function],
                                      "useReducer": [Function],
                                      "useRef": [Function],
                                      "useState": [Function],
                                    },
                                    "_element": <AddManagerModal
                                      addProjectManager={[Function]}
                                      fetchProjectManagers={
                                                    Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "email": "johndoe@andela.com",
                                                                      "id": 1,
                                                                      "name": "John Doe",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                                      }
                        />,
                                    "_firstWorkInProgressHook": null,
                                    "_forcedUpdate": false,
                                    "_instance": [Circular],
                                    "_isReRender": false,
                                    "_newState": null,
                                    "_numberOfReRenders": 0,
                                    "_renderPhaseUpdates": null,
                                    "_rendered": <GenericModal
                                      handleClose={[Function]}
                                      handleSubmit={[Function]}
                                      id="addManagerModal"
                                      successMessage="This team manager has been added to the project form!"
                                      title="Add Team Manager"
                        >
                                      <Unknown>
                                                    <TextInput
                                                                  alertText=""
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Name"
                                                                  length={999}
                                                                  name="managerName"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                                    />
                                                    <TextInput
                                                                  alertText=""
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Email"
                                                                  length={999}
                                                                  name="managerEmail"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                                    />
                                      </Unknown>
                        </GenericModal>,
                                    "_rendering": false,
                                    "_updater": [Circular],
                                    "_workInProgressHook": null,
                                  },
                                },
                                Symbol(enzyme.__setState__): [Function],
                              }
                }
                placeholder=""
                testInput={[Function]}
                type="text"
        />
        <TextInput
                alertText=""
                className="wt-text-input"
                comment=""
                componentStateKey="inputs"
                defaultStatus={0}
                inputValue=""
                label="Email"
                length={999}
                name="managerEmail"
                parent={
                        AddManagerModal {
                                "context": Object {},
                                "handleClick": [Function],
                                "handleClose": [Function],
                                "props": Object {
                                  "addProjectManager": [Function],
                                  "fetchProjectManagers": Object {
                                    "data": Array [
                                      Object {
                                        "email": "johndoe@andela.com",
                                        "id": 1,
                                        "name": "John Doe",
                                      },
                                    ],
                                    "error": null,
                                    "loading": false,
                                  },
                                },
                                "refs": Object {},
                                "renderModalBody": [Function],
                                "renderModalContent": [Function],
                                "renderTextInput": [Function],
                                "setState": [Function],
                                "state": Object {
                                  "inputs": Object {},
                                },
                                "updater": Updater {
                                  "_callbacks": Array [],
                                  "_renderer": ReactShallowRenderer {
                                    "_context": Object {},
                                    "_didScheduleRenderPhaseUpdate": false,
                                    "_dispatcher": Object {
                                      "readContext": [Function],
                                      "useCallback": [Function],
                                      "useContext": [Function],
                                      "useDebugValue": [Function],
                                      "useEffect": [Function],
                                      "useImperativeHandle": [Function],
                                      "useLayoutEffect": [Function],
                                      "useMemo": [Function],
                                      "useReducer": [Function],
                                      "useRef": [Function],
                                      "useState": [Function],
                                    },
                                    "_element": <AddManagerModal
                                      addProjectManager={[Function]}
                                      fetchProjectManagers={
                                                    Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "email": "johndoe@andela.com",
                                                                      "id": 1,
                                                                      "name": "John Doe",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                                      }
                        />,
                                    "_firstWorkInProgressHook": null,
                                    "_forcedUpdate": false,
                                    "_instance": [Circular],
                                    "_isReRender": false,
                                    "_newState": null,
                                    "_numberOfReRenders": 0,
                                    "_renderPhaseUpdates": null,
                                    "_rendered": <GenericModal
                                      handleClose={[Function]}
                                      handleSubmit={[Function]}
                                      id="addManagerModal"
                                      successMessage="This team manager has been added to the project form!"
                                      title="Add Team Manager"
                        >
                                      <Unknown>
                                                    <TextInput
                                                                  alertText=""
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Name"
                                                                  length={999}
                                                                  name="managerName"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                                    />
                                                    <TextInput
                                                                  alertText=""
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Email"
                                                                  length={999}
                                                                  name="managerEmail"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                                    />
                                      </Unknown>
                        </GenericModal>,
                                    "_rendering": false,
                                    "_updater": [Circular],
                                    "_workInProgressHook": null,
                                  },
                                },
                                Symbol(enzyme.__setState__): [Function],
                              }
                }
                placeholder=""
                testInput={[Function]}
                type="text"
        />
</Unknown>,
      "handleClose": [Function],
      "handleSubmit": [Function],
      "id": "addManagerModal",
      "successMessage": "This team manager has been added to the project form!",
      "title": "Add Team Manager",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <TextInput
            alertText=""
            className="wt-text-input"
            comment=""
            componentStateKey="inputs"
            defaultStatus={0}
            inputValue=""
            label="Name"
            length={999}
            name="managerName"
            parent={
                        AddManagerModal {
                                    "context": Object {},
                                    "handleClick": [Function],
                                    "handleClose": [Function],
                                    "props": Object {
                                      "addProjectManager": [Function],
                                      "fetchProjectManagers": Object {
                                        "data": Array [
                                          Object {
                                            "email": "johndoe@andela.com",
                                            "id": 1,
                                            "name": "John Doe",
                                          },
                                        ],
                                        "error": null,
                                        "loading": false,
                                      },
                                    },
                                    "refs": Object {},
                                    "renderModalBody": [Function],
                                    "renderModalContent": [Function],
                                    "renderTextInput": [Function],
                                    "setState": [Function],
                                    "state": Object {
                                      "inputs": Object {},
                                    },
                                    "updater": Updater {
                                      "_callbacks": Array [],
                                      "_renderer": ReactShallowRenderer {
                                        "_context": Object {},
                                        "_didScheduleRenderPhaseUpdate": false,
                                        "_dispatcher": Object {
                                          "readContext": [Function],
                                          "useCallback": [Function],
                                          "useContext": [Function],
                                          "useDebugValue": [Function],
                                          "useEffect": [Function],
                                          "useImperativeHandle": [Function],
                                          "useLayoutEffect": [Function],
                                          "useMemo": [Function],
                                          "useReducer": [Function],
                                          "useRef": [Function],
                                          "useState": [Function],
                                        },
                                        "_element": <AddManagerModal
                                          addProjectManager={[Function]}
                                          fetchProjectManagers={
                                                            Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "email": "johndoe@andela.com",
                                                                                  "id": 1,
                                                                                  "name": "John Doe",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                          }
                        />,
                                        "_firstWorkInProgressHook": null,
                                        "_forcedUpdate": false,
                                        "_instance": [Circular],
                                        "_isReRender": false,
                                        "_newState": null,
                                        "_numberOfReRenders": 0,
                                        "_renderPhaseUpdates": null,
                                        "_rendered": <GenericModal
                                          handleClose={[Function]}
                                          handleSubmit={[Function]}
                                          id="addManagerModal"
                                          successMessage="This team manager has been added to the project form!"
                                          title="Add Team Manager"
                        >
                                          <Unknown>
                                                            <TextInput
                                                                              alertText=""
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Name"
                                                                              length={999}
                                                                              name="managerName"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                            />
                                                            <TextInput
                                                                              alertText=""
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Email"
                                                                              length={999}
                                                                              name="managerEmail"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                            />
                                          </Unknown>
                        </GenericModal>,
                                        "_rendering": false,
                                        "_updater": [Circular],
                                        "_workInProgressHook": null,
                                      },
                                    },
                                    Symbol(enzyme.__setState__): [Function],
                                  }
            }
            placeholder=""
            testInput={[Function]}
            type="text"
/>,
          <TextInput
            alertText=""
            className="wt-text-input"
            comment=""
            componentStateKey="inputs"
            defaultStatus={0}
            inputValue=""
            label="Email"
            length={999}
            name="managerEmail"
            parent={
                        AddManagerModal {
                                    "context": Object {},
                                    "handleClick": [Function],
                                    "handleClose": [Function],
                                    "props": Object {
                                      "addProjectManager": [Function],
                                      "fetchProjectManagers": Object {
                                        "data": Array [
                                          Object {
                                            "email": "johndoe@andela.com",
                                            "id": 1,
                                            "name": "John Doe",
                                          },
                                        ],
                                        "error": null,
                                        "loading": false,
                                      },
                                    },
                                    "refs": Object {},
                                    "renderModalBody": [Function],
                                    "renderModalContent": [Function],
                                    "renderTextInput": [Function],
                                    "setState": [Function],
                                    "state": Object {
                                      "inputs": Object {},
                                    },
                                    "updater": Updater {
                                      "_callbacks": Array [],
                                      "_renderer": ReactShallowRenderer {
                                        "_context": Object {},
                                        "_didScheduleRenderPhaseUpdate": false,
                                        "_dispatcher": Object {
                                          "readContext": [Function],
                                          "useCallback": [Function],
                                          "useContext": [Function],
                                          "useDebugValue": [Function],
                                          "useEffect": [Function],
                                          "useImperativeHandle": [Function],
                                          "useLayoutEffect": [Function],
                                          "useMemo": [Function],
                                          "useReducer": [Function],
                                          "useRef": [Function],
                                          "useState": [Function],
                                        },
                                        "_element": <AddManagerModal
                                          addProjectManager={[Function]}
                                          fetchProjectManagers={
                                                            Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "email": "johndoe@andela.com",
                                                                                  "id": 1,
                                                                                  "name": "John Doe",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                          }
                        />,
                                        "_firstWorkInProgressHook": null,
                                        "_forcedUpdate": false,
                                        "_instance": [Circular],
                                        "_isReRender": false,
                                        "_newState": null,
                                        "_numberOfReRenders": 0,
                                        "_renderPhaseUpdates": null,
                                        "_rendered": <GenericModal
                                          handleClose={[Function]}
                                          handleSubmit={[Function]}
                                          id="addManagerModal"
                                          successMessage="This team manager has been added to the project form!"
                                          title="Add Team Manager"
                        >
                                          <Unknown>
                                                            <TextInput
                                                                              alertText=""
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Name"
                                                                              length={999}
                                                                              name="managerName"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                            />
                                                            <TextInput
                                                                              alertText=""
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Email"
                                                                              length={999}
                                                                              name="managerEmail"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                            />
                                          </Unknown>
                        </GenericModal>,
                                        "_rendering": false,
                                        "_updater": [Circular],
                                        "_workInProgressHook": null,
                                      },
                                    },
                                    Symbol(enzyme.__setState__): [Function],
                                  }
            }
            placeholder=""
            testInput={[Function]}
            type="text"
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alertText": "",
            "className": "wt-text-input",
            "comment": "",
            "componentStateKey": "inputs",
            "defaultStatus": 0,
            "inputValue": "",
            "label": "Name",
            "length": 999,
            "name": "managerName",
            "parent": AddManagerModal {
              "context": Object {},
              "handleClick": [Function],
              "handleClose": [Function],
              "props": Object {
                "addProjectManager": [Function],
                "fetchProjectManagers": Object {
                  "data": Array [
                    Object {
                      "email": "johndoe@andela.com",
                      "id": 1,
                      "name": "John Doe",
                    },
                  ],
                  "error": null,
                  "loading": false,
                },
              },
              "refs": Object {},
              "renderModalBody": [Function],
              "renderModalContent": [Function],
              "renderTextInput": [Function],
              "setState": [Function],
              "state": Object {
                "inputs": Object {},
              },
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_didScheduleRenderPhaseUpdate": false,
                  "_dispatcher": Object {
                    "readContext": [Function],
                    "useCallback": [Function],
                    "useContext": [Function],
                    "useDebugValue": [Function],
                    "useEffect": [Function],
                    "useImperativeHandle": [Function],
                    "useLayoutEffect": [Function],
                    "useMemo": [Function],
                    "useReducer": [Function],
                    "useRef": [Function],
                    "useState": [Function],
                  },
                  "_element": <AddManagerModal
                    addProjectManager={[Function]}
                    fetchProjectManagers={
                                        Object {
                                                            "data": Array [
                                                              Object {
                                                                "email": "johndoe@andela.com",
                                                                "id": 1,
                                                                "name": "John Doe",
                                                              },
                                                            ],
                                                            "error": null,
                                                            "loading": false,
                                                          }
                    }
/>,
                  "_firstWorkInProgressHook": null,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_isReRender": false,
                  "_newState": null,
                  "_numberOfReRenders": 0,
                  "_renderPhaseUpdates": null,
                  "_rendered": <GenericModal
                    handleClose={[Function]}
                    handleSubmit={[Function]}
                    id="addManagerModal"
                    successMessage="This team manager has been added to the project form!"
                    title="Add Team Manager"
>
                    <Unknown>
                                        <TextInput
                                                            alertText=""
                                                            className="wt-text-input"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            inputValue=""
                                                            label="Name"
                                                            length={999}
                                                            name="managerName"
                                                            parent={[Circular]}
                                                            placeholder=""
                                                            testInput={[Function]}
                                                            type="text"
                                        />
                                        <TextInput
                                                            alertText=""
                                                            className="wt-text-input"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            inputValue=""
                                                            label="Email"
                                                            length={999}
                                                            name="managerEmail"
                                                            parent={[Circular]}
                                                            placeholder=""
                                                            testInput={[Function]}
                                                            type="text"
                                        />
                    </Unknown>
</GenericModal>,
                  "_rendering": false,
                  "_updater": [Circular],
                  "_workInProgressHook": null,
                },
              },
              Symbol(enzyme.__setState__): [Function],
            },
            "placeholder": "",
            "testInput": [Function],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alertText": "",
            "className": "wt-text-input",
            "comment": "",
            "componentStateKey": "inputs",
            "defaultStatus": 0,
            "inputValue": "",
            "label": "Email",
            "length": 999,
            "name": "managerEmail",
            "parent": AddManagerModal {
              "context": Object {},
              "handleClick": [Function],
              "handleClose": [Function],
              "props": Object {
                "addProjectManager": [Function],
                "fetchProjectManagers": Object {
                  "data": Array [
                    Object {
                      "email": "johndoe@andela.com",
                      "id": 1,
                      "name": "John Doe",
                    },
                  ],
                  "error": null,
                  "loading": false,
                },
              },
              "refs": Object {},
              "renderModalBody": [Function],
              "renderModalContent": [Function],
              "renderTextInput": [Function],
              "setState": [Function],
              "state": Object {
                "inputs": Object {},
              },
              "updater": Updater {
                "_callbacks": Array [],
                "_renderer": ReactShallowRenderer {
                  "_context": Object {},
                  "_didScheduleRenderPhaseUpdate": false,
                  "_dispatcher": Object {
                    "readContext": [Function],
                    "useCallback": [Function],
                    "useContext": [Function],
                    "useDebugValue": [Function],
                    "useEffect": [Function],
                    "useImperativeHandle": [Function],
                    "useLayoutEffect": [Function],
                    "useMemo": [Function],
                    "useReducer": [Function],
                    "useRef": [Function],
                    "useState": [Function],
                  },
                  "_element": <AddManagerModal
                    addProjectManager={[Function]}
                    fetchProjectManagers={
                                        Object {
                                                            "data": Array [
                                                              Object {
                                                                "email": "johndoe@andela.com",
                                                                "id": 1,
                                                                "name": "John Doe",
                                                              },
                                                            ],
                                                            "error": null,
                                                            "loading": false,
                                                          }
                    }
/>,
                  "_firstWorkInProgressHook": null,
                  "_forcedUpdate": false,
                  "_instance": [Circular],
                  "_isReRender": false,
                  "_newState": null,
                  "_numberOfReRenders": 0,
                  "_renderPhaseUpdates": null,
                  "_rendered": <GenericModal
                    handleClose={[Function]}
                    handleSubmit={[Function]}
                    id="addManagerModal"
                    successMessage="This team manager has been added to the project form!"
                    title="Add Team Manager"
>
                    <Unknown>
                                        <TextInput
                                                            alertText=""
                                                            className="wt-text-input"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            inputValue=""
                                                            label="Name"
                                                            length={999}
                                                            name="managerName"
                                                            parent={[Circular]}
                                                            placeholder=""
                                                            testInput={[Function]}
                                                            type="text"
                                        />
                                        <TextInput
                                                            alertText=""
                                                            className="wt-text-input"
                                                            comment=""
                                                            componentStateKey="inputs"
                                                            defaultStatus={0}
                                                            inputValue=""
                                                            label="Email"
                                                            length={999}
                                                            name="managerEmail"
                                                            parent={[Circular]}
                                                            placeholder=""
                                                            testInput={[Function]}
                                                            type="text"
                                        />
                    </Unknown>
</GenericModal>,
                  "_rendering": false,
                  "_updater": [Circular],
                  "_workInProgressHook": null,
                },
              },
              Symbol(enzyme.__setState__): [Function],
            },
            "placeholder": "",
            "testInput": [Function],
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Unknown>
          <TextInput
                    alertText=""
                    className="wt-text-input"
                    comment=""
                    componentStateKey="inputs"
                    defaultStatus={0}
                    inputValue=""
                    label="Name"
                    length={999}
                    name="managerName"
                    parent={
                              AddManagerModal {
                                        "context": Object {},
                                        "handleClick": [Function],
                                        "handleClose": [Function],
                                        "props": Object {
                                          "addProjectManager": [Function],
                                          "fetchProjectManagers": Object {
                                            "data": Array [
                                              Object {
                                                "email": "johndoe@andela.com",
                                                "id": 1,
                                                "name": "John Doe",
                                              },
                                            ],
                                            "error": null,
                                            "loading": false,
                                          },
                                        },
                                        "refs": Object {},
                                        "renderModalBody": [Function],
                                        "renderModalContent": [Function],
                                        "renderTextInput": [Function],
                                        "setState": [Function],
                                        "state": Object {
                                          "inputs": Object {},
                                        },
                                        "updater": Updater {
                                          "_callbacks": Array [],
                                          "_renderer": ReactShallowRenderer {
                                            "_context": Object {},
                                            "_didScheduleRenderPhaseUpdate": false,
                                            "_dispatcher": Object {
                                              "readContext": [Function],
                                              "useCallback": [Function],
                                              "useContext": [Function],
                                              "useDebugValue": [Function],
                                              "useEffect": [Function],
                                              "useImperativeHandle": [Function],
                                              "useLayoutEffect": [Function],
                                              "useMemo": [Function],
                                              "useReducer": [Function],
                                              "useRef": [Function],
                                              "useState": [Function],
                                            },
                                            "_element": <AddManagerModal
                                              addProjectManager={[Function]}
                                              fetchProjectManagers={
                                                              Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "email": "johndoe@andela.com",
                                                                                  "id": 1,
                                                                                  "name": "John Doe",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                              }
                              />,
                                            "_firstWorkInProgressHook": null,
                                            "_forcedUpdate": false,
                                            "_instance": [Circular],
                                            "_isReRender": false,
                                            "_newState": null,
                                            "_numberOfReRenders": 0,
                                            "_renderPhaseUpdates": null,
                                            "_rendered": <GenericModal
                                              handleClose={[Function]}
                                              handleSubmit={[Function]}
                                              id="addManagerModal"
                                              successMessage="This team manager has been added to the project form!"
                                              title="Add Team Manager"
                              >
                                              <Unknown>
                                                              <TextInput
                                                                              alertText=""
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Name"
                                                                              length={999}
                                                                              name="managerName"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                              />
                                                              <TextInput
                                                                              alertText=""
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Email"
                                                                              length={999}
                                                                              name="managerEmail"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                              />
                                              </Unknown>
                              </GenericModal>,
                                            "_rendering": false,
                                            "_updater": [Circular],
                                            "_workInProgressHook": null,
                                          },
                                        },
                                        Symbol(enzyme.__setState__): [Function],
                                      }
                    }
                    placeholder=""
                    testInput={[Function]}
                    type="text"
          />
          <TextInput
                    alertText=""
                    className="wt-text-input"
                    comment=""
                    componentStateKey="inputs"
                    defaultStatus={0}
                    inputValue=""
                    label="Email"
                    length={999}
                    name="managerEmail"
                    parent={
                              AddManagerModal {
                                        "context": Object {},
                                        "handleClick": [Function],
                                        "handleClose": [Function],
                                        "props": Object {
                                          "addProjectManager": [Function],
                                          "fetchProjectManagers": Object {
                                            "data": Array [
                                              Object {
                                                "email": "johndoe@andela.com",
                                                "id": 1,
                                                "name": "John Doe",
                                              },
                                            ],
                                            "error": null,
                                            "loading": false,
                                          },
                                        },
                                        "refs": Object {},
                                        "renderModalBody": [Function],
                                        "renderModalContent": [Function],
                                        "renderTextInput": [Function],
                                        "setState": [Function],
                                        "state": Object {
                                          "inputs": Object {},
                                        },
                                        "updater": Updater {
                                          "_callbacks": Array [],
                                          "_renderer": ReactShallowRenderer {
                                            "_context": Object {},
                                            "_didScheduleRenderPhaseUpdate": false,
                                            "_dispatcher": Object {
                                              "readContext": [Function],
                                              "useCallback": [Function],
                                              "useContext": [Function],
                                              "useDebugValue": [Function],
                                              "useEffect": [Function],
                                              "useImperativeHandle": [Function],
                                              "useLayoutEffect": [Function],
                                              "useMemo": [Function],
                                              "useReducer": [Function],
                                              "useRef": [Function],
                                              "useState": [Function],
                                            },
                                            "_element": <AddManagerModal
                                              addProjectManager={[Function]}
                                              fetchProjectManagers={
                                                              Object {
                                                                              "data": Array [
                                                                                Object {
                                                                                  "email": "johndoe@andela.com",
                                                                                  "id": 1,
                                                                                  "name": "John Doe",
                                                                                },
                                                                              ],
                                                                              "error": null,
                                                                              "loading": false,
                                                                            }
                                              }
                              />,
                                            "_firstWorkInProgressHook": null,
                                            "_forcedUpdate": false,
                                            "_instance": [Circular],
                                            "_isReRender": false,
                                            "_newState": null,
                                            "_numberOfReRenders": 0,
                                            "_renderPhaseUpdates": null,
                                            "_rendered": <GenericModal
                                              handleClose={[Function]}
                                              handleSubmit={[Function]}
                                              id="addManagerModal"
                                              successMessage="This team manager has been added to the project form!"
                                              title="Add Team Manager"
                              >
                                              <Unknown>
                                                              <TextInput
                                                                              alertText=""
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Name"
                                                                              length={999}
                                                                              name="managerName"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                              />
                                                              <TextInput
                                                                              alertText=""
                                                                              className="wt-text-input"
                                                                              comment=""
                                                                              componentStateKey="inputs"
                                                                              defaultStatus={0}
                                                                              inputValue=""
                                                                              label="Email"
                                                                              length={999}
                                                                              name="managerEmail"
                                                                              parent={[Circular]}
                                                                              placeholder=""
                                                                              testInput={[Function]}
                                                                              type="text"
                                                              />
                                              </Unknown>
                              </GenericModal>,
                                            "_rendering": false,
                                            "_updater": [Circular],
                                            "_workInProgressHook": null,
                                          },
                                        },
                                        Symbol(enzyme.__setState__): [Function],
                                      }
                    }
                    placeholder=""
                    testInput={[Function]}
                    type="text"
          />
</Unknown>,
        "handleClose": [Function],
        "handleSubmit": [Function],
        "id": "addManagerModal",
        "successMessage": "This team manager has been added to the project form!",
        "title": "Add Team Manager",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <TextInput
              alertText=""
              className="wt-text-input"
              comment=""
              componentStateKey="inputs"
              defaultStatus={0}
              inputValue=""
              label="Name"
              length={999}
              name="managerName"
              parent={
                            AddManagerModal {
                                          "context": Object {},
                                          "handleClick": [Function],
                                          "handleClose": [Function],
                                          "props": Object {
                                            "addProjectManager": [Function],
                                            "fetchProjectManagers": Object {
                                              "data": Array [
                                                Object {
                                                  "email": "johndoe@andela.com",
                                                  "id": 1,
                                                  "name": "John Doe",
                                                },
                                              ],
                                              "error": null,
                                              "loading": false,
                                            },
                                          },
                                          "refs": Object {},
                                          "renderModalBody": [Function],
                                          "renderModalContent": [Function],
                                          "renderTextInput": [Function],
                                          "setState": [Function],
                                          "state": Object {
                                            "inputs": Object {},
                                          },
                                          "updater": Updater {
                                            "_callbacks": Array [],
                                            "_renderer": ReactShallowRenderer {
                                              "_context": Object {},
                                              "_didScheduleRenderPhaseUpdate": false,
                                              "_dispatcher": Object {
                                                "readContext": [Function],
                                                "useCallback": [Function],
                                                "useContext": [Function],
                                                "useDebugValue": [Function],
                                                "useEffect": [Function],
                                                "useImperativeHandle": [Function],
                                                "useLayoutEffect": [Function],
                                                "useMemo": [Function],
                                                "useReducer": [Function],
                                                "useRef": [Function],
                                                "useState": [Function],
                                              },
                                              "_element": <AddManagerModal
                                                addProjectManager={[Function]}
                                                fetchProjectManagers={
                                                                    Object {
                                                                                        "data": Array [
                                                                                          Object {
                                                                                            "email": "johndoe@andela.com",
                                                                                            "id": 1,
                                                                                            "name": "John Doe",
                                                                                          },
                                                                                        ],
                                                                                        "error": null,
                                                                                        "loading": false,
                                                                                      }
                                                }
                            />,
                                              "_firstWorkInProgressHook": null,
                                              "_forcedUpdate": false,
                                              "_instance": [Circular],
                                              "_isReRender": false,
                                              "_newState": null,
                                              "_numberOfReRenders": 0,
                                              "_renderPhaseUpdates": null,
                                              "_rendered": <GenericModal
                                                handleClose={[Function]}
                                                handleSubmit={[Function]}
                                                id="addManagerModal"
                                                successMessage="This team manager has been added to the project form!"
                                                title="Add Team Manager"
                            >
                                                <Unknown>
                                                                    <TextInput
                                                                                        alertText=""
                                                                                        className="wt-text-input"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        inputValue=""
                                                                                        label="Name"
                                                                                        length={999}
                                                                                        name="managerName"
                                                                                        parent={[Circular]}
                                                                                        placeholder=""
                                                                                        testInput={[Function]}
                                                                                        type="text"
                                                                    />
                                                                    <TextInput
                                                                                        alertText=""
                                                                                        className="wt-text-input"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        inputValue=""
                                                                                        label="Email"
                                                                                        length={999}
                                                                                        name="managerEmail"
                                                                                        parent={[Circular]}
                                                                                        placeholder=""
                                                                                        testInput={[Function]}
                                                                                        type="text"
                                                                    />
                                                </Unknown>
                            </GenericModal>,
                                              "_rendering": false,
                                              "_updater": [Circular],
                                              "_workInProgressHook": null,
                                            },
                                          },
                                          Symbol(enzyme.__setState__): [Function],
                                        }
              }
              placeholder=""
              testInput={[Function]}
              type="text"
/>,
            <TextInput
              alertText=""
              className="wt-text-input"
              comment=""
              componentStateKey="inputs"
              defaultStatus={0}
              inputValue=""
              label="Email"
              length={999}
              name="managerEmail"
              parent={
                            AddManagerModal {
                                          "context": Object {},
                                          "handleClick": [Function],
                                          "handleClose": [Function],
                                          "props": Object {
                                            "addProjectManager": [Function],
                                            "fetchProjectManagers": Object {
                                              "data": Array [
                                                Object {
                                                  "email": "johndoe@andela.com",
                                                  "id": 1,
                                                  "name": "John Doe",
                                                },
                                              ],
                                              "error": null,
                                              "loading": false,
                                            },
                                          },
                                          "refs": Object {},
                                          "renderModalBody": [Function],
                                          "renderModalContent": [Function],
                                          "renderTextInput": [Function],
                                          "setState": [Function],
                                          "state": Object {
                                            "inputs": Object {},
                                          },
                                          "updater": Updater {
                                            "_callbacks": Array [],
                                            "_renderer": ReactShallowRenderer {
                                              "_context": Object {},
                                              "_didScheduleRenderPhaseUpdate": false,
                                              "_dispatcher": Object {
                                                "readContext": [Function],
                                                "useCallback": [Function],
                                                "useContext": [Function],
                                                "useDebugValue": [Function],
                                                "useEffect": [Function],
                                                "useImperativeHandle": [Function],
                                                "useLayoutEffect": [Function],
                                                "useMemo": [Function],
                                                "useReducer": [Function],
                                                "useRef": [Function],
                                                "useState": [Function],
                                              },
                                              "_element": <AddManagerModal
                                                addProjectManager={[Function]}
                                                fetchProjectManagers={
                                                                    Object {
                                                                                        "data": Array [
                                                                                          Object {
                                                                                            "email": "johndoe@andela.com",
                                                                                            "id": 1,
                                                                                            "name": "John Doe",
                                                                                          },
                                                                                        ],
                                                                                        "error": null,
                                                                                        "loading": false,
                                                                                      }
                                                }
                            />,
                                              "_firstWorkInProgressHook": null,
                                              "_forcedUpdate": false,
                                              "_instance": [Circular],
                                              "_isReRender": false,
                                              "_newState": null,
                                              "_numberOfReRenders": 0,
                                              "_renderPhaseUpdates": null,
                                              "_rendered": <GenericModal
                                                handleClose={[Function]}
                                                handleSubmit={[Function]}
                                                id="addManagerModal"
                                                successMessage="This team manager has been added to the project form!"
                                                title="Add Team Manager"
                            >
                                                <Unknown>
                                                                    <TextInput
                                                                                        alertText=""
                                                                                        className="wt-text-input"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        inputValue=""
                                                                                        label="Name"
                                                                                        length={999}
                                                                                        name="managerName"
                                                                                        parent={[Circular]}
                                                                                        placeholder=""
                                                                                        testInput={[Function]}
                                                                                        type="text"
                                                                    />
                                                                    <TextInput
                                                                                        alertText=""
                                                                                        className="wt-text-input"
                                                                                        comment=""
                                                                                        componentStateKey="inputs"
                                                                                        defaultStatus={0}
                                                                                        inputValue=""
                                                                                        label="Email"
                                                                                        length={999}
                                                                                        name="managerEmail"
                                                                                        parent={[Circular]}
                                                                                        placeholder=""
                                                                                        testInput={[Function]}
                                                                                        type="text"
                                                                    />
                                                </Unknown>
                            </GenericModal>,
                                              "_rendering": false,
                                              "_updater": [Circular],
                                              "_workInProgressHook": null,
                                            },
                                          },
                                          Symbol(enzyme.__setState__): [Function],
                                        }
              }
              placeholder=""
              testInput={[Function]}
              type="text"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "alertText": "",
              "className": "wt-text-input",
              "comment": "",
              "componentStateKey": "inputs",
              "defaultStatus": 0,
              "inputValue": "",
              "label": "Name",
              "length": 999,
              "name": "managerName",
              "parent": AddManagerModal {
                "context": Object {},
                "handleClick": [Function],
                "handleClose": [Function],
                "props": Object {
                  "addProjectManager": [Function],
                  "fetchProjectManagers": Object {
                    "data": Array [
                      Object {
                        "email": "johndoe@andela.com",
                        "id": 1,
                        "name": "John Doe",
                      },
                    ],
                    "error": null,
                    "loading": false,
                  },
                },
                "refs": Object {},
                "renderModalBody": [Function],
                "renderModalContent": [Function],
                "renderTextInput": [Function],
                "setState": [Function],
                "state": Object {
                  "inputs": Object {},
                },
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useState": [Function],
                    },
                    "_element": <AddManagerModal
                      addProjectManager={[Function]}
                      fetchProjectManagers={
                                            Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "email": "johndoe@andela.com",
                                                                      "id": 1,
                                                                      "name": "John Doe",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                      }
/>,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <GenericModal
                      handleClose={[Function]}
                      handleSubmit={[Function]}
                      id="addManagerModal"
                      successMessage="This team manager has been added to the project form!"
                      title="Add Team Manager"
>
                      <Unknown>
                                            <TextInput
                                                                  alertText=""
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Name"
                                                                  length={999}
                                                                  name="managerName"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                            />
                                            <TextInput
                                                                  alertText=""
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Email"
                                                                  length={999}
                                                                  name="managerEmail"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                            />
                      </Unknown>
</GenericModal>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              },
              "placeholder": "",
              "testInput": [Function],
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "alertText": "",
              "className": "wt-text-input",
              "comment": "",
              "componentStateKey": "inputs",
              "defaultStatus": 0,
              "inputValue": "",
              "label": "Email",
              "length": 999,
              "name": "managerEmail",
              "parent": AddManagerModal {
                "context": Object {},
                "handleClick": [Function],
                "handleClose": [Function],
                "props": Object {
                  "addProjectManager": [Function],
                  "fetchProjectManagers": Object {
                    "data": Array [
                      Object {
                        "email": "johndoe@andela.com",
                        "id": 1,
                        "name": "John Doe",
                      },
                    ],
                    "error": null,
                    "loading": false,
                  },
                },
                "refs": Object {},
                "renderModalBody": [Function],
                "renderModalContent": [Function],
                "renderTextInput": [Function],
                "setState": [Function],
                "state": Object {
                  "inputs": Object {},
                },
                "updater": Updater {
                  "_callbacks": Array [],
                  "_renderer": ReactShallowRenderer {
                    "_context": Object {},
                    "_didScheduleRenderPhaseUpdate": false,
                    "_dispatcher": Object {
                      "readContext": [Function],
                      "useCallback": [Function],
                      "useContext": [Function],
                      "useDebugValue": [Function],
                      "useEffect": [Function],
                      "useImperativeHandle": [Function],
                      "useLayoutEffect": [Function],
                      "useMemo": [Function],
                      "useReducer": [Function],
                      "useRef": [Function],
                      "useState": [Function],
                    },
                    "_element": <AddManagerModal
                      addProjectManager={[Function]}
                      fetchProjectManagers={
                                            Object {
                                                                  "data": Array [
                                                                    Object {
                                                                      "email": "johndoe@andela.com",
                                                                      "id": 1,
                                                                      "name": "John Doe",
                                                                    },
                                                                  ],
                                                                  "error": null,
                                                                  "loading": false,
                                                                }
                      }
/>,
                    "_firstWorkInProgressHook": null,
                    "_forcedUpdate": false,
                    "_instance": [Circular],
                    "_isReRender": false,
                    "_newState": null,
                    "_numberOfReRenders": 0,
                    "_renderPhaseUpdates": null,
                    "_rendered": <GenericModal
                      handleClose={[Function]}
                      handleSubmit={[Function]}
                      id="addManagerModal"
                      successMessage="This team manager has been added to the project form!"
                      title="Add Team Manager"
>
                      <Unknown>
                                            <TextInput
                                                                  alertText=""
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Name"
                                                                  length={999}
                                                                  name="managerName"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                            />
                                            <TextInput
                                                                  alertText=""
                                                                  className="wt-text-input"
                                                                  comment=""
                                                                  componentStateKey="inputs"
                                                                  defaultStatus={0}
                                                                  inputValue=""
                                                                  label="Email"
                                                                  length={999}
                                                                  name="managerEmail"
                                                                  parent={[Circular]}
                                                                  placeholder=""
                                                                  testInput={[Function]}
                                                                  type="text"
                                            />
                      </Unknown>
</GenericModal>,
                    "_rendering": false,
                    "_updater": [Circular],
                    "_workInProgressHook": null,
                  },
                },
                Symbol(enzyme.__setState__): [Function],
              },
              "placeholder": "",
              "testInput": [Function],
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
