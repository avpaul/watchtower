// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectFormContainer component renders correctly 1`] = `
<ProjectForm
  createNewProject={[Function]}
  createProject={
    Object {
      "data": Object {},
      "error": Object {},
      "loading": false,
    }
  }
  editProject={[Function]}
  editSingleProject={
    Object {
      "data": Object {},
      "error": Object {},
      "loading": false,
    }
  }
  getAProject={[Function]}
  history={
    Object {
      "replace": [MockFunction],
    }
  }
  manager={Object {}}
  newTechnology=""
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
  user={
    Object {
      "email": "ty@andela.com",
      "roles": Object {
        "WATCH_TOWER_OPS": "34323234Yf-34",
      },
    }
  }
/>
`;

exports[`ProjectFormContainer component should map state to props 1`] = `
Object {
  "createProject": Object {
    "data": Object {},
    "error": Object {},
    "loading": false,
  },
  "editSingleProject": Object {
    "data": Object {},
    "error": Object {},
    "loading": false,
  },
  "getProject": undefined,
  "manager": Object {},
  "newTechnology": "",
}
`;
