// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test ReportsDashboard component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReportsDashboard
    $page={[Function]}
    $perPage={[Function]}
    fetchEngineersReportActions={[Function]}
    metaData={
        Object {
            "page": 1,
            "perPage": 20,
            "perPageOptions": Array [
              "5",
              "10",
              "19",
              "30",
              "50",
              "100",
            ],
            "total": 0,
          }
    }
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ReportSummary
        engineers={Array []}
        handlePageChange={[Function]}
        handleSearchChange={[Function]}
        handleShowSizeChange={[Function]}
        pageSizeOptions={Array []}
        total={NaN}
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "engineers": Array [],
        "handlePageChange": [Function],
        "handleSearchChange": [Function],
        "handleShowSizeChange": [Function],
        "pageSizeOptions": Array [],
        "total": NaN,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ReportSummary
          engineers={Array []}
          handlePageChange={[Function]}
          handleSearchChange={[Function]}
          handleShowSizeChange={[Function]}
          pageSizeOptions={Array []}
          total={NaN}
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "engineers": Array [],
          "handlePageChange": [Function],
          "handleSearchChange": [Function],
          "handleShowSizeChange": [Function],
          "pageSizeOptions": Array [],
          "total": NaN,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
