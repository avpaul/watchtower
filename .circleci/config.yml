# CircleCI 2.0 configuration file

# Check https://circleci.com/docs/1.0/language-nodejs/ for more details.
version: 2
defaults: &defaults
  docker:
    - image: circleci/node:carbon
  working_directory: ~/watch-tower
  environment:
    TERM: xterm-256color

install_npm_packages: &install_npm_packages
  run:
    name: Install NPM packages
    command: yarn install

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/watch-tower

filters: &filters
  filters:
    branches:
      only:
        - master
        - develop
        - /(release|hotfix)\/v[0-9].[0-9].[0-9]/

persist_to_workspace: &persist_to_workspace
  persist_to_workspace:
    root: .
    paths: .

build_and_push_image: &build_and_push_image
  run:
    name: build image
    command: |
      export IMG_TAG=$(echo $CIRCLE_SHA1 | cut -c -7)
      echo $IMG_TAG
      docker login -u _json_key -p "$(echo $GCLOUD_SERVICE_KEY)" https://gcr.io
      docker build -f docker/prod/Dockerfile -t gcr.io/$GCP_PROJECT_ID/$PROJECT_NAME:$IMG_TAG .
      docker push gcr.io/$GCP_PROJECT_ID/$PROJECT_NAME:$IMG_TAG

configure_gcloud: &configure_gcloud
  run:
    name: configure gcloud default settings
    command: |
      gcloud auth activate-service-account --key-file ~/watch-tower/auth_key.json
      gcloud container clusters get-credentials watch-tower-$namespace-apprenticeship --zone us-central1-a --project $GCP_PROJECT_ID

deploy_to_kubernetes: &deploy_to_kubernetes
  run:
    name: Run ansible playbook to configure kubernetes
    command: |
      export IMG_TAG=$(echo $CIRCLE_SHA1 | cut -c -7)
      cd watchtower-deployment-scripts
      ansible-playbook ansible/frontend/main.yml -vvv

jobs:
  build_staging:
    <<: *defaults
    steps:
      - *attach_workspace
      - *install_npm_packages
      - run:
          name: build static files
          command: |
            export REACT_APP_GOOGLE_AUTH_REDIRECT_URL=$STAGING_REACT_APP_GOOGLE_AUTH_REDIRECT_URL
            export REACT_APP_ANDELA_AUTH_HOST=$STAGING_REACT_APP_ANDELA_AUTH_HOST
            export REACT_APP_WATCHTOWER_SERVER=$STAGING_REACT_APP_WATCHTOWER_SERVER
            export REACT_APP_BUGSNAG_API_KEY=$STAGING_REACT_APP_BUGSNAG_API_KEY
            export REACT_APP_DEFAULT_WATCHTOWER_TTL_EMAIL=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_TTL_EMAIL
            export REACT_APP_DEFAULT_WATCHTOWER_TTL_NAME=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_TTL_NAME
            export REACT_APP_DEFAULT_WATCHTOWER_LF_EMAIL=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_LF_EMAIL
            export REACT_APP_DEFAULT_WATCHTOWER_LF_NAME=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_LF_NAME
            export REACT_APP_DEFAULT_WATCHTOWER_FELLOW_EMAIL=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_FELLOW_EMAIL
            export REACT_APP_WATCHTOWER_ROLES=$STAGING_REACT_APP_WATCHTOWER_ROLES
            export REACT_APP_DEFAULT_WATCHTOWER_EM_EMAIL=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_EM_EMAIL
            export REACT_APP_DEFAULT_WATCHTOWER_SIMULATIONS_LEAD_EMAIL=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_SIMULATIONS_LEAD_EMAIL
            yarn build
      - *persist_to_workspace

  build_production:
    <<: *defaults
    steps:
      - *attach_workspace
      - *install_npm_packages
      - run:
          name: build static files
          command: |
            export REACT_APP_GOOGLE_AUTH_REDIRECT_URL=$PROD_REACT_APP_GOOGLE_AUTH_REDIRECT_URL
            export REACT_APP_ANDELA_AUTH_HOST=$PROD_REACT_APP_ANDELA_AUTH_HOST
            export REACT_APP_WATCHTOWER_SERVER=$PROD_REACT_APP_WATCHTOWER_SERVER
            export REACT_APP_BUGSNAG_API_KEY=$PROD_REACT_APP_BUGSNAG_API_KEY
            export REACT_APP_DEFAULT_WATCHTOWER_TTL_EMAIL=$PROD_REACT_APP_DEFAULT_WATCHTOWER_TTL_EMAIL
            export REACT_APP_DEFAULT_WATCHTOWER_TTL_NAME=$PROD_REACT_APP_DEFAULT_WATCHTOWER_TTL_NAME
            export REACT_APP_DEFAULT_WATCHTOWER_LF_EMAIL=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_LF_EMAIL
            export REACT_APP_DEFAULT_WATCHTOWER_LF_NAME=$STAGING_REACT_APP_DEFAULT_WATCHTOWER_LF_NAME
            export REACT_APP_DEFAULT_WATCHTOWER_FELLOW_EMAIL=$PROD_REACT_APP_DEFAULT_WATCHTOWER_FELLOW_EMAIL
            export REACT_APP_WATCHTOWER_ROLES=$PROD_REACT_APP_WATCHTOWER_ROLES
            export REACT_APP_DEFAULT_WATCHTOWER_EM_EMAIL=$PROD_REACT_APP_DEFAULT_WATCHTOWER_EM_EMAIL
            export REACT_APP_DEFAULT_WATCHTOWER_SIMULATIONS_LEAD_EMAIL=$PROD_REACT_APP_DEFAULT_WATCHTOWER_SIMULATIONS_LEAD_EMAIL
            export REACT_APP_GOOGLE_ANALYTICS_ID=$REACT_APP_GOOGLE_ANALYTICS_ID
            yarn build
      - *persist_to_workspace

  deploy_to_staging:
    docker:
      - image: gcr.io/$GCP_PROJECT_ID/watchtower-frontend-base
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
        environment:
          GOOGLE_APPLICATION_CREDENTIALS: /root/watch-tower/auth_key.json
          DEPLOYMENT_SCRIPTS_REPO: git@github.com:andela/watchtower-deployment-scripts.git
          IMAGE_TAG: $(echo $CIRCLE_SHA1 | cut -c -7)
          namespace: staging

    working_directory: ~/watch-tower
    steps:
      - checkout
      - setup_remote_docker
      - *attach_workspace
      - run:
          name: Add gcloud key to json file
          command: echo $GCLOUD_SERVICE_KEY > ~/watch-tower/auth_key.json
      - *configure_gcloud
      - *build_and_push_image
      - run:
          name: Clone the deployment scripts repo
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            git clone -b develop ${DEPLOYMENT_SCRIPTS_REPO}
      - *deploy_to_kubernetes

  deploy_to_production:
    docker:
      - image: gcr.io/$GCP_PROJECT_ID/watchtower-frontend-base
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
        environment:
          GOOGLE_APPLICATION_CREDENTIALS: /root/watch-tower/auth_key.json
          DEPLOYMENT_SCRIPTS_REPO: git@github.com:andela/watchtower-deployment-scripts.git
          IMAGE_TAG: $(echo $CIRCLE_SHA1 | cut -c -7)
          namespace: production

    working_directory: ~/watch-tower
    steps:
      - checkout
      - setup_remote_docker
      - *attach_workspace
      - run:
          name: Add gcloud key to json file
          command: echo $GCLOUD_SERVICE_KEY > ~/watch-tower/auth_key.json
      - *configure_gcloud
      - *build_and_push_image
      - run:
          name: Clone the deployment scripts repo
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            git clone -b develop ${DEPLOYMENT_SCRIPTS_REPO}
      - *deploy_to_kubernetes

  checkout:
    <<: *defaults
    steps:
      - checkout
      - *attach_workspace
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-
      - *install_npm_packages
      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths: node_modules
      - *persist_to_workspace

  check_vulnerabilities:
    <<: *defaults
    steps:
      - *attach_workspace
      - *install_npm_packages
      - run:
          name: Verify and Check Npm packages for vulnerabilities
          command: |
            yarn check --integrity
            # npm i --package-lock-only
            # npm audit

  slack_staging_notification:
    working_directory: ~/watch-tower
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Slack notification
          command: .circleci/slack.sh

  slack_production_notification:
    working_directory: ~/watch-tower
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Slack notification
          command: .circleci/slack.sh

  lint:
    <<: *defaults
    steps:
      - *attach_workspace
      - *install_npm_packages
      - run:
          name: Run watch-tower Test Suites
          command: yarn lint

  test_and_report:
    <<: *defaults
    steps:
      - *attach_workspace
      - *install_npm_packages
      - run:
          name: Install codeclimate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run watch-tower Test Suites
          command: |
            ./cc-test-reporter before-build
            yarn test --coverage
            ./cc-test-reporter format-coverage coverage/lcov.info -t lcov
            ./cc-test-reporter upload-coverage

workflows:
  version: 2
  run_tests:
    jobs:
      - checkout
      - check_vulnerabilities:
          requires:
            - checkout
      - lint:
          requires:
            - checkout
      - build_staging:
          requires:
            - checkout
          filters:
            branches:
              only: develop
      - build_production:
          requires:
            - checkout
          filters:
            branches:
              only: master
      - test_and_report:
          requires:
            - checkout
      - deploy_to_staging:
          requires:
            - build_staging
            - test_and_report
          filters:
            branches:
              only: develop
      - slack_staging_notification:
          requires:
            - deploy_to_staging
          filters:
            branches:
              only: develop
      - deploy_to_production:
          requires:
            - build_production
            - test_and_report
          filters:
            branches:
              only: master
      - slack_production_notification:
          requires:
            - deploy_to_production
          filters:
            branches:
              only: master
